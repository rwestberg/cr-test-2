diff a/src/java.base/share/classes/java/util/concurrent/UnboundedExecutor.java b/src/java.base/share/classes/java/util/concurrent/UnboundedExecutor.java
--- a/src/java.base/share/classes/java/util/concurrent/UnboundedExecutor.java
+++ b/src/java.base/share/classes/java/util/concurrent/UnboundedExecutor.java
@@ -22,10 +22,13 @@
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 package java.util.concurrent;
 
+import jdk.internal.access.JavaLangAccess;
+import jdk.internal.access.SharedSecrets;
+
 import java.lang.invoke.MethodHandles;
 import java.lang.invoke.VarHandle;
 import java.util.List;
 import java.util.Objects;
 import java.util.Set;
@@ -50,10 +53,12 @@
             throw new InternalError(e);
         }
     }
     private volatile int state;
 
+    private static final JavaLangAccess jla = SharedSecrets.getJavaLangAccess();
+
     // states: RUNNING -> SHUTDOWN -> TERMINATED
     private static final int RUNNING    = 0;
     private static final int SHUTDOWN   = 1;
     private static final int TERMINATED = 2;
 
@@ -162,10 +167,11 @@
             } finally {
                 onTerminate(Thread.currentThread());
             }
         };
         Thread thread = factory.newThread(wrapper);
+        jla.setParent(thread, Thread.currentThread());
         threads.add(thread);
         boolean started = false;
         try {
             if (state == RUNNING) {
                 thread.start();
