diff a/src/java.base/share/classes/java/lang/Thread.java b/src/java.base/share/classes/java/lang/Thread.java
--- a/src/java.base/share/classes/java/lang/Thread.java
+++ b/src/java.base/share/classes/java/lang/Thread.java
@@ -149,10 +149,27 @@
     private ClassLoader contextClassLoader;
 
     // inherited AccessControlContext, TBD: move this to FieldHolder
     private AccessControlContext inheritedAccessControlContext;
 
+    private Thread parent;
+
+    /**
+     * @return The parent thread;
+     */
+    Thread getParent() {
+        return parent;
+    }
+
+    /**
+     * @param t
+     * Set the parent thread;
+     */
+    void setParent(Thread t) {
+        parent = t;
+    }
+
     /* For autonumbering anonymous threads. */
     private static int threadInitNumber;
     private static synchronized int nextThreadNum() {
         return threadInitNumber++;
     }
@@ -302,11 +319,11 @@
     /**
      * TBD
      * @return TBD
      */
     @HotSpotIntrinsicCandidate
-    static native Thread currentThread0();
+    private static native Thread currentThread0();
 
     /**
      * A hint to the scheduler that the current thread is willing to yield
      * its current use of a processor. The scheduler is free to ignore this
      * hint.
@@ -2998,15 +3015,10 @@
     int threadLocalRandomProbe;
 
     /** Secondary seed isolated from public ThreadLocalRandom sequence */
     int threadLocalRandomSecondarySeed;
 
-    /**
-     * TBD
-     */
-    public Object userObject;
-
     /* Some private helper methods */
     private native void setPriority0(int newPriority);
     private native void stop0(Object o);
     private native void suspend0();
     private native void resume0();
