diff a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
@@ -550,11 +550,11 @@
                   .fullname("version")
                   .helptext("Print the version of this tool")
                   .optional());
 
         var actions = List.of("list", "fetch", "show", "checkout", "apply", "integrate",
-                              "approve", "create", "close", "update", "test", "status");
+                              "approve", "create", "close", "set", "test", "status");
         var inputs = List.of(
             Input.position(0)
                  .describe(String.join("|", actions))
                  .singular()
                  .optional(),
@@ -1381,19 +1381,19 @@
             }
 
             var remoteRepo = getHostedRepositoryFor(uri, repo, host);
             var pr = remoteRepo.pullRequest(prId.asString());
             pr.setState(PullRequest.State.CLOSED);
-        } else if (action.equals("update")) {
+        } else if (action.equals("set")) {
             var prId = arguments.at(1);
             if (!prId.isPresent()) {
                 exit("error: missing pull request identifier");
             }
 
             var remoteRepo = getHostedRepositoryFor(uri, repo, host);
             var pr = remoteRepo.pullRequest(prId.asString());
-            var assigneesOption = getOption("assignees", "update", arguments);
+            var assigneesOption = getOption("assignees", "set", arguments);
             if (assigneesOption != null) {
                 var usernames = Arrays.asList(assigneesOption.split(","));
                 var assignees = usernames.stream()
                     .map(u -> host.user(u))
                     .filter(Optional::isPresent)
