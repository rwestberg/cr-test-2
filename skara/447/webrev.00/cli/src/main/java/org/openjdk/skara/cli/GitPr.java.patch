diff a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
@@ -516,10 +516,14 @@
                   .optional(),
             Switch.shortcut("")
                   .fullname("publish")
                   .helptext("Publish the local branch before creating the pull request")
                   .optional(),
+            Switch.shortcut("")
+                  .fullname("atomic")
+                  .helptext("Integrate the pull request atomically")
+                  .optional(),
             Switch.shortcut("")
                   .fullname("jcheck")
                   .helptext("Run jcheck before creating the pull request")
                   .optional(),
             Switch.shortcut("")
@@ -1072,11 +1076,24 @@
 
             repo.config("pr." + currentBranch.name(), "id", pr.id().toString());
         } else if (action.equals("integrate")) {
             var id = pullRequestIdArgument(arguments, repo);
             var pr = getPullRequest(uri, repo, host, id);
-            var integrateComment = pr.addComment("/integrate");
+            var isAtomic = getSwitch("atomic", "integrate", arguments);
+
+            var message = "/integrate";
+            if (isAtomic) {
+                var targetHash = repo.resolve(pr.targetRef());
+                if (!targetHash.isPresent()) {
+                    exit("error: cannot resolve target branch " + pr.targetRef());
+                }
+                var sourceHash = repo.fetch(pr.repository().webUrl(), pr.fetchRef());
+                var mergeBase = repo.mergeBase(sourceHash, targetHash.get());
+                message += " " + mergeBase.hex();
+            }
+
+            var integrateComment = pr.addComment(message);
 
             var seenIntegrateComment = false;
             var expected = "<!-- Jmerge command reply message (" + integrateComment.id() + ") -->";
             for (var i = 0; i < 90; i++) {
                 var comments = pr.comments();
