diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/PullRequestInstance.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/PullRequestInstance.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/PullRequestInstance.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/PullRequestInstance.java
@@ -41,20 +41,21 @@
     private final Hash targetHash;
     private final Hash headHash;
     private final Hash baseHash;
     private final boolean ignoreStaleReviews;
 
-    PullRequestInstance(Path localRepoPath, PullRequest pr, boolean ignoreStaleReviews) throws IOException  {
+    PullRequestInstance(Path localRepoPath, HostedRepositoryPool hostedRepositoryPool, PullRequest pr, boolean ignoreStaleReviews) throws IOException  {
         this.pr = pr;
         this.ignoreStaleReviews = ignoreStaleReviews;
+
+        // Materialize the PR's source and target ref
         var repository = pr.repository();
+        localRepo = hostedRepositoryPool.checkout(pr, localRepoPath);
+        localRepo.fetch(repository.url(), "+" + pr.targetRef() + ":pr_prinstance");
 
-        // Materialize the PR's target ref
-        localRepo = Repository.materialize(localRepoPath, repository.url(),
-                                           "+" + pr.targetRef() + ":pr_prinstance_" + repository.name());
-        targetHash = localRepo.fetch(repository.url(), pr.targetRef());
-        headHash = localRepo.fetch(repository.url(), pr.headHash().hex());
+        targetHash = pr.targetHash();
+        headHash = pr.headHash();
         baseHash = localRepo.mergeBase(targetHash, headHash);
     }
 
     /**
      * The Review list is in chronological order, the latest one from a particular reviewer is the
