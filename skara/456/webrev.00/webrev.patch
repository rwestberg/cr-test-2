diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/PullRequestWorkItem.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/PullRequestWorkItem.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/PullRequestWorkItem.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/PullRequestWorkItem.java
@@ -78,12 +78,12 @@
                             .map(JSONObject::toString)
                             .collect(Collectors.toList());
         return "[\n" + String.join(",\n", entries) + "\n]";
     }
 
-    private final Pattern issuesBlockPattern = Pattern.compile("\\n\\n## Issues?((?:\\n\\[.*)+)", Pattern.MULTILINE);
-    private final Pattern issuePattern = Pattern.compile("^\\[(\\S+)]\\(.*\\): .*$", Pattern.MULTILINE);
+    private final Pattern issuesBlockPattern = Pattern.compile("\\n\\n###? Issues?((?:\\n(?: \\* )?\\[.*)+)", Pattern.MULTILINE);
+    private final Pattern issuePattern = Pattern.compile("^(?: \\* )?\\[(\\S+)]\\(.*\\): .*$", Pattern.MULTILINE);
 
     private Set<String> parseIssues() {
         var issuesBlockMatcher = issuesBlockPattern.matcher(pr.body());
         if (!issuesBlockMatcher.find()) {
             return Set.of();
diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
--- a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
@@ -1717,11 +1717,11 @@
             // Create an issue and a pull request to fix it
             var issue = issueProject.createIssue("This is an issue", List.of("Indeed"), Map.of("issuetype", JSON.of("Enhancement")));
             var editHash = CheckableRepository.appendAndCommit(localRepo, "Another line", "Fix that issue");
             localRepo.push(editHash, repo.url(), "edit", true);
             var pr = credentials.createPullRequest(repo, "edit", "master", issue.id() + ": Fix that issue");
-            pr.setBody("\n\n## Issue\n[" + issue.id() + "](http://www.test.test/): The issue");
+            pr.setBody("\n\n### Issue\n * [" + issue.id() + "](http://www.test.test/): The issue");
             TestBotRunner.runPeriodicItems(notifyBot);
 
             // The issue should not yet contain a link to the PR
             var links = issue.links();
             assertEquals(0, links.size());
@@ -1750,11 +1750,11 @@
             assertEquals(pr.webUrl(), links.get(0).uri().orElseThrow());
             assertEquals(reviewIcon, links.get(0).iconUrl().orElseThrow());
 
             // Add another issue
             var issue2 = issueProject.createIssue("This is another issue", List.of("Yes indeed"), Map.of("issuetype", JSON.of("Enhancement")));
-            pr.setBody("\n\n## Issues\n[" + issue.id() + "](http://www.test.test/): The issue\n[" + issue2.id() +
+            pr.setBody("\n\n### Issues\n * [" + issue.id() + "](http://www.test.test/): The issue\n * [" + issue2.id() +
                                "](http://www.test2.test/): The second issue");
             TestBotRunner.runPeriodicItems(notifyBot);
 
             // Both issues should contain a link to the PR
             var links1 = issue.links();
@@ -1763,11 +1763,11 @@
             var links2 = issue2.links();
             assertEquals(1, links2.size());
             assertEquals(pr.webUrl(), links2.get(0).uri().orElseThrow());
 
             // Drop the first one
-            pr.setBody("\n\n## Issue\n[" + issue2.id() + "](http://www.test2.test/): That other issue");
+            pr.setBody("\n\n### Issues\n * [" + issue2.id() + "](http://www.test2.test/): That other issue");
             TestBotRunner.runPeriodicItems(notifyBot);
 
             // Only the second issue should now contain a link to the PR
             links1 = issue.links();
             assertEquals(0, links1.size());
@@ -1817,11 +1817,11 @@
             // Create an issue and a pull request to fix it
             var issue = issueProject.createIssue("This is an issue", List.of("Indeed"), Map.of("issuetype", JSON.of("Enhancement")));
             var editHash = CheckableRepository.appendAndCommit(localRepo, "Another line", "Fix that issue");
             localRepo.push(editHash, repo.url(), "edit", true);
             var pr = credentials.createPullRequest(repo, "edit", "master", issue.id() + ": Fix that issue");
-            pr.setBody("\n\n## Issue\n[" + issue.id() + "](http://www.test.test/): The issue");
+            pr.setBody("\n\n### Issue\n * [" + issue.id() + "](http://www.test.test/): The issue");
             TestBotRunner.runPeriodicItems(notifyBot);
 
             // Add required label
             pr.addLabel("rfr");
             TestBotRunner.runPeriodicItems(notifyBot);
@@ -1878,11 +1878,11 @@
             // Create an issue and a pull request to fix it
             var issue = issueProject.createIssue("This is an issue", List.of("Indeed"), Map.of("issuetype", JSON.of("Enhancement")));
             var editHash = CheckableRepository.appendAndCommit(localRepo, "Another line", issue.id() + ": Fix that issue");
             localRepo.push(editHash, repo.url(), "edit", true);
             var pr = credentials.createPullRequest(repo, "other", "edit", issue.id() + ": Fix that issue");
-            pr.setBody("\n\n## Issue\n[" + issue.id() + "](http://www.test.test/): The issue");
+            pr.setBody("\n\n### Issue\n * [" + issue.id() + "](http://www.test.test/): The issue");
             TestBotRunner.runPeriodicItems(notifyBot);
 
             // The issue should now contain a link to the PR
             var links = issue.links();
             assertEquals(1, links.size());
diff a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
@@ -45,11 +45,11 @@
 import java.util.stream.Collectors;
 
 public class GitPr {
     private static final Pattern ISSUE_ID_PATTERN = Pattern.compile("([A-Za-z][A-Za-z0-9]+)?-([0-9]+)");
     private static final Pattern ISSUE_MARKDOWN_PATTERN =
-        Pattern.compile("^\\[([A-Z]+-[0-9]+)\\]\\(https:\\/\\/bugs.openjdk.java.net\\/browse\\/[A-Z]+-[0-9]+\\): .*$");
+        Pattern.compile("^(?: \\* )?\\[([A-Z]+-[0-9]+)\\]\\(https:\\/\\/bugs.openjdk.java.net\\/browse\\/[A-Z]+-[0-9]+\\): .*$");
 
     private static void exit(String fmt, Object...args) {
         System.err.println(String.format(fmt, args));
         System.exit(1);
     }
@@ -200,11 +200,11 @@
 
     private static List<String> issuesFromPullRequest(PullRequest pr) {
         var issueTitleIndex = -1;
         var lines = pr.body().split("\n");
         for (var i = 0; i < lines.length; i++) {
-            if (lines[i].startsWith("## Issue")) {
+            if (lines[i].startsWith("### Issue")) {
                 issueTitleIndex = i;
                 break;
             }
         }
 
