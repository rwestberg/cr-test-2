diff a/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java b/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
@@ -81,10 +81,14 @@
             die(message);
             return null; // impossible
         }
     }
 
+    private static boolean isDigit(char c) {
+        return Character.isDigit(c);
+    }
+
     private static void generate(String[] args) throws IOException {
         var flags = List.of(
             Option.shortcut("r")
                   .fullname("rev")
                   .describe("REV")
@@ -186,10 +190,11 @@
                         upstream = pullPath.toString();
                     }
                 }
             }
         }
+        var upstreamURL = upstream;
 
         var noOutgoing = arguments.contains("no-outgoing");
         if (!noOutgoing) {
             var config = repo.config("webrev.no-outgoing");
             if (config.size() == 1) {
@@ -203,16 +208,17 @@
             noOutgoing ?
                 resolve(repo, isMercurial ? "tip" : "HEAD") :
                 resolve(repo, isMercurial ? "min(outgoing())^" : "origin" + "/" + "master");
 
         var issue = arguments.contains("cr") ? arguments.get("cr").asString() : null;
-        if (issue != null && !issue.startsWith("http")) {
-            var digits = Set.of('0', '1', '2', '3', '4', '5', '6', '7', '8', '9');
-            if (digits.contains(issue.charAt(0))) {
+        if (issue != null) {
+            if (issue.startsWith("http")) {
+                var uri = URI.create(issue);
+                issue = Path.of(uri.getPath()).getFileName().toString();
+            } else if (isDigit(issue.charAt(0))) {
                 issue = "JDK-" + issue;
             }
-            issue = "https://bugs.openjdk.java.net/browse/" + issue;
         }
         if (issue == null) {
             var pattern = Pattern.compile("(?:(JDK|CODETOOLS|JMC|SKARA)-)?([0-9]+).*");
             var currentBranch = repo.currentBranch();
             if (currentBranch.isPresent()) {
@@ -222,11 +228,11 @@
                     var project = m.group(1);
                     if (project == null) {
                         project = "JDK";
                     }
                     var id = m.group(2);
-                    issue = "https://bugs.openjdk.java.net/browse/" + project + "-" + id;
+                    issue = project + "-" + id;
                 }
             }
         }
 
         var out = arg("output", arguments, repo);
@@ -257,10 +263,11 @@
 
         var username = arg("username", arguments, repo);
         if (username == null) {
             username = repo.username().orElse(System.getProperty("user.name"));
         }
+        var author = Author.fromString(username);
 
         if (Files.exists(output)) {
             clearDirectory(output);
         }
 
@@ -273,15 +280,18 @@
             } else {
                 files = Files.readAllLines(path).stream().map(Path::of).collect(Collectors.toList());
             }
         }
 
+        var jbs = "https://bugs.openjdk.java.net/browse/";
         Webrev.repository(repo)
               .output(output)
               .title(title)
               .upstream(upstream)
-              .username(username)
+              .username(author.name())
+              .commitLinker(hash -> upstreamURL == null ? null : upstreamURL + "/commit/" + hash)
+              .issueLinker(id -> jbs + (isDigit(id.charAt(0)) ? "JDK-" : "") + id)
               .issue(issue)
               .version(version)
               .files(files)
               .generate(rev);
     }
