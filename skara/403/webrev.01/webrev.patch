diff a/bots/bridgekeeper/src/main/java/org/openjdk/skara/bots/bridgekeeper/PullRequestCloserBot.java b/bots/bridgekeeper/src/main/java/org/openjdk/skara/bots/bridgekeeper/PullRequestCloserBot.java
--- a/bots/bridgekeeper/src/main/java/org/openjdk/skara/bots/bridgekeeper/PullRequestCloserBot.java
+++ b/bots/bridgekeeper/src/main/java/org/openjdk/skara/bots/bridgekeeper/PullRequestCloserBot.java
@@ -89,10 +89,15 @@
 
     @Override
     public void handleRuntimeException(RuntimeException e) {
         errorHandler.accept(e);
     }
+
+    @Override
+    public String toString() {
+        return "PullRequestCloserBotWorkItem@" + repository.name() + "#" + pr.id();
+    }
 }
 
 public class PullRequestCloserBot implements Bot {
     private final HostedRepository remoteRepo;
     private final PullRequestUpdateCache updateCache;
diff a/bots/bridgekeeper/src/main/java/org/openjdk/skara/bots/bridgekeeper/PullRequestPrunerBot.java b/bots/bridgekeeper/src/main/java/org/openjdk/skara/bots/bridgekeeper/PullRequestPrunerBot.java
--- a/bots/bridgekeeper/src/main/java/org/openjdk/skara/bots/bridgekeeper/PullRequestPrunerBot.java
+++ b/bots/bridgekeeper/src/main/java/org/openjdk/skara/bots/bridgekeeper/PullRequestPrunerBot.java
@@ -96,10 +96,15 @@
                 "to ask for assistance if you need help with progressing this pull request towards integration!";
 
         log.fine("Posting prune notification message");
         pr.addComment(noticeMarker + "\n\n" + message);
     }
+
+    @Override
+    public String toString() {
+        return "PullRequestPrunerBotWorkItem@" + repository.name() + "#" + pr.id();
+    }
 }
 
 public class PullRequestPrunerBot implements Bot {
     private final HostedRepository repository;
     private final Duration maxAge;
diff a/bots/csr/src/main/java/org/openjdk/skara/bots/csr/CSRBot.java b/bots/csr/src/main/java/org/openjdk/skara/bots/csr/CSRBot.java
--- a/bots/csr/src/main/java/org/openjdk/skara/bots/csr/CSRBot.java
+++ b/bots/csr/src/main/java/org/openjdk/skara/bots/csr/CSRBot.java
@@ -90,11 +90,11 @@
         }
     }
 
     @Override
     public String toString() {
-        return "CSRBot@(" + repo.name() + ")";
+        return "CSRBot@" + repo.name();
     }
 
     @Override
     public List<WorkItem> getPeriodicItems() {
         return List.of(this);
diff a/bots/mirror/src/main/java/org/openjdk/skara/bots/mirror/MirrorBot.java b/bots/mirror/src/main/java/org/openjdk/skara/bots/mirror/MirrorBot.java
--- a/bots/mirror/src/main/java/org/openjdk/skara/bots/mirror/MirrorBot.java
+++ b/bots/mirror/src/main/java/org/openjdk/skara/bots/mirror/MirrorBot.java
@@ -83,11 +83,11 @@
         }
     }
 
     @Override
     public String toString() {
-        return "MirrorBot@(" + from.name() + "-> " + to.name() + ")";
+        return "MirrorBot@" + from.name() + "->" + to.name();
     }
 
     @Override
     public List<WorkItem> getPeriodicItems() {
         return List.of(this);
diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/CommentPosterWorkItem.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/CommentPosterWorkItem.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/CommentPosterWorkItem.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/CommentPosterWorkItem.java
@@ -49,11 +49,11 @@
         this.errorHandler = errorHandler;
     }
 
     @Override
     public String toString() {
-        return "CommentPosterWorkItem@" + pr.toString();
+        return "CommentPosterWorkItem@" + pr.repository().name() + "#" + pr.id();
     }
 
     @Override
     public boolean concurrentWith(WorkItem other) {
         if (!(other instanceof CommentPosterWorkItem)) {
diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/RepositoryWorkItem.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/RepositoryWorkItem.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/RepositoryWorkItem.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/RepositoryWorkItem.java
@@ -284,6 +284,11 @@
             }
         } catch (IOException e) {
             throw new UncheckedIOException(e);
         }
     }
+
+    @Override
+    public String toString() {
+        return "RepositoryWorkItem@" + repository.name();
+    }
 }
diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CommandWorkItem.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CommandWorkItem.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CommandWorkItem.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CommandWorkItem.java
@@ -148,6 +148,11 @@
         var census = CensusInstance.create(bot.censusRepo(), bot.censusRef(), scratchPath.resolve("census"), pr);
         for (var entry : unprocessedCommands) {
             processCommand(pr, census, scratchPath.resolve("pr"), entry.getKey(), entry.getValue(), comments);
         }
     }
+
+    @Override
+    public String toString() {
+        return "CommandWorkItem@" + pr.repository().name() + "#" + pr.id();
+    }
 }
diff a/bots/topological/src/main/java/org/openjdk/skara/bots/topological/TopologicalBot.java b/bots/topological/src/main/java/org/openjdk/skara/bots/topological/TopologicalBot.java
--- a/bots/topological/src/main/java/org/openjdk/skara/bots/topological/TopologicalBot.java
+++ b/bots/topological/src/main/java/org/openjdk/skara/bots/topological/TopologicalBot.java
@@ -175,11 +175,11 @@
         }
     }
 
     @Override
     public String toString() {
-        return "TopoBot@(" + hostedRepo + ")";
+        return "TopologicalBot@" + hostedRepo.name();
     }
 
     @Override
     public List<WorkItem> getPeriodicItems() {
         return List.of(this);
