diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveWorkItem.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveWorkItem.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveWorkItem.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveWorkItem.java
@@ -195,10 +195,33 @@
             return "Author";
         }
         return "no project role";
     }
 
+    private String subjectPrefix() {
+        var ret = new StringBuilder();
+        var branchName = pr.targetRef();
+        var repoName = Path.of(pr.repository().name()).getFileName().toString();
+        var useBranchInSubject = bot.branchInSubject().matcher(branchName).matches();
+        var useRepoInSubject = bot.repoInSubject().matcher(repoName).matches();
+
+        if (useBranchInSubject || useRepoInSubject) {
+            ret.append("[");
+            if (useRepoInSubject) {
+                ret.append(repoName);
+                if (useBranchInSubject) {
+                    ret.append(":");
+                }
+            }
+            if (useBranchInSubject) {
+                ret.append(branchName);
+            }
+            ret.append("] ");
+        }
+        return ret.toString();
+    }
+
     @Override
     public void run(Path scratchPath) {
         var path = scratchPath.resolve("mlbridge");
         var archiveRepo = materializeArchive(path);
         var mboxBasePath = path.resolve(bot.codeRepo().name());
@@ -289,11 +312,13 @@
             var newMails = archiver.generateNewEmails(sentMails, bot.cooldown(), localRepo, bot.issueTracker(), jbs.toUpperCase(), webrevGenerator,
                                                       (index, full, inc) -> updateWebrevComment(comments, index, full, inc),
                                                       user -> getAuthorAddress(census, user),
                                                       user -> getAuthorUserName(census, user),
                                                       user -> getAuthorRole(census, user),
-                                                      retryConsumer);
+                                                      subjectPrefix(),
+                                                      retryConsumer
+                                                      );
             if (newMails.isEmpty()) {
                 return;
             }
 
             // Push all new mails to the archive repository
