diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotBuilder.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotBuilder.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotBuilder.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotBuilder.java
@@ -51,10 +51,12 @@
     private Map<String, Pattern> readyComments = Map.of();
     private URI issueTracker;
     private Map<String, String> headers = Map.of();
     private Duration sendInterval = Duration.ZERO;
     private Duration cooldown = Duration.ZERO;
+    private Pattern repoInSubject = Pattern.compile("a^"); // Does not match anything
+    private Pattern branchInSubject = Pattern.compile("a^");
 
     MailingListBridgeBotBuilder() {
     }
 
     public MailingListBridgeBotBuilder from(EmailAddress from) {
@@ -160,12 +162,23 @@
     public MailingListBridgeBotBuilder cooldown(Duration cooldown) {
         this.cooldown = cooldown;
         return this;
     }
 
+    public MailingListBridgeBotBuilder repoInSubject(Pattern repoInSubject) {
+        this.repoInSubject = repoInSubject;
+        return this;
+    }
+
+    public MailingListBridgeBotBuilder branchInSubject(Pattern branchInSubject) {
+        this.branchInSubject = branchInSubject;
+        return this;
+    }
+
     public MailingListBridgeBot build() {
         return new MailingListBridgeBot(from, repo, archive, archiveRef, censusRepo, censusRef, list,
                                         ignoredUsers, ignoredComments, listArchive, smtpServer,
                                         webrevStorageRepository, webrevStorageRef, webrevStorageBase, webrevStorageBaseUri,
-                                        readyLabels, readyComments, issueTracker, headers, sendInterval, cooldown);
+                                        readyLabels, readyComments, issueTracker, headers, sendInterval, cooldown,
+                                        repoInSubject, branchInSubject);
     }
 }
