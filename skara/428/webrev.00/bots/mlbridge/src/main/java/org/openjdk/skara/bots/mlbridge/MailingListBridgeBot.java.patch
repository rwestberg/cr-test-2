diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java
@@ -50,19 +50,20 @@
     private final Map<String, String> headers;
     private final URI issueTracker;
     private final PullRequestUpdateCache updateCache;
     private final Duration sendInterval;
     private final Duration cooldown;
+    private final Path seedStorage;
     private final CooldownQuarantine cooldownQuarantine;
 
     MailingListBridgeBot(EmailAddress from, HostedRepository repo, HostedRepository archive, String archiveRef,
                          HostedRepository censusRepo, String censusRef, EmailAddress list,
                          Set<String> ignoredUsers, Set<Pattern> ignoredComments, URI listArchive, String smtpServer,
                          HostedRepository webrevStorageRepository, String webrevStorageRef,
                          Path webrevStorageBase, URI webrevStorageBaseUri, Set<String> readyLabels,
                          Map<String, Pattern> readyComments, URI issueTracker, Map<String, String> headers,
-                         Duration sendInterval, Duration cooldown) {
+                         Duration sendInterval, Duration cooldown, Path seedStorage) {
         emailAddress = from;
         codeRepo = repo;
         archiveRepo = archive;
         this.archiveRef = archiveRef;
         this.censusRepo = censusRepo;
@@ -76,10 +77,11 @@
         this.readyComments = readyComments;
         this.headers = headers;
         this.issueTracker = issueTracker;
         this.sendInterval = sendInterval;
         this.cooldown = cooldown;
+        this.seedStorage = seedStorage;
 
         webrevStorage = new WebrevStorage(webrevStorageRepository, webrevStorageRef, webrevStorageBase,
                                           webrevStorageBaseUri, from);
         updateCache = new PullRequestUpdateCache();
         cooldownQuarantine = new CooldownQuarantine();
@@ -159,10 +161,14 @@
 
     URI issueTracker() {
         return issueTracker;
     }
 
+    Optional<Path> seedStorage() {
+        return Optional.ofNullable(seedStorage);
+    }
+
     @Override
     public List<WorkItem> getPeriodicItems() {
         List<WorkItem> ret = new LinkedList<>();
 
         for (var pr : codeRepo.pullRequests()) {
