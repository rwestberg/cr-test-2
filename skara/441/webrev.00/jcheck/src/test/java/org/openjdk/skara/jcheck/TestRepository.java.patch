diff a/jcheck/src/test/java/org/openjdk/skara/jcheck/TestRepository.java b/jcheck/src/test/java/org/openjdk/skara/jcheck/TestRepository.java
--- a/jcheck/src/test/java/org/openjdk/skara/jcheck/TestRepository.java
+++ b/jcheck/src/test/java/org/openjdk/skara/jcheck/TestRepository.java
@@ -135,10 +135,50 @@
 
     public Optional<Commit> lookup(Tag t) throws IOException {
         return Optional.empty();
     }
 
+    public List<CommitMetadata> commitMetadata(Hash from, Hash to) throws IOException {
+        return List.of();
+    }
+
+    public List<CommitMetadata> commitMetadata(String range, boolean reverse) throws IOException {
+        return List.of();
+    }
+
+    public List<CommitMetadata> commitMetadata(Hash from, Hash to, boolean reverse) throws IOException {
+        return List.of();
+    }
+
+    public List<CommitMetadata> commitMetadata(List<Path> paths) throws IOException {
+        return List.of();
+    }
+
+    public List<CommitMetadata> commitMetadata(List<Path> paths, boolean reverse) throws IOException {
+        return List.of();
+    }
+
+    public List<CommitMetadata> commitMetadata(String range, List<Path> paths) throws IOException {
+        return List.of();
+    }
+
+    public List<CommitMetadata> commitMetadata(Hash from, Hash to, List<Path> paths) throws IOException {
+        return List.of();
+    }
+
+    public List<CommitMetadata> commitMetadata(String range, List<Path> paths, boolean reverse) throws IOException {
+        return List.of();
+    }
+
+    public List<CommitMetadata> commitMetadata(Hash from, Hash to, List<Path> paths, boolean reverse) throws IOException {
+        return List.of();
+    }
+
+    public List<CommitMetadata> commitMetadata(boolean reverse) throws IOException {
+        return List.of();
+    }
+
     public List<CommitMetadata> commitMetadata(String range) throws IOException {
         return List.of();
     }
 
     public List<CommitMetadata> commitMetadata() throws IOException {
