diff a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
@@ -188,13 +188,13 @@
     public Optional<Commit> lookup(Tag t) throws IOException {
         var hash = resolve(t.name()).orElseThrow(() -> new IOException("Tag " + t.name() + " not found"));
         return lookup(hash);
     }
 
-    public List<CommitMetadata> commitMetadata() throws IOException {
-        var revisions = "--all";
-        var p = start("git", "rev-list", "--format=" + GitCommitMetadata.FORMAT, "--no-abbrev", "--reverse", "--no-color", revisions);
+    @Override
+    public List<CommitMetadata> commitMetadata(String range) throws IOException {
+        var p = start("git", "rev-list", "--format=" + GitCommitMetadata.FORMAT, "--no-abbrev", "--reverse", "--no-color", range);
         var reader = new UnixStreamReader(p.getInputStream());
         var result = new ArrayList<CommitMetadata>();
 
         var line = reader.readLine();
         while (line != null) {
@@ -208,10 +208,15 @@
 
         await(p);
         return result;
     }
 
+    @Override
+    public List<CommitMetadata> commitMetadata() throws IOException {
+        return commitMetadata("--all");
+    }
+
     private List<Hash> refs() throws IOException {
         try (var p = capture("git", "show-ref", "--hash", "--abbrev")) {
             var res = p.await();
             if (res.status() == -1) {
                 if (res.stdout().size() != 0) {
