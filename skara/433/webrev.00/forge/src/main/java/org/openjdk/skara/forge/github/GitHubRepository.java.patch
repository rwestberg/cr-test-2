diff a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubRepository.java b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubRepository.java
--- a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubRepository.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubRepository.java
@@ -27,10 +27,11 @@
 import org.openjdk.skara.network.*;
 import org.openjdk.skara.vcs.*;
 
 import java.net.URI;
 import java.nio.charset.StandardCharsets;
+import java.time.ZonedDateTime;
 import java.util.*;
 import java.util.regex.Pattern;
 import java.util.stream.Collectors;
 
 public class GitHubRepository implements HostedRepository {
@@ -127,10 +128,23 @@
         return request.get("pulls").execute().asArray().stream()
                       .map(jsonValue -> new GitHubPullRequest(this, jsonValue, request))
                       .collect(Collectors.toList());
     }
 
+    @Override
+    public List<PullRequest> pullRequests(ZonedDateTime updatedAfter) {
+        return request.get("pulls")
+                      .param("state", "all")
+                      .param("sort", "updated")
+                      .param("direction", "desc")
+                      .maxPages(1)
+                      .execute().asArray().stream()
+                      .map(jsonValue -> new GitHubPullRequest(this, jsonValue, request))
+                      .filter(pr -> pr.updatedAt().isAfter(updatedAfter))
+                      .collect(Collectors.toList());
+    }
+
     @Override
     public List<PullRequest> findPullRequestsWithComment(String author, String body) {
         var query = "\"" + body + "\" in:comments type:pr repo:" + repository;
         if (author != null) {
             query += " commenter:" + author;
