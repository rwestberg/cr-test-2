diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java
@@ -28,10 +28,11 @@
 
 import java.net.URI;
 import java.nio.file.Path;
 import java.time.*;
 import java.util.*;
+import java.util.logging.Logger;
 import java.util.regex.Pattern;
 
 public class MailingListBridgeBot implements Bot {
     private final EmailAddress emailAddress;
     private final HostedRepository codeRepo;
@@ -53,10 +54,15 @@
     private final Duration sendInterval;
     private final Duration cooldown;
     private final Path seedStorage;
     private final CooldownQuarantine cooldownQuarantine;
 
+    private final Logger log = Logger.getLogger("org.openjdk.skara.bots.mlbridge");
+
+    private ZonedDateTime lastPartialUpdate;
+    private ZonedDateTime lastFullUpdate;
+
     MailingListBridgeBot(EmailAddress from, HostedRepository repo, HostedRepository archive, String archiveRef,
                          HostedRepository censusRepo, String censusRef, EmailAddress list,
                          Set<String> ignoredUsers, Set<Pattern> ignoredComments, URI listArchive, String smtpServer,
                          HostedRepository webrevStorageRepository, String webrevStorageRef,
                          Path webrevStorageBase, URI webrevStorageBaseUri, Set<String> readyLabels,
@@ -168,12 +174,24 @@
     }
 
     @Override
     public List<WorkItem> getPeriodicItems() {
         List<WorkItem> ret = new LinkedList<>();
+        List<PullRequest> prs;
+
+        if (lastFullUpdate == null || lastFullUpdate.isBefore(ZonedDateTime.now().minus(Duration.ofMinutes(10)))) {
+            lastFullUpdate = ZonedDateTime.now();
+            lastPartialUpdate = lastFullUpdate;
+            log.info("Fetching all open pull requests");
+            prs = codeRepo.pullRequests();
+        } else {
+            log.info("Fetching only pull requests updated after " + lastPartialUpdate.minus(cooldown));
+            prs = codeRepo.pullRequests(lastPartialUpdate.minus(cooldown));
+            lastPartialUpdate = ZonedDateTime.now();
+        }
 
-        for (var pr : codeRepo.pullRequests()) {
+        for (var pr : prs) {
             var quarantineStatus = cooldownQuarantine.status(pr);
             if (quarantineStatus == CooldownQuarantine.Status.IN_QUARANTINE) {
                 continue;
             }
             if ((quarantineStatus == CooldownQuarantine.Status.JUST_RELEASED) ||
