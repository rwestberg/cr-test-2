diff a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
@@ -799,10 +799,12 @@
                 var pr = remoteRepo.createPullRequest(parentRepo, targetBranch, bookmark.name(), title, body);
                 if (arguments.contains("assignees")) {
                     var usernames = Arrays.asList(arguments.get("assignees").asString().split(","));
                     var assignees = usernames.stream()
                                              .map(u -> host.user(u))
+                                             .filter(Optional::isPresent)
+                                             .map(Optional::get)
                                              .collect(Collectors.toList());
                     pr.setAssignees(assignees);
                 }
                 System.out.println(pr.webUrl().toString());
                 Files.deleteIfExists(file);
@@ -1056,10 +1058,12 @@
             var assigneesOption = getOption("assignees", "create", arguments);
             if (assigneesOption != null) {
                 var usernames = Arrays.asList(assigneesOption.split(","));
                 var assignees = usernames.stream()
                                          .map(u -> host.user(u))
+                                         .filter(Optional::isPresent)
+                                         .map(Optional::get)
                                          .collect(Collectors.toList());
                 pr.setAssignees(assignees);
             }
             System.out.println(pr.webUrl().toString());
             Files.deleteIfExists(file);
@@ -1369,10 +1373,12 @@
             var assigneesOption = getOption("assignees", "update", arguments);
             if (assigneesOption != null) {
                 var usernames = Arrays.asList(assigneesOption.split(","));
                 var assignees = usernames.stream()
                     .map(u -> host.user(u))
+                    .filter(Optional::isPresent)
+                    .map(Optional::get)
                     .collect(Collectors.toList());
                 pr.setAssignees(assignees);
             }
         } else if (action.equals("status")) {
             String id = pullRequestIdArgument(arguments, repo);
