diff a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubHost.java b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubHost.java
--- a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubHost.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubHost.java
@@ -126,11 +126,11 @@
         return Optional.empty();
     }
 
     private String getFullName(String userName) {
         var details = user(userName);
-        return details.fullName();
+        return details.get().fullName();
     }
 
     // Most GitHub API's return user information in this format
     HostUser parseUserField(JSONValue json) {
         return parseUserObject(json.get("user"));
@@ -180,13 +180,19 @@
             return Optional.empty();
         }
     }
 
     @Override
-    public HostUser user(String username) {
-        var details = request.get("users/" + URLEncoder.encode(username, StandardCharsets.UTF_8)).execute().asObject();
-        return asHostUser(details);
+    public Optional<HostUser> user(String username) {
+        var details = request.get("users/" + URLEncoder.encode(username, StandardCharsets.UTF_8))
+                             .onError(r -> JSON.of())
+                             .execute();
+        if (details.isNull()) {
+            return Optional.empty();
+        }
+
+        return Optional.of(asHostUser(details.asObject()));
     }
 
     private static HostUser asHostUser(JSONObject details) {
         // Always present
         var login = details.get("login").asString();
@@ -203,11 +209,11 @@
     public HostUser currentUser() {
         if (currentUser == null) {
             if (application != null) {
                 var appDetails = application.getAppDetails();
                 var appName = appDetails.get("name").asString() + "[bot]";
-                currentUser = user(appName);
+                currentUser = user(appName).get();
             } else if (pat != null) {
                 // Cannot always trust username in PAT, e.g. Git Credential Manager
                 // on Windows always return "PersonalAccessToken" as username.
                 // Query GitHub for the username instead.
                 var details = request.get("user").execute().asObject();
