diff a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
@@ -269,14 +269,17 @@
         }
 
         return Optional.empty();
     }
 
-    private static void await(Process p) throws IOException {
+    private static void await(Process p, Integer... allowedExitCodes) throws IOException {
+        var allowed = new HashSet<>(Arrays.asList(allowedExitCodes));
+        allowed.add(0);
         try {
             var res = p.waitFor();
-            if (res != 0) {
+
+            if (!allowed.contains(res)) {
                 throw new IOException("Unexpected exit code " + res);
             }
         } catch (InterruptedException e) {
             throw new IOException(e);
         }
@@ -362,11 +365,15 @@
                                                    ref + "..." + hash.hex());
         if (dir != null) {
             pb.directory(dir.toFile());
         }
         pb.inheritIO();
-        await(pb.start());
+
+        // git will return 141 (128 + 13) when it receive SIGPIPE (signal 13) from
+        // e.g. less when a user exits less when looking at a large diff. Therefore
+        // must allow 141 as a valid exit code.
+        await(pb.start(), 141);
     }
 
     private static void gimport() throws IOException {
         var pb = new ProcessBuilder("hg", "gimport");
         pb.inheritIO();
