diff a/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/resources/org/openjdk/jmc/flightrecorder/rules/jdk/messages/internal/messages.properties b/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/resources/org/openjdk/jmc/flightrecorder/rules/jdk/messages/internal/messages.properties
--- a/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/resources/org/openjdk/jmc/flightrecorder/rules/jdk/messages/internal/messages.properties
+++ b/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/resources/org/openjdk/jmc/flightrecorder/rules/jdk/messages/internal/messages.properties
@@ -581,12 +581,11 @@
 StringDeduplicationRule_STRING_ARRAY_LIVESET_RATIO_AND_HEAP_USAGE_LIMIT=Heap usage + String internal array live set ratio info limit
 StringDeduplicationRule_STRING_ARRAY_LIVESET_RATIO_AND_HEAP_USAGE_LIMIT_DESC=If the heap usage ratio plus the ratio of the string internal char/byte arrays to total liveset exceeds this limit, then an info notice will be triggered.
 StringDeduplicationRule_STRING_ARRAY_ALLOCATION_RATIO_AND_HEAP_USAGE_LIMIT=Heap usage + String internal array allocation info limit
 StringDeduplicationRule_STRING_ARRAY_ALLOCATION_RATIO_AND_HEAP_USAGE_LIMIT_DESC=If the heap usage ratio plus the ratio of the allocated string internal char/byte arrays to total allocation exceeds this limit, then an info notice will be triggered.
 StringDeduplicationRule_RESULT_USE_STRING_DEDUPLICATION_ENABLED=String deduplication is already enabled.
-StringDeduplicationRule_RESULT_NON_G1_LONG=String deduplication is only supported when using the G1 garbage collector. If you want to use this feature you can enable G1 by using '-XX:+UseG1GC'.
-StringDeduplicationRule_RESULT_PRE_8_20=String deduplication is only available in JDK 8u20 or later. If you want to use this feature you need to run with a newer JDK version.
+StringDeduplicationRule_RESULT_GC_LONG=String deduplication is only supported when using the G1 (JDK 8u20+) or Shenandoah garbage collectors. If you want to use this feature you can enable G1 by using '-XX:+UseG1GC', or enable Shenandoah by using '-XX:+UseShenandoahGC'.
 StringDeduplicationRule_RESULT_DONT_RECOMMEND_STRING_DEDUPLICATION=There is likely no big benefit from enabling string deduplication.
 StringDeduplicationRule_RESULT_RECOMMEND_STRING_DEDUPLICATION=Your application might benefit from enabling string deduplication.
 # {0} is an event type, # {1} is an event type
 StringDeduplicationRule_RESULT_NO_MAX_HEAP_INFO=No information available about the maximum heap size, enable event type {0} or {1} to improve the accuracy of this rule.
 StringDeduplicationRule_RESULT_NO_ALLOC_ITEMS=Found no allocation events for the internal arrays in strings. Either the frame filter preference is incorrectly defined, or the stackTrace attribute is not enabled for the allocation events.
@@ -594,11 +593,11 @@
 StringDeduplicationRule_RESULT_HEAP_USAGE=The heap is around {0} % full.
 # {0} is a percentage, {1} is either 'byte[]' or 'char[]'
 StringDeduplicationRule_RESULT_STRING_ARRAY_LIVESET_RATIO=Approximately {0} % of the live set consists of the internal array type of strings (''{1}'' for this JDK version).
 # {0} is a percentage, {1} is either 'byte[]' or 'char[]'
 StringDeduplicationRule_RESULT_STRING_ARRAY_ALLOCATION_RATIO=Approximately {0} % of all allocations were of internal arrays in strings ({1} for this JDK version).
-StringDeduplicationRule_RESULT_LONG_DESCRIPTION=String deduplication is enabled using the JVM flag '-XX:+UseStringDeduplication'. This flag can be used together with the G1 garbage collector in JDK 8u20 or later.<p>To validate if this gives a performance improvement for your application, create flight recordings both with and without string deduplication. For the run with string deduplication enabled, also enable statistics with '-XX:+PrintStringDeduplicationStatistics' for JDK 8 or '-Xlog:stringdedup*=debug' for JDK 9. Check if the heap live set decrease in the recording with string deduplication enabled is larger than the size of the string deduplication metadata table. The size of the metadata table is printed in the statistics output as 'Table/Memory Usage: XX MB'<p>You can read more about string deduplication in the java options documentation or in <a href="http://openjdk.java.net/jeps/192">JEP 192</a>.
+StringDeduplicationRule_RESULT_LONG_DESCRIPTION=String deduplication is enabled using the JVM flag '-XX:+UseStringDeduplication'. This flag can be used together with the G1 garbage collector in JDK 8u20 or later, or with the Shenandoah garbage collector.<p>To validate if this gives a performance improvement for your application, create flight recordings both with and without string deduplication. For the run with string deduplication enabled, also enable statistics with '-XX:+PrintStringDeduplicationStatistics' for JDK 8 or '-Xlog:stringdedup*=debug' for JDK 9. Check if the heap live set decrease in the recording with string deduplication enabled is larger than the size of the string deduplication metadata table. The size of the metadata table is printed in the statistics output as 'Table/Memory Usage: XX MB'<p>You can read more about string deduplication in the java options documentation or in <a href="https://openjdk.java.net/jeps/192">JEP 192</a>.
 SystemGcRule_CONFIG_WARNING_LIMIT=System.gc() ratio limit
 SystemGcRule_CONFIG_WARNING_LIMIT_LONG=Warning limit for ratio between System.gc() and total garbage collections
 SystemGcRuleFactory_RULE_NAME=GCs Caused by System.gc()
 # {0} is a percentage
 SystemGcRuleFactory_TEXT_INFO={0} of the garbage collections were caused by System.gc().
