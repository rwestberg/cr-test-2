diff a/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/behavior/TableViewBehaviorBase.java b/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/behavior/TableViewBehaviorBase.java
--- a/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/behavior/TableViewBehaviorBase.java
+++ b/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/behavior/TableViewBehaviorBase.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -133,10 +133,12 @@
 
 
         // create a map for TableView(Base)-specific mappings
         tableViewInputMap = createInputMap();
 
+        boolean rtl = isRTL();
+
         KeyMapping enterKeyActivateMapping, escapeKeyCancelEditMapping;
         addDefaultMapping(tableViewInputMap,
                 new KeyMapping(TAB, FocusTraversalInputMap::traverseNext),
                 new KeyMapping(new KeyBinding(TAB).shift(), FocusTraversalInputMap::traversePrevious),
 
@@ -144,24 +146,25 @@
                 new KeyMapping(END, e -> selectLastRow()),
 
                 new KeyMapping(PAGE_UP, e -> scrollUp()),
                 new KeyMapping(PAGE_DOWN, e -> scrollDown()),
 
-                new KeyMapping(LEFT, e -> selectLeftCell()),
-                new KeyMapping(KP_LEFT, e -> selectLeftCell()),
-                new KeyMapping(RIGHT, e -> selectRightCell()),
-                new KeyMapping(KP_RIGHT, e -> selectRightCell()),
+
+                new KeyMapping(LEFT, (rtl? e -> selectRightCell() : e -> selectLeftCell())),
+                new KeyMapping(KP_LEFT, (rtl? e -> selectRightCell() : e -> selectLeftCell())),
+                new KeyMapping(RIGHT, (rtl? e -> selectLeftCell() : e -> selectRightCell())),
+                new KeyMapping(KP_RIGHT, (rtl? e -> selectLeftCell() :e -> selectRightCell())),
 
                 new KeyMapping(UP, e -> selectPreviousRow()),
                 new KeyMapping(KP_UP, e -> selectPreviousRow()),
                 new KeyMapping(DOWN, e -> selectNextRow()),
                 new KeyMapping(KP_DOWN, e -> selectNextRow()),
 
-                new KeyMapping(LEFT, FocusTraversalInputMap::traverseLeft),
-                new KeyMapping(KP_LEFT, FocusTraversalInputMap::traverseLeft),
-                new KeyMapping(RIGHT, FocusTraversalInputMap::traverseRight),
-                new KeyMapping(KP_RIGHT, FocusTraversalInputMap::traverseRight),
+                new KeyMapping(LEFT, (rtl? FocusTraversalInputMap::traverseRight : FocusTraversalInputMap::traverseLeft)),
+                new KeyMapping(KP_LEFT, (rtl? FocusTraversalInputMap::traverseRight : FocusTraversalInputMap::traverseLeft)),
+                new KeyMapping(RIGHT, (rtl? FocusTraversalInputMap::traverseLeft : FocusTraversalInputMap::traverseRight)),
+                new KeyMapping(KP_RIGHT, (rtl? FocusTraversalInputMap::traverseLeft : FocusTraversalInputMap::traverseRight)),
                 new KeyMapping(UP, FocusTraversalInputMap::traverseUp),
                 new KeyMapping(KP_UP, FocusTraversalInputMap::traverseUp),
                 new KeyMapping(DOWN, FocusTraversalInputMap::traverseDown),
                 new KeyMapping(KP_DOWN, FocusTraversalInputMap::traverseDown),
 
@@ -176,32 +179,32 @@
                 new KeyMapping(new KeyBinding(KP_DOWN).shift(), e -> alsoSelectNext()),
 
                 new KeyMapping(new KeyBinding(SPACE).shift(), e -> selectAllToFocus(false)),
                 new KeyMapping(new KeyBinding(SPACE).shortcut().shift(), e -> selectAllToFocus(true)),
 
-                new KeyMapping(new KeyBinding(LEFT).shift(), e -> alsoSelectLeftCell()),
-                new KeyMapping(new KeyBinding(KP_LEFT).shift(), e -> alsoSelectLeftCell()),
-                new KeyMapping(new KeyBinding(RIGHT).shift(), e -> alsoSelectRightCell()),
-                new KeyMapping(new KeyBinding(KP_RIGHT).shift(), e -> alsoSelectRightCell()),
+                new KeyMapping(new KeyBinding(LEFT).shift(), (rtl? e -> alsoSelectRightCell() : e -> alsoSelectLeftCell())),
+                new KeyMapping(new KeyBinding(KP_LEFT).shift(), (rtl? e -> alsoSelectRightCell() : e -> alsoSelectLeftCell())),
+                new KeyMapping(new KeyBinding(RIGHT).shift(), (rtl? e -> alsoSelectLeftCell() : e -> alsoSelectRightCell())),
+                new KeyMapping(new KeyBinding(KP_RIGHT).shift(), (rtl? e -> alsoSelectLeftCell() : e -> alsoSelectRightCell())),
 
                 new KeyMapping(new KeyBinding(UP).shortcut(), e -> focusPreviousRow()),
                 new KeyMapping(new KeyBinding(DOWN).shortcut(), e -> focusNextRow()),
-                new KeyMapping(new KeyBinding(RIGHT).shortcut(), e -> focusRightCell()),
-                new KeyMapping(new KeyBinding(KP_RIGHT).shortcut(), e -> focusRightCell()),
-                new KeyMapping(new KeyBinding(LEFT).shortcut(), e -> focusLeftCell()),
-                new KeyMapping(new KeyBinding(KP_LEFT).shortcut(), e -> focusLeftCell()),
+                new KeyMapping(new KeyBinding(RIGHT).shortcut(), (rtl? e -> focusLeftCell() : e -> focusRightCell())),
+                new KeyMapping(new KeyBinding(KP_RIGHT).shortcut(), (rtl? e -> focusLeftCell() : e -> focusRightCell())),
+                new KeyMapping(new KeyBinding(LEFT).shortcut(), (rtl? e -> focusRightCell() : e -> focusLeftCell())),
+                new KeyMapping(new KeyBinding(KP_LEFT).shortcut(), (rtl? e -> focusRightCell() : e -> focusLeftCell())),
 
                 new KeyMapping(new KeyBinding(A).shortcut(), e -> selectAll()),
                 new KeyMapping(new KeyBinding(HOME).shortcut(), e -> focusFirstRow()),
                 new KeyMapping(new KeyBinding(END).shortcut(), e -> focusLastRow()),
                 new KeyMapping(new KeyBinding(PAGE_UP).shortcut(), e -> focusPageUp()),
                 new KeyMapping(new KeyBinding(PAGE_DOWN).shortcut(), e -> focusPageDown()),
 
                 new KeyMapping(new KeyBinding(UP).shortcut().shift(), e -> discontinuousSelectPreviousRow()),
                 new KeyMapping(new KeyBinding(DOWN).shortcut().shift(), e -> discontinuousSelectNextRow()),
-                new KeyMapping(new KeyBinding(LEFT).shortcut().shift(), e -> discontinuousSelectPreviousColumn()),
-                new KeyMapping(new KeyBinding(RIGHT).shortcut().shift(), e -> discontinuousSelectNextColumn()),
+                new KeyMapping(new KeyBinding(LEFT).shortcut().shift(), (rtl? e -> discontinuousSelectNextColumn() : e -> discontinuousSelectPreviousColumn())),
+                new KeyMapping(new KeyBinding(RIGHT).shortcut().shift(), (rtl? e -> discontinuousSelectPreviousColumn() : e -> discontinuousSelectNextColumn())),
                 new KeyMapping(new KeyBinding(PAGE_UP).shortcut().shift(), e -> discontinuousSelectPageUp()),
                 new KeyMapping(new KeyBinding(PAGE_DOWN).shortcut().shift(), e -> discontinuousSelectPageDown()),
                 new KeyMapping(new KeyBinding(HOME).shortcut().shift(), e -> discontinuousSelectAllToFirstRow()),
                 new KeyMapping(new KeyBinding(END).shortcut().shift(), e -> discontinuousSelectAllToLastRow()),
 
