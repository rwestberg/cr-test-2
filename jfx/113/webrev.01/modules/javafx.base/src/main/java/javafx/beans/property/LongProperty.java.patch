diff a/modules/javafx.base/src/main/java/javafx/beans/property/LongProperty.java b/modules/javafx.base/src/main/java/javafx/beans/property/LongProperty.java
--- a/modules/javafx.base/src/main/java/javafx/beans/property/LongProperty.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/property/LongProperty.java
@@ -29,14 +29,10 @@
 import javafx.beans.binding.Bindings;
 import javafx.beans.value.ObservableValue;
 import javafx.beans.value.WritableLongValue;
 import com.sun.javafx.binding.Logging;
 
-import java.security.AccessControlContext;
-import java.security.AccessController;
-import java.security.PrivilegedAction;
-
 /**
  * This class defines a {@link Property} wrapping a {@code long} value.
  * <p>
  * The value of a {@code LongProperty} can be get and set with {@link #get()},
  * {@link #getValue()}, {@link #set(long)}, and {@link #setValue(Number)}.
@@ -147,11 +143,10 @@
      public static LongProperty longProperty(final Property<Long> property) {
         if (property == null) {
             throw new NullPointerException("Property cannot be null");
         }
         return new LongPropertyBase() {
-            private final AccessControlContext acc = AccessController.getContext();
             {
                 BidirectionalBinding.bindNumber(this, property);
             }
 
             @Override
@@ -161,22 +156,10 @@
 
             @Override
             public String getName() {
                 return property.getName();
             }
-
-            @Override
-            protected void finalize() throws Throwable {
-                try {
-                    AccessController.doPrivileged((PrivilegedAction<Void>) () -> {
-                        BidirectionalBinding.unbindNumber(property, this);
-                        return null;
-                    }, acc);
-                } finally {
-                    super.finalize();
-                }
-            }
         };
     }
 
      /**
      * Creates an {@link javafx.beans.property.ObjectProperty}
@@ -198,11 +181,10 @@
      * @since JavaFX 8.0
      */
     @Override
     public ObjectProperty<Long> asObject() {
         return new ObjectPropertyBase<Long> () {
-            private final AccessControlContext acc = AccessController.getContext();
             {
                 BidirectionalBinding.bindNumber(this, LongProperty.this);
             }
 
             @Override
@@ -212,21 +194,8 @@
 
             @Override
             public String getName() {
                 return LongProperty.this.getName();
             }
-
-            @Override
-            protected void finalize() throws Throwable {
-                try {
-                    AccessController.doPrivileged((PrivilegedAction<Void>) () -> {
-                        BidirectionalBinding.unbindNumber(this, LongProperty.this);
-                        return null;
-                    }, acc);
-                } finally {
-                    super.finalize();
-                }
-            }
-
         };
     }
 }
