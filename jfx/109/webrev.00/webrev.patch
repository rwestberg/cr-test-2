diff a/modules/javafx.media/src/main/java/com/sun/media/jfxmedia/locator/Locator.java b/modules/javafx.media/src/main/java/com/sun/media/jfxmedia/locator/Locator.java
--- a/modules/javafx.media/src/main/java/com/sun/media/jfxmedia/locator/Locator.java
+++ b/modules/javafx.media/src/main/java/com/sun/media/jfxmedia/locator/Locator.java
@@ -415,11 +415,11 @@
                                     isMediaUnAvailable = true;
                                 }
                             }
 
                             // FIXME: get cache settings from server, honor them
-                        } else if (scheme.equals("file") || scheme.equals("jar") || scheme.equals("jrt")) {
+                        } else if (scheme.equals("file") || scheme.equals("jar") || scheme.equals("jrt") || (scheme.equals("resource")) ) {
                             InputStream stream = getInputStream(uri);
                             stream.close();
                             isConnected = true;
                             contentType = MediaUtils.filenameToContentType(uriString); // We need to provide at least something
                         }
diff a/modules/javafx.media/src/main/java/com/sun/media/jfxmediaimpl/platform/gstreamer/GSTPlatform.java b/modules/javafx.media/src/main/java/com/sun/media/jfxmediaimpl/platform/gstreamer/GSTPlatform.java
--- a/modules/javafx.media/src/main/java/com/sun/media/jfxmediaimpl/platform/gstreamer/GSTPlatform.java
+++ b/modules/javafx.media/src/main/java/com/sun/media/jfxmediaimpl/platform/gstreamer/GSTPlatform.java
@@ -60,11 +60,12 @@
      */
     private static final String[] PROTOCOLS = {
         "file",
         "http",
         "https",
-        "jrt"
+        "jrt",
+        "resource"
     };
 
     private static GSTPlatform globalInstance = null;
 
     @Override
diff a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gst.c b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gst.c
--- a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gst.c
+++ b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gst.c
@@ -120,10 +120,15 @@
 #include "gst-i18n-lib.h"
 #include <locale.h>             /* for LC_ALL */
 
 #include "gst.h"
 
+#ifdef STATIC_BUILD
+gboolean fxplugins_init (GstPlugin * plugin);
+gboolean fxavplugins_init (GstPlugin * plugin);
+#endif
+
 #define GST_CAT_DEFAULT GST_CAT_GST_INIT
 
 #define MAX_PATH_SPLIT  16
 #define GST_PLUGIN_SEPARATOR ","
 
@@ -816,10 +821,20 @@
 #if defined(GSTREAMER_LITE)
   gst_plugin_register_static (GST_VERSION_MAJOR, GST_VERSION_MINOR,
       "gstplugins-lite", "gstplugins-lite",
       lite_plugins_init, VERSION, GST_LICENSE, PACKAGE,
       GST_PACKAGE_NAME, GST_PACKAGE_ORIGIN);
+#ifdef STATIC_BUILD
+  gst_plugin_register_static (GST_VERSION_MAJOR, GST_VERSION_MINOR,
+      "fxplugins", "fxplugin",
+      fxplugins_init, VERSION, GST_LICENSE, PACKAGE,
+      GST_PACKAGE_NAME, GST_PACKAGE_ORIGIN);
+  gst_plugin_register_static (GST_VERSION_MAJOR, GST_VERSION_MINOR,
+     "fxavplugins", "fxavplugin",
+      fxavplugins_init, VERSION, GST_LICENSE, PACKAGE,
+      GST_PACKAGE_NAME, GST_PACKAGE_ORIGIN);
+#endif // STATIC_BUILD
 #endif // GSTREAMER_LITE
 
   /*
    * Any errors happening below this point are non-fatal, we therefore mark
    * gstreamer as being initialized, since it is the case from a plugin point of
diff a/modules/javafx.media/src/main/native/gstreamer/plugins/av/fxavcodecplugin.c b/modules/javafx.media/src/main/native/gstreamer/plugins/av/fxavcodecplugin.c
--- a/modules/javafx.media/src/main/native/gstreamer/plugins/av/fxavcodecplugin.c
+++ b/modules/javafx.media/src/main/native/gstreamer/plugins/av/fxavcodecplugin.c
@@ -28,17 +28,22 @@
 #include <fxplugins_common.h>
 #include <audiodecoder.h>
 #include <videodecoder.h>
 #include <mpegtsdemuxer.h>
 
+#ifdef STATIC_BUILD
+gboolean fxavplugins_init (GstPlugin * plugin)
+#else
 static gboolean fxplugins_init (GstPlugin * plugin)
+#endif
 {
     return audiodecoder_plugin_init(plugin) &&
            videodecoder_plugin_init(plugin) &&
            mpegts_demuxer_plugin_init(plugin);
 }
 
+#ifndef STATIC_BUILD
 GstPluginDesc gst_plugin_desc =
 {
     GST_VERSION_MAJOR,
     GST_VERSION_MINOR,
     "avplugin",
@@ -49,5 +54,6 @@
     "JFXMedia",
     "JFXMedia",
     "http://javafx.com/",
     NULL
 };
+#endif
diff a/modules/javafx.media/src/main/native/gstreamer/plugins/fxplugins.c b/modules/javafx.media/src/main/native/gstreamer/plugins/fxplugins.c
--- a/modules/javafx.media/src/main/native/gstreamer/plugins/fxplugins.c
+++ b/modules/javafx.media/src/main/native/gstreamer/plugins/fxplugins.c
@@ -37,11 +37,15 @@
 
 #if defined(WIN32)
 gboolean dshowwrapper_init(GstPlugin* aacdecoder);
 #endif
 
+#ifdef STATIC_BUILD
+gboolean fxplugins_init (GstPlugin * plugin)
+#else
 static gboolean fxplugins_init (GstPlugin * plugin)
+#endif
 {
     return java_source_plugin_init(plugin) &&
            hls_progress_buffer_plugin_init(plugin) &&
 
 #if defined(WIN32)
diff a/modules/javafx.media/src/main/native/jfxmedia/platform/gstreamer/GstPlatform.cpp b/modules/javafx.media/src/main/native/jfxmedia/platform/gstreamer/GstPlatform.cpp
--- a/modules/javafx.media/src/main/native/jfxmedia/platform/gstreamer/GstPlatform.cpp
+++ b/modules/javafx.media/src/main/native/jfxmedia/platform/gstreamer/GstPlatform.cpp
@@ -51,11 +51,15 @@
     JavaVM *g_pJVM;
 
     /*
      * Specify the require JNI version.
      */
+#ifdef STATIC_BUILD
+    JNIEXPORT jint JNICALL JNI_OnLoad_jfxmedia(JavaVM *vm, void *reserved)
+#else
     JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM *vm, void *reserved)
+#endif
     {
         g_pJVM = vm;
         return JNI_VERSION_1_2;
     }
 
