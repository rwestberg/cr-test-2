diff a/modules/javafx.media/src/main/java/com/sun/media/jfxmedia/locator/ConnectionHolder.java b/modules/javafx.media/src/main/java/com/sun/media/jfxmedia/locator/ConnectionHolder.java
--- a/modules/javafx.media/src/main/java/com/sun/media/jfxmedia/locator/ConnectionHolder.java
+++ b/modules/javafx.media/src/main/java/com/sun/media/jfxmedia/locator/ConnectionHolder.java
@@ -256,11 +256,11 @@
         }
 
         boolean isSeekable() {
             return (urlConnection instanceof HttpURLConnection) ||
                    (urlConnection instanceof JarURLConnection) ||
-                   isJRT();
+                   isJRT() || isResource();
         }
 
         boolean isRandomAccess() {
             return false;
         }
@@ -297,11 +297,11 @@
                 } finally {
                     if (tmpURLConnection != null) {
                         Locator.closeConnection(tmpURLConnection);
                     }
                 }
-            } else if ((urlConnection instanceof JarURLConnection) || isJRT()) {
+            } else if ((urlConnection instanceof JarURLConnection) || isJRT() || isResource()) {
                 try {
                     closeConnection();
 
                     urlConnection = uri.toURL().openConnection();
 
@@ -340,10 +340,16 @@
 
         private boolean isJRT() {
             String scheme = uri.getScheme().toLowerCase();
             return "jrt".equals(scheme);
         }
+
+        private boolean isResource() {
+            String scheme = uri.getScheme().toLowerCase();
+            return "resource".equals(scheme);
+        }
+
     }
 
     // A "ConnectionHolder" that "reads" from a ByteBuffer, generally loaded from
     // some unsupported or buggy source
     private static class MemoryConnectionHolder extends ConnectionHolder {
