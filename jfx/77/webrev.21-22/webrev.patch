diff a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
--- a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
@@ -398,10 +398,11 @@
 
     gint x, y, w, h, gtk_w, gtk_h;
 
     gtk_window_get_position(GTK_WINDOW(gtk_widget), &x, &y);
     gtk_window_get_size(GTK_WINDOW(gtk_widget), &gtk_w, &gtk_h);
+
     w = gtk_w + geometry.adjust_w;
     h = gtk_h + geometry.adjust_h;
 
     gboolean pos_changed = geometry.current_x != x || geometry.current_y != y;
     gboolean size_changed = geometry.current_w != w || geometry.current_h != h
@@ -959,10 +960,11 @@
     }
 }
 
 void WindowContext::set_maximized(bool maximize) {
     is_maximized = maximize;
+
     if (maximize) {
         // enable the functionality
         GdkWMFunction wmf = (GdkWMFunction)(gdk_windowManagerFunctions | GDK_FUNC_MAXIMIZE);
         gdk_window_set_functions(gdk_window, wmf);
 
@@ -1217,17 +1219,17 @@
     gint rx, ry;
     gdk_window_get_root_origin(gdk_window, &rx, &ry);
 
     if (rx != x || ry != y) {
         // the left extends are correct - the right one is guessed to be the same
-        geometry.adjust_w = (rx - x) * 2;
+        geometry.adjust_w = (x - rx) * 2;
         // guess that bottom size is the same as left and right
-        geometry.adjust_h = (ry - y) + (rx - x);
+        geometry.adjust_h = (y - ry) + (x - rx);
 
         // those will be correct
-        geometry.view_x = (rx - x);
-        geometry.view_y = (ry - y);
+        geometry.view_x = (x - rx);
+        geometry.view_y = (y - ry);
 
         save_cached_extents();
     } else {
         CachedExtents c = (window_type == NORMAL) ? normal_extents : utility_extents;
         geometry.adjust_w = c.adjust_w;
@@ -1340,10 +1342,11 @@
         XFlush(display);
     }
 }
 
 void WindowContext::size_position_notify(bool size_changed, bool pos_changed) {
+
     if (jview) {
         if (size_changed) {
             mainEnv->CallVoidMethod(jview, jViewNotifyResize, geometry.current_cw, geometry.current_ch);
             CHECK_JNI_EXCEPTION(mainEnv);
         }
