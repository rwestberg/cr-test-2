diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/InjectedScriptManager.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/InjectedScriptManager.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/InjectedScriptManager.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/InjectedScriptManager.h
@@ -28,11 +28,10 @@
  */
 
 #pragma once
 
 #include "InjectedScript.h"
-#include "InjectedScriptHost.h"
 #include "InspectorEnvironment.h"
 #include <wtf/Forward.h>
 #include <wtf/HashMap.h>
 #include <wtf/text/WTFString.h>
 
@@ -40,17 +39,20 @@
 class ExecState;
 }
 
 namespace Inspector {
 
+class InjectedScriptHost;
+
 class JS_EXPORT_PRIVATE InjectedScriptManager {
     WTF_MAKE_NONCOPYABLE(InjectedScriptManager);
     WTF_MAKE_FAST_ALLOCATED;
 public:
     InjectedScriptManager(InspectorEnvironment&, Ref<InjectedScriptHost>&&);
     virtual ~InjectedScriptManager();
 
+    virtual void connect();
     virtual void disconnect();
     virtual void discardInjectedScripts();
 
     InjectedScriptHost& injectedScriptHost();
     InspectorEnvironment& inspectorEnvironment() const { return m_environment; }
@@ -58,10 +60,11 @@
     InjectedScript injectedScriptFor(JSC::ExecState*);
     InjectedScript injectedScriptForId(int);
     int injectedScriptIdFor(JSC::ExecState*);
     InjectedScript injectedScriptForObjectId(const String& objectId);
     void releaseObjectGroup(const String& objectGroup);
+    void clearEventValue();
     void clearExceptionValue();
 
 protected:
     virtual void didCreateInjectedScript(const InjectedScript&);
 
