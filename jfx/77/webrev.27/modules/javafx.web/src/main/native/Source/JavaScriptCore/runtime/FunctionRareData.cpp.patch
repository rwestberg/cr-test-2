diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/FunctionRareData.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/FunctionRareData.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/FunctionRareData.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/FunctionRareData.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2015-2017 Apple Inc. All rights reserved.
+ * Copyright (C) 2015-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -52,10 +52,11 @@
 }
 
 void FunctionRareData::visitChildren(JSCell* cell, SlotVisitor& visitor)
 {
     FunctionRareData* rareData = jsCast<FunctionRareData*>(cell);
+    ASSERT_GC_OBJECT_INHERITS(cell, info());
     Base::visitChildren(cell, visitor);
 
     rareData->m_objectAllocationProfile.visitAggregate(visitor);
     rareData->m_internalFunctionAllocationProfile.visitAggregate(visitor);
     visitor.append(rareData->m_boundFunctionStructure);
@@ -85,11 +86,11 @@
 
 void FunctionRareData::clear(const char* reason)
 {
     m_objectAllocationProfile.clear();
     m_internalFunctionAllocationProfile.clear();
-    m_objectAllocationProfileWatchpoint.fireAll(*vm(), reason);
+    m_objectAllocationProfileWatchpoint.fireAll(vm(), reason);
 }
 
 void FunctionRareData::AllocationProfileClearingWatchpoint::fireInternal(VM&, const FireDetail&)
 {
     m_rareData->clear("AllocationProfileClearingWatchpoint fired.");
