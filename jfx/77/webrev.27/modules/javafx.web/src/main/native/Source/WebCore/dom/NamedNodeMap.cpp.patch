diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/NamedNodeMap.cpp b/modules/javafx.web/src/main/native/Source/WebCore/dom/NamedNodeMap.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/NamedNodeMap.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/NamedNodeMap.cpp
@@ -25,36 +25,39 @@
 #include "config.h"
 #include "NamedNodeMap.h"
 
 #include "Attr.h"
 #include "HTMLElement.h"
+#include <wtf/IsoMallocInlines.h>
 
 namespace WebCore {
 
 using namespace HTMLNames;
 
+WTF_MAKE_ISO_ALLOCATED_IMPL(NamedNodeMap);
+
 void NamedNodeMap::ref()
 {
     m_element.ref();
 }
 
 void NamedNodeMap::deref()
 {
     m_element.deref();
 }
 
-RefPtr<Attr> NamedNodeMap::getNamedItem(const AtomicString& name) const
+RefPtr<Attr> NamedNodeMap::getNamedItem(const AtomString& name) const
 {
     return m_element.getAttributeNode(name);
 }
 
-RefPtr<Attr> NamedNodeMap::getNamedItemNS(const AtomicString& namespaceURI, const AtomicString& localName) const
+RefPtr<Attr> NamedNodeMap::getNamedItemNS(const AtomString& namespaceURI, const AtomString& localName) const
 {
     return m_element.getAttributeNodeNS(namespaceURI, localName);
 }
 
-ExceptionOr<Ref<Attr>> NamedNodeMap::removeNamedItem(const AtomicString& name)
+ExceptionOr<Ref<Attr>> NamedNodeMap::removeNamedItem(const AtomString& name)
 {
     if (!m_element.hasAttributes())
         return Exception { NotFoundError };
     auto index = m_element.findAttributeIndexByName(name, shouldIgnoreAttributeCase(m_element));
     if (index == ElementData::attributeNotFound)
@@ -75,11 +78,11 @@
         });
     }
     return names;
 }
 
-ExceptionOr<Ref<Attr>> NamedNodeMap::removeNamedItemNS(const AtomicString& namespaceURI, const AtomicString& localName)
+ExceptionOr<Ref<Attr>> NamedNodeMap::removeNamedItemNS(const AtomString& namespaceURI, const AtomString& localName)
 {
     if (!m_element.hasAttributes())
         return Exception { NotFoundError };
     auto index = m_element.findAttributeIndexByName(QualifiedName { nullAtom(), localName, namespaceURI });
     if (index == ElementData::attributeNotFound)
