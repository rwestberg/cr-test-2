diff a/modules/javafx.web/src/main/native/Source/WebCore/worklets/WorkletScriptController.cpp b/modules/javafx.web/src/main/native/Source/WebCore/worklets/WorkletScriptController.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/worklets/WorkletScriptController.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/worklets/WorkletScriptController.cpp
@@ -124,19 +124,21 @@
     m_workletGlobalScopeWrapper.set(*m_vm, JSGlobalScope::create(*m_vm, structure, static_cast<GlobalScope&>(*m_workletGlobalScope), proxy));
     contextPrototypeStructure->setGlobalObject(*m_vm, m_workletGlobalScopeWrapper.get());
     ASSERT(structure->globalObject() == m_workletGlobalScopeWrapper);
     ASSERT(m_workletGlobalScopeWrapper->structure(*m_vm)->globalObject() == m_workletGlobalScopeWrapper);
     contextPrototype->structure(*m_vm)->setGlobalObject(*m_vm, m_workletGlobalScopeWrapper.get());
-    contextPrototype->structure(*m_vm)->setPrototypeWithoutTransition(*m_vm, JSGlobalScope::prototype(*m_vm, *m_workletGlobalScopeWrapper.get()));
+    auto* globalScopePrototype = JSGlobalScope::prototype(*m_vm, *m_workletGlobalScopeWrapper.get());
+    globalScopePrototype->didBecomePrototype();
+    contextPrototype->structure(*m_vm)->setPrototypeWithoutTransition(*m_vm, globalScopePrototype);
 
     proxy->setTarget(*m_vm, m_workletGlobalScopeWrapper.get());
     proxy->structure(*m_vm)->setGlobalObject(*m_vm, m_workletGlobalScopeWrapper.get());
 
     ASSERT(m_workletGlobalScopeWrapper->globalObject() == m_workletGlobalScopeWrapper);
     ASSERT(asObject(m_workletGlobalScopeWrapper->getPrototypeDirect(*m_vm))->globalObject() == m_workletGlobalScopeWrapper);
 
-    m_consoleClient = std::make_unique<WorkletConsoleClient>(*m_workletGlobalScope);
+    m_consoleClient = makeUnique<WorkletConsoleClient>(*m_workletGlobalScope);
     m_workletGlobalScopeWrapper->setConsoleClient(m_consoleClient.get());
 }
 
 void WorkletScriptController::initScript()
 {
