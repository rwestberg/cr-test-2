diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/HashChangeEvent.h b/modules/javafx.web/src/main/native/Source/WebCore/dom/HashChangeEvent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/HashChangeEvent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/HashChangeEvent.h
@@ -40,16 +40,16 @@
     struct Init : EventInit {
         String oldURL;
         String newURL;
     };
 
-    static Ref<HashChangeEvent> create(const AtomicString& type, const Init& initializer, IsTrusted isTrusted = IsTrusted::No)
+    static Ref<HashChangeEvent> create(const AtomString& type, const Init& initializer, IsTrusted isTrusted = IsTrusted::No)
     {
         return adoptRef(*new HashChangeEvent(type, initializer, isTrusted));
     }
 
-    void initHashChangeEvent(const AtomicString& eventType, bool canBubble, bool cancelable, const String& oldURL, const String& newURL)
+    void initHashChangeEvent(const AtomString& eventType, bool canBubble, bool cancelable, const String& oldURL, const String& newURL)
     {
         if (isBeingDispatched())
             return;
 
         initEvent(eventType, canBubble, cancelable);
@@ -73,11 +73,11 @@
         , m_oldURL(oldURL)
         , m_newURL(newURL)
     {
     }
 
-    HashChangeEvent(const AtomicString& type, const Init& initializer, IsTrusted isTrusted)
+    HashChangeEvent(const AtomString& type, const Init& initializer, IsTrusted isTrusted)
         : Event(type, initializer, isTrusted)
         , m_oldURL(initializer.oldURL)
         , m_newURL(initializer.newURL)
     {
     }
