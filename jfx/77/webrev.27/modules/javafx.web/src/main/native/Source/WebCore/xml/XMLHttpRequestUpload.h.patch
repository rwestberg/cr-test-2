diff a/modules/javafx.web/src/main/native/Source/WebCore/xml/XMLHttpRequestUpload.h b/modules/javafx.web/src/main/native/Source/WebCore/xml/XMLHttpRequestUpload.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/xml/XMLHttpRequestUpload.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/xml/XMLHttpRequestUpload.h
@@ -29,29 +29,25 @@
 #include <wtf/Forward.h>
 
 namespace WebCore {
 
 class XMLHttpRequestUpload final : public XMLHttpRequestEventTarget {
-    WTF_MAKE_FAST_ALLOCATED;
+    WTF_MAKE_ISO_ALLOCATED(XMLHttpRequestUpload);
 public:
     explicit XMLHttpRequestUpload(XMLHttpRequest&);
 
     void ref() { m_request.ref(); }
     void deref() { m_request.deref(); }
 
-    void dispatchThrottledProgressEvent(bool lengthComputable, unsigned long long loaded, unsigned long long total);
-    void dispatchProgressEvent(const AtomicString& type);
+    void dispatchProgressEvent(const AtomString& type, unsigned long long loaded, unsigned long long total);
 
 private:
     void refEventTarget() final { ref(); }
     void derefEventTarget() final { deref(); }
 
     EventTargetInterface eventTargetInterface() const final { return XMLHttpRequestUploadEventTargetInterfaceType; }
     ScriptExecutionContext* scriptExecutionContext() const final { return m_request.scriptExecutionContext(); }
 
     XMLHttpRequest& m_request;
-    bool m_lengthComputable { false };
-    unsigned long long m_loaded { 0 };
-    unsigned long long m_total { 0 };
 };
 
 } // namespace WebCore
