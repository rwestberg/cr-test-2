diff a/modules/javafx.web/src/main/native/Source/WebCore/mathml/MathMLFractionElement.cpp b/modules/javafx.web/src/main/native/Source/WebCore/mathml/MathMLFractionElement.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/mathml/MathMLFractionElement.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/mathml/MathMLFractionElement.cpp
@@ -28,10 +28,11 @@
 #include "MathMLFractionElement.h"
 
 #if ENABLE(MATHML)
 
 #include "RenderMathMLFraction.h"
+#include "Settings.h"
 #include <wtf/IsoMallocInlines.h>
 
 namespace WebCore {
 
 WTF_MAKE_ISO_ALLOCATED_IMPL(MathMLFractionElement);
@@ -51,14 +52,19 @@
 const MathMLElement::Length& MathMLFractionElement::lineThickness()
 {
     if (m_lineThickness)
         return m_lineThickness.value();
 
+    auto& thickness = attributeWithoutSynchronization(linethicknessAttr);
+    if (document().settings().coreMathMLEnabled()) {
+        m_lineThickness = parseMathMLLength(thickness);
+        return m_lineThickness.value();
+    }
+
     // The MathML3 recommendation states that "medium" is the default thickness.
     // However, it only states that "thin" and "thick" are respectively thiner and thicker.
     // The MathML in HTML5 implementation note suggests 50% and 200% and these values are also used in Gecko.
-    auto& thickness = attributeWithoutSynchronization(linethicknessAttr);
     m_lineThickness = Length();
     if (equalLettersIgnoringASCIICase(thickness, "thin")) {
         m_lineThickness.value().type = LengthType::UnitLess;
         m_lineThickness.value().value = .5;
     } else if (equalLettersIgnoringASCIICase(thickness, "medium")) {
@@ -95,11 +101,11 @@
 MathMLFractionElement::FractionAlignment MathMLFractionElement::denominatorAlignment()
 {
     return cachedFractionAlignment(denomalignAttr, m_denominatorAlignment);
 }
 
-void MathMLFractionElement::parseAttribute(const QualifiedName& name, const AtomicString& value)
+void MathMLFractionElement::parseAttribute(const QualifiedName& name, const AtomString& value)
 {
     if (name == linethicknessAttr)
         m_lineThickness = WTF::nullopt;
     else if (name == numalignAttr)
         m_numeratorAlignment = WTF::nullopt;
