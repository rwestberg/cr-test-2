diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/server/MemoryObjectStoreCursor.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/server/MemoryObjectStoreCursor.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/server/MemoryObjectStoreCursor.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/server/MemoryObjectStoreCursor.cpp
@@ -191,12 +191,12 @@
 
     m_currentPositionKey = **m_iterator;
     if (m_info.cursorType() == IndexedDB::CursorType::KeyOnly)
         data = { m_currentPositionKey, m_currentPositionKey };
     else {
-        IDBValue value = { m_objectStore.valueForKeyRange(m_currentPositionKey), { }, { }, { } };
-        data = { m_currentPositionKey, m_currentPositionKey, WTFMove(value) };
+        IDBValue value = { m_objectStore.valueForKeyRange(m_currentPositionKey), { }, { } };
+        data = { m_currentPositionKey, m_currentPositionKey, WTFMove(value), m_objectStore.info().keyPath() };
     }
 }
 
 void MemoryObjectStoreCursor::incrementForwardIterator(IDBKeyDataSet& set, const IDBKeyData& key, uint32_t count)
 {
@@ -268,11 +268,11 @@
         setFirstInRemainingRange(set);
 
         didResetIterator = true;
     }
 
-    if (*m_iterator == set.end())
+    if (!m_iterator || *m_iterator == set.end())
         return;
 
     if (key.isValid()) {
         // If iterating to a key, the count passed in must be zero, as there is no way to iterate by both a count and to a key.
         ASSERT(!count);
