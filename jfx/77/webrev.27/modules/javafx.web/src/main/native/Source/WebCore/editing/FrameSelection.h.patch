diff a/modules/javafx.web/src/main/native/Source/WebCore/editing/FrameSelection.h b/modules/javafx.web/src/main/native/Source/WebCore/editing/FrameSelection.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/editing/FrameSelection.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/editing/FrameSelection.h
@@ -267,11 +267,12 @@
     EditingStyle* typingStyle() const;
     WEBCORE_EXPORT RefPtr<MutableStyleProperties> copyTypingStyle() const;
     void setTypingStyle(RefPtr<EditingStyle>&& style) { m_typingStyle = WTFMove(style); }
     void clearTypingStyle();
 
-    WEBCORE_EXPORT FloatRect selectionBounds(bool clipToVisibleContent = true) const;
+    enum class ClipToVisibleContent : uint8_t { No, Yes };
+    WEBCORE_EXPORT FloatRect selectionBounds(ClipToVisibleContent = ClipToVisibleContent::Yes) const;
 
     enum class TextRectangleHeight { TextHeight, SelectionHeight };
     WEBCORE_EXPORT void getClippedVisibleTextRectangles(Vector<FloatRect>&, TextRectangleHeight = TextRectangleHeight::SelectionHeight) const;
     WEBCORE_EXPORT void getTextRectangles(Vector<FloatRect>&, TextRectangleHeight = TextRectangleHeight::SelectionHeight) const;
 
@@ -310,11 +311,11 @@
     VisiblePosition modifyMovingBackward(TextGranularity, bool* reachedBoundary = nullptr);
 
     LayoutUnit lineDirectionPointForBlockDirectionNavigation(EPositionType);
 
     AXTextStateChangeIntent textSelectionIntent(EAlteration, SelectionDirection, TextGranularity);
-#if HAVE(ACCESSIBILITY)
+#if ENABLE(ACCESSIBILITY)
     void notifyAccessibilityForSelectionChange(const AXTextStateChangeIntent&);
 #else
     void notifyAccessibilityForSelectionChange(const AXTextStateChangeIntent&) { }
 #endif
 
@@ -383,12 +384,12 @@
 inline void FrameSelection::clearTypingStyle()
 {
     m_typingStyle = nullptr;
 }
 
-#if !(PLATFORM(COCOA) || PLATFORM(GTK))
-#if HAVE(ACCESSIBILITY)
+#if !(PLATFORM(COCOA) || USE(ATK))
+#if ENABLE(ACCESSIBILITY)
 inline void FrameSelection::notifyAccessibilityForSelectionChange(const AXTextStateChangeIntent&)
 {
 }
 #endif
 #endif
