diff a/modules/javafx.web/src/main/native/Source/WebKitLegacy/Storage/StorageNamespaceImpl.h b/modules/javafx.web/src/main/native/Source/WebKitLegacy/Storage/StorageNamespaceImpl.h
--- a/modules/javafx.web/src/main/native/Source/WebKitLegacy/Storage/StorageNamespaceImpl.h
+++ b/modules/javafx.web/src/main/native/Source/WebKitLegacy/Storage/StorageNamespaceImpl.h
@@ -26,23 +26,23 @@
 #pragma once
 
 #include <WebCore/SecurityOriginData.h>
 #include <WebCore/StorageArea.h>
 #include <WebCore/StorageNamespace.h>
+#include <pal/SessionID.h>
 #include <wtf/HashMap.h>
 #include <wtf/RefPtr.h>
 #include <wtf/text/WTFString.h>
 
 namespace WebKit {
 
 class StorageAreaImpl;
 
 class StorageNamespaceImpl : public WebCore::StorageNamespace {
 public:
-    static Ref<StorageNamespaceImpl> createSessionStorageNamespace(unsigned quota);
-    static Ref<StorageNamespaceImpl> createEphemeralLocalStorageNamespace(unsigned quota);
-    static Ref<StorageNamespaceImpl> getOrCreateLocalStorageNamespace(const String& databasePath, unsigned quota);
+    static Ref<StorageNamespaceImpl> createSessionStorageNamespace(unsigned quota, PAL::SessionID);
+    static Ref<StorageNamespaceImpl> getOrCreateLocalStorageNamespace(const String& databasePath, unsigned quota, PAL::SessionID);
     virtual ~StorageNamespaceImpl();
 
     void close();
 
     // Not removing the origin's StorageArea from m_storageAreaMap because
@@ -52,12 +52,15 @@
     void clearOriginForDeletion(const WebCore::SecurityOriginData&);
     void clearAllOriginsForDeletion();
     void sync();
     void closeIdleLocalStorageDatabases();
 
+    PAL::SessionID sessionID() const override { return m_sessionID; }
+    void setSessionIDForTesting(PAL::SessionID) override;
+
 private:
-    StorageNamespaceImpl(WebCore::StorageType, const String& path, unsigned quota);
+    StorageNamespaceImpl(WebCore::StorageType, const String& path, unsigned quota, PAL::SessionID);
 
     Ref<WebCore::StorageArea> storageArea(const WebCore::SecurityOriginData&) override;
     Ref<StorageNamespace> copy(WebCore::Page* newPage) override;
 
     typedef HashMap<WebCore::SecurityOriginData, RefPtr<StorageAreaImpl>> StorageAreaMap;
@@ -71,8 +74,10 @@
 
     // The default quota for each new storage area.
     unsigned m_quota;
 
     bool m_isShutdown;
+
+    PAL::SessionID m_sessionID;
 };
 
 } // namespace WebCore
