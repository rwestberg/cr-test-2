diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/EllipsisBox.h b/modules/javafx.web/src/main/native/Source/WebCore/rendering/EllipsisBox.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/EllipsisBox.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/EllipsisBox.h
@@ -28,11 +28,11 @@
 class HitTestResult;
 
 class EllipsisBox final : public InlineElementBox {
     WTF_MAKE_ISO_ALLOCATED(EllipsisBox);
 public:
-    EllipsisBox(RenderBlockFlow&, const AtomicString& ellipsisStr, InlineFlowBox* parent, int width, int height, int y, bool firstLine, bool isHorizontal, InlineBox* markupBox);
+    EllipsisBox(RenderBlockFlow&, const AtomString& ellipsisStr, InlineFlowBox* parent, int width, int height, int y, bool firstLine, bool isHorizontal, InlineBox* markupBox);
     void paint(PaintInfo&, const LayoutPoint&, LayoutUnit lineTop, LayoutUnit lineBottom) override;
     bool nodeAtPoint(const HitTestRequest&, HitTestResult&, const HitTestLocation& locationInContainer, const LayoutPoint& accumulatedOffset, LayoutUnit lineTop, LayoutUnit lineBottom, HitTestAction) final;
     void setSelectionState(RenderObject::SelectionState s) { m_selectionState = s; }
     IntRect selectionRect();
 
@@ -46,9 +46,9 @@
     InlineBox* markupBox() const;
 
     bool m_shouldPaintMarkupBox;
     RenderObject::SelectionState m_selectionState { RenderObject::SelectionNone };
     int m_height;
-    AtomicString m_str;
+    AtomString m_str;
 };
 
 } // namespace WebCore
