diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/CounterNode.cpp b/modules/javafx.web/src/main/native/Source/WebCore/rendering/CounterNode.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/CounterNode.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/CounterNode.cpp
@@ -209,11 +209,11 @@
         node->m_countInParent = newCount;
         node->resetThisAndDescendantsRenderers();
     }
 }
 
-void CounterNode::insertAfter(CounterNode& newChild, CounterNode* beforeChild, const AtomicString& identifier)
+void CounterNode::insertAfter(CounterNode& newChild, CounterNode* beforeChild, const AtomString& identifier)
 {
     ASSERT(!newChild.m_parent);
     ASSERT(!newChild.m_previousSibling);
     ASSERT(!newChild.m_nextSibling);
     // If the beforeChild is not our child we can not complete the request. This hardens against bugs in RenderCounter.
