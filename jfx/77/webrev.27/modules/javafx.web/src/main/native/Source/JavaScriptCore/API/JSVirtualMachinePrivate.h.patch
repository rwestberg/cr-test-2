diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/API/JSVirtualMachinePrivate.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/API/JSVirtualMachinePrivate.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/API/JSVirtualMachinePrivate.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/API/JSVirtualMachinePrivate.h
@@ -41,11 +41,11 @@
  you do call this API when JavaScript is running on the stack, the API will wait until all JavaScript
  on the stack finishes running to free memory back to the OS. Therefore, calling this
  API may not synchronously free memory.
 */
 
-- (void)shrinkFootprintWhenIdle JSC_API_AVAILABLE(macosx(10.14), ios(12.0));
+- (void)shrinkFootprintWhenIdle JSC_API_AVAILABLE(macos(10.14), ios(12.0));
 
 #if ENABLE(DFG_JIT)
 
 /*!
 @method
@@ -56,11 +56,11 @@
  the Options value for the number of DFG threads will be updated to ensure the
  DFG compiler already starts with the up-to-date limit.
 @param numberOfThreads The number of threads the DFG compiler should use going forward
 @result The previous number of threads being used by the DFG compiler
 */
-+ (NSUInteger)setNumberOfDFGCompilerThreads:(NSUInteger)numberOfThreads JSC_API_AVAILABLE(macosx(10.14), ios(12.0));
++ (NSUInteger)setNumberOfDFGCompilerThreads:(NSUInteger)numberOfThreads JSC_API_AVAILABLE(macos(10.14), ios(12.0));
 
 /*!
 @method
 @abstract Set the number of threads to be used by the FTL JIT compiler.
 @discussion If called after the VM has been initialized, it will terminate
@@ -69,11 +69,18 @@
  the Options value for the number of FTL threads will be updated to ensure the
  FTL compiler already starts with the up-to-date limit.
 @param numberOfThreads The number of threads the FTL compiler should use going forward
 @result The previous number of threads being used by the FTL compiler
 */
-+ (NSUInteger)setNumberOfFTLCompilerThreads:(NSUInteger)numberOfThreads JSC_API_AVAILABLE(macosx(10.14), ios(12.0));
++ (NSUInteger)setNumberOfFTLCompilerThreads:(NSUInteger)numberOfThreads JSC_API_AVAILABLE(macos(10.14), ios(12.0));
+
+/*!
+@method
+@abstract Allows embedders of JSC to specify that JSC should crash the process if a VM is created when unexpected.
+@param shouldCrash Sets process-wide state that indicates whether VM creation should crash or not.
+*/
++ (void)setCrashOnVMCreation:(BOOL)shouldCrash;
 
 #endif // ENABLE(DFG_JIT)
 
 @end
 
