diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RootInlineBox.h b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RootInlineBox.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RootInlineBox.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RootInlineBox.h
@@ -102,11 +102,11 @@
 
     void childRemoved(InlineBox* box);
 
     bool lineCanAccommodateEllipsis(bool ltr, int blockEdge, int lineBoxEdge, int ellipsisWidth);
     // Return the truncatedWidth, the width of the truncated text + ellipsis.
-    float placeEllipsis(const AtomicString& ellipsisStr, bool ltr, float blockLeftEdge, float blockRightEdge, float ellipsisWidth, InlineBox* markupBox = nullptr);
+    float placeEllipsis(const AtomString& ellipsisStr, bool ltr, float blockLeftEdge, float blockRightEdge, float ellipsisWidth, InlineBox* markupBox = nullptr);
     // Return the position of the EllipsisBox or -1.
     float placeEllipsisBox(bool ltr, float blockLeftEdge, float blockRightEdge, float ellipsisWidth, float &truncatedWidth, bool& foundBox) final;
 
     using InlineBox::hasEllipsisBox;
     EllipsisBox* ellipsisBox() const;
@@ -143,11 +143,11 @@
     {
         ASSERT(!isDirty());
         if (m_floats)
             m_floats->append(makeWeakPtr(floatingBox));
         else
-            m_floats = std::make_unique<CleanLineFloatList>(1, makeWeakPtr(floatingBox));
+            m_floats = makeUnique<CleanLineFloatList>(1, makeWeakPtr(floatingBox));
     }
 
     void removeFloat(RenderBox& floatingBox)
     {
         ASSERT(m_floats);
