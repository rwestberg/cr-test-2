diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/persistence/PersistentCoders.h b/modules/javafx.web/src/main/native/Source/WTF/wtf/persistence/PersistentCoders.h
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/persistence/PersistentCoders.h
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/persistence/PersistentCoders.h
@@ -148,11 +148,11 @@
 
 template<typename T, size_t inlineCapacity> struct VectorCoder<true, T, inlineCapacity> {
     static void encode(Encoder& encoder, const Vector<T, inlineCapacity>& vector)
     {
         encoder << static_cast<uint64_t>(vector.size());
-        encoder.encodeFixedLengthData(reinterpret_cast<const uint8_t*>(vector.data()), vector.size() * sizeof(T), alignof(T));
+        encoder.encodeFixedLengthData(reinterpret_cast<const uint8_t*>(vector.data()), vector.size() * sizeof(T));
     }
 
     static bool decode(Decoder& decoder, Vector<T, inlineCapacity>& vector)
     {
         uint64_t decodedSize;
@@ -194,10 +194,11 @@
         uint64_t hashMapSize;
         if (!decoder.decode(hashMapSize))
             return false;
 
         HashMapType tempHashMap;
+        tempHashMap.reserveInitialCapacity(static_cast<unsigned>(hashMapSize));
         for (uint64_t i = 0; i < hashMapSize; ++i) {
             KeyArg key;
             MappedArg value;
             if (!decoder.decode(key))
                 return false;
@@ -280,13 +281,13 @@
         result = WallTime::fromRawSeconds(value);
         return true;
     }
 };
 
-template<> struct Coder<AtomicString> {
-    WTF_EXPORT_PRIVATE static void encode(Encoder&, const AtomicString&);
-    WTF_EXPORT_PRIVATE static bool decode(Decoder&, AtomicString&);
+template<> struct Coder<AtomString> {
+    WTF_EXPORT_PRIVATE static void encode(Encoder&, const AtomString&);
+    WTF_EXPORT_PRIVATE static bool decode(Decoder&, AtomString&);
 };
 
 template<> struct Coder<CString> {
     WTF_EXPORT_PRIVATE static void encode(Encoder&, const CString&);
     WTF_EXPORT_PRIVATE static bool decode(Decoder&, CString&);
