diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/streams/ReadableStream.js b/modules/javafx.web/src/main/native/Source/WebCore/Modules/streams/ReadableStream.js
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/streams/ReadableStream.js
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/streams/ReadableStream.js
@@ -78,11 +78,11 @@
 
     if (!@isReadableStream(this))
         return @Promise.@reject(@makeThisTypeError("ReadableStream", "cancel"));
 
     if (@isReadableStreamLocked(this))
-        return @Promise.@reject(new @TypeError("ReadableStream is locked"));
+        return @Promise.@reject(@makeTypeError("ReadableStream is locked"));
 
     return @readableStreamCancel(this, reason);
 }
 
 function getReader(options)
@@ -196,11 +196,11 @@
 
     @Promise.prototype.@then.@call(reader.closed, @undefined, abortDestination);
     @Promise.prototype.@then.@call(destination.closed,
         function() {
             if (!closedPurposefully)
-                cancelSource(new @TypeError('destination is closing or closed and cannot be piped to anymore'));
+                cancelSource(@makeTypeError('destination is closing or closed and cannot be piped to anymore'));
         },
         cancelSource
     );
 
     doPipe();
