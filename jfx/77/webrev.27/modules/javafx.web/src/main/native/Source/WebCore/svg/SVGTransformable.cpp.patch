diff a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGTransformable.cpp b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGTransformable.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGTransformable.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGTransformable.cpp
@@ -25,11 +25,10 @@
 #include "AffineTransform.h"
 #include "FloatConversion.h"
 #include "SVGElement.h"
 #include "SVGNames.h"
 #include "SVGParserUtilities.h"
-#include "SVGTransformListValues.h"
 #include <wtf/text/StringView.h>
 
 namespace WebCore {
 
 static int parseTransformParamList(const UChar*& ptr, const UChar* end, float* values, int required, int optional)
@@ -142,11 +141,11 @@
 static const UChar scaleDesc[] =  {'s', 'c', 'a', 'l', 'e'};
 static const UChar translateDesc[] =  {'t', 'r', 'a', 'n', 's', 'l', 'a', 't', 'e'};
 static const UChar rotateDesc[] =  {'r', 'o', 't', 'a', 't', 'e'};
 static const UChar matrixDesc[] =  {'m', 'a', 't', 'r', 'i', 'x'};
 
-static inline bool parseAndSkipType(const UChar*& currTransform, const UChar* end, SVGTransformValue::SVGTransformType& type)
+bool SVGTransformable::parseAndSkipType(const UChar*& currTransform, const UChar* end, SVGTransformValue::SVGTransformType& type)
 {
     if (currTransform >= end)
         return false;
 
     if (*currTransform == 's') {
@@ -177,36 +176,6 @@
     const UChar* characters = upconvertedCharacters;
     parseAndSkipType(characters, characters + typeString.length(), type);
     return type;
 }
 
-bool SVGTransformable::parseTransformAttribute(SVGTransformListValues& list, const UChar*& currTransform, const UChar* end, TransformParsingMode mode)
-{
-    if (mode == ClearList)
-        list.clear();
-
-    bool delimParsed = false;
-    while (currTransform < end) {
-        delimParsed = false;
-        SVGTransformValue::SVGTransformType type = SVGTransformValue::SVG_TRANSFORM_UNKNOWN;
-        skipOptionalSVGSpaces(currTransform, end);
-
-        if (!parseAndSkipType(currTransform, end, type))
-            return false;
-
-        SVGTransformValue transform;
-        if (!parseTransformValue(type, currTransform, end, transform))
-            return false;
-
-        list.append(transform);
-        skipOptionalSVGSpaces(currTransform, end);
-        if (currTransform < end && *currTransform == ',') {
-            delimParsed = true;
-            ++currTransform;
-        }
-        skipOptionalSVGSpaces(currTransform, end);
-    }
-
-    return !delimParsed;
-}
-
 }
