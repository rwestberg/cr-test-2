diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/B3Procedure.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/B3Procedure.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/B3Procedure.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/B3Procedure.h
@@ -110,10 +110,18 @@
     }
 
     JS_EXPORT_PRIVATE StackSlot* addStackSlot(unsigned byteSize);
     JS_EXPORT_PRIVATE Variable* addVariable(Type);
 
+    JS_EXPORT_PRIVATE Type addTuple(Vector<Type>&& types);
+    const Vector<Vector<Type>>& tuples() const { return m_tuples; };
+    bool isValidTuple(Type tuple) const;
+    Type extractFromTuple(Type tuple, unsigned index) const;
+    const Vector<Type>& tupleForType(Type tuple) const;
+
+    unsigned returnCount(Type type) const { return type.isTuple() ? tupleForType(type).size() : type.isNumeric(); }
+
     template<typename ValueType, typename... Arguments>
     ValueType* add(Arguments...);
 
     Value* clone(Value*);
 
@@ -271,10 +279,11 @@
     JS_EXPORT_PRIVATE Value* addValueImpl(Value*);
     void setBlockOrderImpl(Vector<BasicBlock*>&);
 
     SparseCollection<StackSlot> m_stackSlots;
     SparseCollection<Variable> m_variables;
+    Vector<Vector<Type>> m_tuples;
     Vector<std::unique_ptr<BasicBlock>> m_blocks;
     SparseCollection<Value> m_values;
     std::unique_ptr<CFG> m_cfg;
     std::unique_ptr<Dominators> m_dominators;
     std::unique_ptr<NaturalLoops> m_naturalLoops;
