diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/shared/IDBResultData.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/shared/IDBResultData.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/shared/IDBResultData.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/shared/IDBResultData.h
@@ -105,10 +105,11 @@
 
     const IDBKeyData* resultKey() const { return m_resultKey.get(); }
     uint64_t resultInteger() const { return m_resultInteger; }
 
     WEBCORE_EXPORT const IDBGetResult& getResult() const;
+    WEBCORE_EXPORT IDBGetResult& getResultRef();
     WEBCORE_EXPORT const IDBGetAllResult& getAllResult() const;
 
     WEBCORE_EXPORT IDBResultData();
     template<class Encoder> void encode(Encoder&) const;
     template<class Decoder> static Optional<IDBResultData> decode(Decoder&);
@@ -181,29 +182,29 @@
     bool hasObject;
 
     if (!decoder.decode(hasObject))
         return WTF::nullopt;
     if (hasObject) {
-        auto object = std::make_unique<IDBDatabaseInfo>();
+        auto object = makeUnique<IDBDatabaseInfo>();
         if (!decoder.decode(*object))
             return WTF::nullopt;
         result.m_databaseInfo = WTFMove(object);
     }
 
     if (!decoder.decode(hasObject))
         return WTF::nullopt;
     if (hasObject) {
-        auto object = std::make_unique<IDBTransactionInfo>();
+        auto object = makeUnique<IDBTransactionInfo>();
         if (!decoder.decode(*object))
             return WTF::nullopt;
         result.m_transactionInfo = WTFMove(object);
     }
 
     if (!decoder.decode(hasObject))
         return WTF::nullopt;
     if (hasObject) {
-        auto object = std::make_unique<IDBKeyData>();
+        auto object = makeUnique<IDBKeyData>();
         Optional<IDBKeyData> optional;
         decoder >> optional;
         if (!optional)
             return WTF::nullopt;
         *object = WTFMove(*optional);
@@ -211,26 +212,26 @@
     }
 
     if (!decoder.decode(hasObject))
         return WTF::nullopt;
     if (hasObject) {
-        auto object = std::make_unique<IDBGetResult>();
+        auto object = makeUnique<IDBGetResult>();
         if (!decoder.decode(*object))
             return WTF::nullopt;
         result.m_getResult = WTFMove(object);
     }
 
     if (!decoder.decode(hasObject))
         return WTF::nullopt;
     if (hasObject) {
-        auto object = std::make_unique<IDBGetAllResult>();
+        auto object = makeUnique<IDBGetAllResult>();
         if (!decoder.decode(*object))
             return WTF::nullopt;
         result.m_getAllResult = WTFMove(object);
     }
 
-    return WTFMove(result);
+    return result;
 }
 
 } // namespace WebCore
 
 #endif // ENABLE(INDEXED_DATABASE)
