diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/entriesapi/DOMFileSystem.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/entriesapi/DOMFileSystem.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/entriesapi/DOMFileSystem.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/entriesapi/DOMFileSystem.cpp
@@ -31,15 +31,18 @@
 #include "FileSystemFileEntry.h"
 #include "ScriptExecutionContext.h"
 #include <wtf/CrossThreadCopier.h>
 #include <wtf/FileMetadata.h>
 #include <wtf/FileSystem.h>
+#include <wtf/IsoMallocInlines.h>
 #include <wtf/UUID.h>
 #include <wtf/text/StringBuilder.h>
 
 namespace WebCore {
 
+WTF_MAKE_ISO_ALLOCATED_IMPL(DOMFileSystem);
+
 struct ListedChild {
     String filename;
     FileMetadata::Type type;
 
     ListedChild isolatedCopy() const { return { filename.isolatedCopy(), type }; }
@@ -58,11 +61,11 @@
         auto metadata = FileSystem::fileMetadata(childPath);
         if (!metadata || metadata.value().isHidden)
             continue;
         listedChildren.uncheckedAppend(ListedChild { FileSystem::pathGetFileName(childPath), metadata.value().type });
     }
-    return WTFMove(listedChildren);
+    return listedChildren;
 }
 
 static ExceptionOr<Vector<Ref<FileSystemEntry>>> toFileSystemEntries(ScriptExecutionContext& context, DOMFileSystem& fileSystem, ExceptionOr<Vector<ListedChild>>&& listedChildren, const String& parentVirtualPath)
 {
     ASSERT(isMainThread());
@@ -82,11 +85,11 @@
             break;
         default:
             break;
         }
     }
-    return WTFMove(entries);
+    return entries;
 }
 
 // https://wicg.github.io/entries-api/#name
 static bool isValidPathNameCharacter(UChar c)
 {
@@ -338,11 +341,11 @@
         auto validatedVirtualPath = validatePathIsExpectedType(fullPath, WTFMove(virtualPath), FileMetadata::Type::File);
         callOnMainThread([context = WTFMove(context), fullPath = crossThreadCopy(fullPath), validatedVirtualPath = crossThreadCopy(validatedVirtualPath), completionCallback = WTFMove(completionCallback)]() mutable {
             if (validatedVirtualPath.hasException())
                 completionCallback(validatedVirtualPath.releaseException());
             else
-                completionCallback(File::create(fullPath));
+                completionCallback(File::create(context->sessionID(), fullPath));
         });
     });
 }
 
 } // namespace WebCore
