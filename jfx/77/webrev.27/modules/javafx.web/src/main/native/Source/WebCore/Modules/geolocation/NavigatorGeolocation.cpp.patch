diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/geolocation/NavigatorGeolocation.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/geolocation/NavigatorGeolocation.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/geolocation/NavigatorGeolocation.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/geolocation/NavigatorGeolocation.cpp
@@ -32,29 +32,29 @@
 #include "Geolocation.h"
 #include "Navigator.h"
 
 namespace WebCore {
 
-NavigatorGeolocation::NavigatorGeolocation(DOMWindow* window)
-    : DOMWindowProperty(window)
+NavigatorGeolocation::NavigatorGeolocation(Navigator& navigator)
+    : m_navigator(navigator)
 {
 }
 
 NavigatorGeolocation::~NavigatorGeolocation() = default;
 
 const char* NavigatorGeolocation::supplementName()
 {
     return "NavigatorGeolocation";
 }
 
-NavigatorGeolocation* NavigatorGeolocation::from(Navigator* navigator)
+NavigatorGeolocation* NavigatorGeolocation::from(Navigator& navigator)
 {
-    NavigatorGeolocation* supplement = static_cast<NavigatorGeolocation*>(Supplement<Navigator>::from(navigator, supplementName()));
+    NavigatorGeolocation* supplement = static_cast<NavigatorGeolocation*>(Supplement<Navigator>::from(&navigator, supplementName()));
     if (!supplement) {
-        auto newSupplement = std::make_unique<NavigatorGeolocation>(navigator->window());
+        auto newSupplement = makeUnique<NavigatorGeolocation>(navigator);
         supplement = newSupplement.get();
-        provideTo(navigator, supplementName(), WTFMove(newSupplement));
+        provideTo(&navigator, supplementName(), WTFMove(newSupplement));
     }
     return supplement;
 }
 
 #if PLATFORM(IOS_FAMILY)
@@ -65,17 +65,17 @@
 }
 #endif // PLATFORM(IOS_FAMILY)
 
 Geolocation* NavigatorGeolocation::geolocation(Navigator& navigator)
 {
-    return NavigatorGeolocation::from(&navigator)->geolocation();
+    return NavigatorGeolocation::from(navigator)->geolocation();
 }
 
 Geolocation* NavigatorGeolocation::geolocation() const
 {
     if (!m_geolocation)
-        m_geolocation = Geolocation::create(window() ? window()->document() : nullptr);
+        m_geolocation = Geolocation::create(m_navigator);
     return m_geolocation.get();
 }
 
 } // namespace WebCore
 
