diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/PropertyNameArray.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/PropertyNameArray.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/PropertyNameArray.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/PropertyNameArray.h
@@ -1,7 +1,7 @@
 /*
- *  Copyright (C) 2006, 2008, 2012 Apple Inc. All rights reserved.
+ *  Copyright (C) 2006-2019 Apple Inc. All rights reserved.
  *
  *  This library is free software; you can redistribute it and/or
  *  modify it under the terms of the GNU Library General Public
  *  License as published by the Free Software Foundation; either
  *  version 2 of the License, or (at your option) any later version.
@@ -45,19 +45,19 @@
 };
 
 // FIXME: Rename to PropertyNameArrayBuilder.
 class PropertyNameArray {
 public:
-    PropertyNameArray(VM* vm, PropertyNameMode propertyNameMode, PrivateSymbolMode privateSymbolMode)
+    PropertyNameArray(VM& vm, PropertyNameMode propertyNameMode, PrivateSymbolMode privateSymbolMode)
         : m_data(PropertyNameArrayData::create())
         , m_vm(vm)
         , m_propertyNameMode(propertyNameMode)
         , m_privateSymbolMode(privateSymbolMode)
     {
     }
 
-    VM* vm() { return m_vm; }
+    VM& vm() { return m_vm; }
 
     void add(uint32_t index)
     {
         add(Identifier::from(m_vm, index));
     }
@@ -89,11 +89,11 @@
     void addUncheckedInternal(UniquedStringImpl*);
     bool isUidMatchedToTypeMode(UniquedStringImpl* identifier);
 
     RefPtr<PropertyNameArrayData> m_data;
     HashSet<UniquedStringImpl*> m_set;
-    VM* m_vm;
+    VM& m_vm;
     PropertyNameMode m_propertyNameMode;
     PrivateSymbolMode m_privateSymbolMode;
 };
 
 ALWAYS_INLINE void PropertyNameArray::add(const Identifier& identifier)
