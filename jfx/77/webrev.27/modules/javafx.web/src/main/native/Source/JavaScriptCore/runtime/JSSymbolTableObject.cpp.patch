diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSSymbolTableObject.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSSymbolTableObject.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSSymbolTableObject.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSSymbolTableObject.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2012, 2013 Apple Inc. All rights reserved.
+ * Copyright (C) 2012-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  *
@@ -53,19 +53,20 @@
     return Base::deleteProperty(thisObject, exec, propertyName);
 }
 
 void JSSymbolTableObject::getOwnNonIndexPropertyNames(JSObject* object, ExecState* exec, PropertyNameArray& propertyNames, EnumerationMode mode)
 {
+    VM& vm = exec->vm();
     JSSymbolTableObject* thisObject = jsCast<JSSymbolTableObject*>(object);
     {
         ConcurrentJSLocker locker(thisObject->symbolTable()->m_lock);
         SymbolTable::Map::iterator end = thisObject->symbolTable()->end(locker);
         for (SymbolTable::Map::iterator it = thisObject->symbolTable()->begin(locker); it != end; ++it) {
             if (!(it->value.getAttributes() & PropertyAttribute::DontEnum) || mode.includeDontEnumProperties()) {
                 if (it->key->isSymbol() && !propertyNames.includeSymbolProperties())
                     continue;
-                propertyNames.add(Identifier::fromUid(exec, it->key.get()));
+                propertyNames.add(Identifier::fromUid(vm, it->key.get()));
             }
         }
     }
 
     Base::getOwnNonIndexPropertyNames(thisObject, exec, propertyNames, mode);
