diff a/modules/javafx.web/src/main/native/Source/WebCore/html/NumberInputType.h b/modules/javafx.web/src/main/native/Source/WebCore/html/NumberInputType.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/NumberInputType.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/NumberInputType.h
@@ -38,22 +38,22 @@
 class NumberInputType final : public TextFieldInputType {
 public:
     explicit NumberInputType(HTMLInputElement& element) : TextFieldInputType(element) { }
 
 private:
-    const AtomicString& formControlType() const final;
+    const AtomString& formControlType() const final;
     void setValue(const String&, bool valueChanged, TextFieldEventBehavior) final;
     double valueAsDouble() const final;
     ExceptionOr<void> setValueAsDouble(double, TextFieldEventBehavior) const final;
     ExceptionOr<void> setValueAsDecimal(const Decimal&, TextFieldEventBehavior) const final;
     bool typeMismatchFor(const String&) const final;
     bool typeMismatch() const final;
     bool sizeShouldIncludeDecoration(int defaultSize, int& preferredSize) const final;
     float decorationWidth() const final;
     bool isSteppable() const final;
     StepRange createStepRange(AnyStepHandling) const final;
-    void handleKeydownEvent(KeyboardEvent&) final;
+    ShouldCallBaseEventHandler handleKeydownEvent(KeyboardEvent&) final;
     Decimal parseToNumber(const String&, const Decimal&) const final;
     String serialize(const Decimal&) const final;
     String localizeValue(const String&) const final;
     String visibleValue() const final;
     String convertFromVisibleValue(const String&) const final;
