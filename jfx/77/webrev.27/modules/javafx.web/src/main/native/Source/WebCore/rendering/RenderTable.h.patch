diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderTable.h b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderTable.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderTable.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderTable.h
@@ -150,13 +150,13 @@
         // our column's width. In practice, horizontal border-spacing won't change often.
         m_columnLogicalWidthChanged |= m_columnPos[index] != position;
         m_columnPos[index] = position;
     }
 
-    RenderTableSection* header() const { return m_head.get(); }
-    RenderTableSection* footer() const { return m_foot.get(); }
-    RenderTableSection* firstBody() const { return m_firstBody.get(); }
+    RenderTableSection* header() const;
+    RenderTableSection* footer() const;
+    RenderTableSection* firstBody() const;
 
     // This function returns 0 if the table has no section.
     RenderTableSection* topSection() const;
     RenderTableSection* bottomSection() const;
 
@@ -368,20 +368,10 @@
     mutable LayoutUnit m_columnOffsetTop;
     mutable LayoutUnit m_columnOffsetHeight;
     bool m_inRecursiveSectionMovedWithPagination { false };
 };
 
-inline RenderTableSection* RenderTable::topSection() const
-{
-    ASSERT(!needsSectionRecalc());
-    if (m_head)
-        return m_head.get();
-    if (m_firstBody)
-        return m_firstBody.get();
-    return m_foot.get();
-}
-
 inline bool isDirectionSame(const RenderBox* tableItem, const RenderBox* otherTableItem) { return tableItem && otherTableItem ? tableItem->style().direction() == otherTableItem->style().direction() : true; }
 
 inline RenderPtr<RenderBox> RenderTable::createAnonymousBoxWithSameTypeAs(const RenderBox& renderer) const
 {
     return RenderTable::createTableWithStyle(renderer.document(), renderer.style());
