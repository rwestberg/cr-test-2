diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/offlineasm/parser.rb b/modules/javafx.web/src/main/native/Source/JavaScriptCore/offlineasm/parser.rb
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/offlineasm/parser.rb
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/offlineasm/parser.rb
@@ -626,13 +626,11 @@
     
     def parseSequence(final, comment)
         firstCodeOrigin = @tokens[@idx].codeOrigin
         list = []
         loop {
-            if (@idx == @tokens.length and not final) or (final and @tokens[@idx] =~ final)
-                break
-            elsif @tokens[@idx].is_a? Annotation
+            if @tokens[@idx].is_a? Annotation
                 # This is the only place where we can encounter a global
                 # annotation, and hence need to be able to distinguish between
                 # them.
                 # globalAnnotations are the ones that start from column 0. All
                 # others are considered localAnnotations.  The only reason to
@@ -642,10 +640,12 @@
                 codeOrigin = @tokens[@idx].codeOrigin
                 annotationOpcode = (@tokens[@idx].type == :global) ? "globalAnnotation" : "localAnnotation"
                 list << Instruction.new(codeOrigin, annotationOpcode, [], @tokens[@idx].string)
                 @annotation = nil
                 @idx += 2 # Consume the newline as well.
+            elsif (@idx == @tokens.length and not final) or (final and @tokens[@idx] =~ final)
+                break
             elsif @tokens[@idx] == "\n"
                 # ignore
                 @idx += 1
             elsif @tokens[@idx] == "const"
                 @idx += 1
