diff a/modules/javafx.web/src/main/native/Source/WebCore/xml/XSLStyleSheetLibxslt.cpp b/modules/javafx.web/src/main/native/Source/WebCore/xml/XSLStyleSheetLibxslt.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/xml/XSLStyleSheetLibxslt.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/xml/XSLStyleSheetLibxslt.cpp
@@ -143,11 +143,11 @@
 
     auto upconvertedCharacters = StringView(string).upconvertedCharacters();
     const char* buffer = reinterpret_cast<const char*>(upconvertedCharacters.get());
     Checked<unsigned, RecordOverflow> unsignedSize = string.length();
     unsignedSize *= sizeof(UChar);
-    if (unsignedSize.hasOverflowed() || unsignedSize.unsafeGet() > std::numeric_limits<int>::max())
+    if (unsignedSize.hasOverflowed() || unsignedSize.unsafeGet() > static_cast<unsigned>(std::numeric_limits<int>::max()))
         return false;
 
     int size = static_cast<int>(unsignedSize.unsafeGet());
     xmlParserCtxtPtr ctxt = xmlCreateMemoryParserCtxt(buffer, size);
     if (!ctxt)
@@ -229,11 +229,11 @@
     }
 }
 
 void XSLStyleSheet::loadChildSheet(const String& href)
 {
-    auto childRule = std::make_unique<XSLImportRule>(this, href);
+    auto childRule = makeUnique<XSLImportRule>(this, href);
     m_children.append(childRule.release());
     m_children.last()->loadSheet();
 }
 
 xsltStylesheetPtr XSLStyleSheet::compileStyleSheet()
