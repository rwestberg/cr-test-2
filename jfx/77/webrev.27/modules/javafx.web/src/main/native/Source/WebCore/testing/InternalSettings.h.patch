diff a/modules/javafx.web/src/main/native/Source/WebCore/testing/InternalSettings.h b/modules/javafx.web/src/main/native/Source/WebCore/testing/InternalSettings.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/testing/InternalSettings.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/testing/InternalSettings.h
@@ -25,11 +25,11 @@
  */
 
 #pragma once
 
 // FIXME (121927): This include should not be needed.
-#include <wtf/text/AtomicStringHash.h>
+#include <wtf/text/AtomStringHash.h>
 
 #include "EditingBehaviorTypes.h"
 #include "ExceptionOr.h"
 #include "FontGenericFamilies.h"
 #include "IntSize.h"
@@ -59,10 +59,11 @@
     ExceptionOr<void> setCursiveFontFamily(const String& family, const String& script);
     ExceptionOr<void> setFantasyFontFamily(const String& family, const String& script);
     ExceptionOr<void> setPictographFontFamily(const String& family, const String& script);
     ExceptionOr<void> setTextAutosizingEnabled(bool);
     ExceptionOr<void> setTextAutosizingWindowSizeOverride(int width, int height);
+    ExceptionOr<void> setTextAutosizingUsesIdempotentMode(bool);
     ExceptionOr<void> setTextAutosizingFontScaleFactor(float);
     ExceptionOr<void> setMediaTypeOverride(const String&);
     ExceptionOr<void> setCanStartMedia(bool);
     ExceptionOr<void> setAllowsAirPlayForMediaPlayback(bool);
     ExceptionOr<void> setMediaCaptureRequiresSecureConnection(bool);
@@ -99,12 +100,14 @@
     ExceptionOr<String> systemLayoutDirection();
     ExceptionOr<void> setSystemLayoutDirection(const String&);
     ExceptionOr<void> setShouldMockBoldSystemFontForAccessibility(bool);
     ExceptionOr<void> setShouldManageAudioSessionCategory(bool);
     ExceptionOr<void> setCustomPasteboardDataEnabled(bool);
-    ExceptionOr<void> setAccessibilityEventsEnabled(bool);
     ExceptionOr<void> setIncompleteImageBorderEnabled(bool);
+    ExceptionOr<void> setShouldDispatchSyntheticMouseEventsWhenModifyingSelection(bool);
+    ExceptionOr<void> setShouldDispatchSyntheticMouseOutAfterSyntheticClick(bool);
+    ExceptionOr<void> setAnimatedImageDebugCanvasDrawingEnabled(bool);
 
     using FrameFlatteningValue = FrameFlattening;
     ExceptionOr<void> setFrameFlattening(FrameFlatteningValue);
 
     static void setAllowsAnySSLCertificate(bool);
@@ -121,24 +124,26 @@
     void setForcedPrefersReducedMotionAccessibilityValue(ForcedAccessibilityValue);
 
     // RuntimeEnabledFeatures.
     static void setIndexedDBWorkersEnabled(bool);
     static void setWebGL2Enabled(bool);
-    static void setWebMetalEnabled(bool);
+    static void setWebGPUEnabled(bool);
     static void setWebVREnabled(bool);
     static void setScreenCaptureEnabled(bool);
 
     static bool webAnimationsCSSIntegrationEnabled();
 
-    static void setStorageAccessPromptsEnabled(bool);
+    void setShouldDeactivateAudioSession(bool);
 
 private:
     explicit InternalSettings(Page*);
 
     Settings& settings() const;
     static const char* supplementName();
 
+    void setUseDarkAppearanceInternal(bool);
+
     class Backup {
     public:
         explicit Backup(Settings&);
         void restoreTo(Settings&);
 
@@ -154,10 +159,11 @@
         ScriptFontFamilyMap m_pictographFontFamilies;
 
 #if ENABLE(TEXT_AUTOSIZING)
         bool m_originalTextAutosizingEnabled;
         IntSize m_originalTextAutosizingWindowSizeOverride;
+        bool m_originalTextAutosizingUsesIdempotentMode;
 #endif
 
         String m_originalMediaTypeOverride;
         bool m_originalCanvasUsesAcceleratedDrawing;
         bool m_originalMockScrollbarsEnabled;
@@ -193,13 +199,14 @@
         bool m_allowsInlineMediaPlaybackAfterFullscreen;
         bool m_inlineMediaPlaybackRequiresPlaysInlineAttribute;
         bool m_deferredCSSParserEnabled;
         bool m_inputEventsEnabled;
         bool m_incompleteImageBorderEnabled;
-#if ENABLE(ACCESSIBILITY_EVENTS)
-        bool m_accessibilityEventsEnabled;
-#endif
+        bool m_shouldDispatchSyntheticMouseEventsWhenModifyingSelection;
+        bool m_shouldDispatchSyntheticMouseOutAfterSyntheticClick { false };
+        bool m_shouldDeactivateAudioSession;
+        bool m_animatedImageDebugCanvasDrawingEnabled;
         UserInterfaceDirectionPolicy m_userInterfaceDirectionPolicy;
         TextDirection m_systemLayoutDirection;
         PDFImageCachingPolicy m_pdfImageCachingPolicy;
         Settings::ForcedAccessibilityValue m_forcedColorsAreInvertedAccessibilityValue;
         Settings::ForcedAccessibilityValue m_forcedDisplayIsMonochromeAccessibilityValue;
@@ -208,20 +215,18 @@
         FrameFlattening m_frameFlattening;
 
         // Runtime enabled settings.
         bool m_indexedDBWorkersEnabled;
         bool m_webGL2Enabled;
-        bool m_webMetalEnabled;
         bool m_webVREnabled;
         bool m_setScreenCaptureEnabled;
 
         bool m_shouldMockBoldSystemFontForAccessibility;
 #if USE(AUDIO_SESSION)
         bool m_shouldManageAudioSessionCategory;
 #endif
         bool m_customPasteboardDataEnabled;
-        bool m_promptForStorageAccessAPIEnabled { false };
     };
 
     Page* m_page;
     Backup m_backup;
 };
