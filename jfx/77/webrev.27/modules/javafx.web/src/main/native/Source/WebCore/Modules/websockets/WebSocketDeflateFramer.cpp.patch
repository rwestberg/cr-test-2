diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/websockets/WebSocketDeflateFramer.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/websockets/WebSocketDeflateFramer.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/websockets/WebSocketDeflateFramer.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/websockets/WebSocketDeflateFramer.cpp
@@ -153,11 +153,11 @@
 {
 }
 
 std::unique_ptr<WebSocketExtensionProcessor> WebSocketDeflateFramer::createExtensionProcessor()
 {
-    return std::make_unique<WebSocketExtensionDeflateFrame>(this);
+    return makeUnique<WebSocketExtensionDeflateFrame>(this);
 }
 
 bool WebSocketDeflateFramer::canDeflate() const
 {
 #if USE(ZLIB)
@@ -168,12 +168,12 @@
 }
 
 #if USE(ZLIB)
 void WebSocketDeflateFramer::enableDeflate(int windowBits, WebSocketDeflater::ContextTakeOverMode mode)
 {
-    m_deflater = std::make_unique<WebSocketDeflater>(windowBits, mode);
-    m_inflater = std::make_unique<WebSocketInflater>();
+    m_deflater = makeUnique<WebSocketDeflater>(windowBits, mode);
+    m_inflater = makeUnique<WebSocketInflater>();
     if (!m_deflater->initialize() || !m_inflater->initialize()) {
         m_deflater = nullptr;
         m_inflater = nullptr;
         return;
     }
@@ -182,11 +182,11 @@
 #endif
 
 std::unique_ptr<DeflateResultHolder> WebSocketDeflateFramer::deflate(WebSocketFrame& frame)
 {
 #if USE(ZLIB)
-    auto result = std::make_unique<DeflateResultHolder>(this);
+    auto result = makeUnique<DeflateResultHolder>(this);
     if (!enabled() || !WebSocketFrame::isNonControlOpCode(frame.opCode) || !frame.payloadLength)
         return result;
     if (!m_deflater->addBytes(frame.payload, frame.payloadLength) || !m_deflater->finish()) {
         result->fail("Failed to compress frame");
         return result;
@@ -194,11 +194,11 @@
     frame.compress = true;
     frame.payload = m_deflater->data();
     frame.payloadLength = m_deflater->size();
     return result;
 #else
-    return std::make_unique<DeflateResultHolder>(this);
+    return makeUnique<DeflateResultHolder>(this);
 #endif
 }
 
 void WebSocketDeflateFramer::resetDeflateContext()
 {
@@ -208,11 +208,11 @@
 #endif
 }
 
 std::unique_ptr<InflateResultHolder> WebSocketDeflateFramer::inflate(WebSocketFrame& frame)
 {
-    auto result = std::make_unique<InflateResultHolder>(this);
+    auto result = makeUnique<InflateResultHolder>(this);
     if (!enabled() && frame.compress) {
         result->fail("Compressed bit must be 0 if no negotiated deflate-frame extension");
         return result;
     }
 #if USE(ZLIB)
