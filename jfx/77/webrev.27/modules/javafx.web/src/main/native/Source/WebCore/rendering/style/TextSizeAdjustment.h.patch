diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/style/TextSizeAdjustment.h b/modules/javafx.web/src/main/native/Source/WebCore/rendering/style/TextSizeAdjustment.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/style/TextSizeAdjustment.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/style/TextSizeAdjustment.h
@@ -20,12 +20,16 @@
 
 #pragma once
 
 #if ENABLE(TEXT_AUTOSIZING)
 
+#include <wtf/OptionSet.h>
+
 namespace WebCore {
 
+class RenderStyle;
+
 enum TextSizeAdjustmentType { AutoTextSizeAdjustment = -1, NoTextSizeAdjustment = -2 };
 
 class TextSizeAdjustment {
 public:
     TextSizeAdjustment() : m_value(AutoTextSizeAdjustment) { }
@@ -43,8 +47,34 @@
 
 private:
     float m_value;
 };
 
+class AutosizeStatus {
+public:
+    enum class Fields : uint8_t {
+        AvoidSubtree = 1 << 0,
+        FixedHeight = 1 << 1,
+        FixedWidth = 1 << 2,
+        Floating = 1 << 3,
+        OverflowXHidden = 1 << 4,
+        // Adding new values requires giving RenderStyle::InheritedFlags::autosizeStatus additional bits.
+    };
+
+    AutosizeStatus(OptionSet<Fields>);
+    OptionSet<Fields> fields() const { return m_fields; }
+
+    bool contains(Fields) const;
+
+    static float idempotentTextSize(float specifiedSize, float pageScale);
+    static void updateStatus(RenderStyle&);
+
+    static bool probablyContainsASmallFixedNumberOfLines(const RenderStyle&);
+
+private:
+    OptionSet<Fields> m_fields;
+};
+
+
 } // namespace WebCore
 
 #endif // ENABLE(TEXT_AUTOSIZING)
