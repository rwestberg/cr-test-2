diff a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/WindowProxy.cpp b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/WindowProxy.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/WindowProxy.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/WindowProxy.cpp
@@ -1,9 +1,9 @@
 /*
  *  Copyright (C) 1999-2001 Harri Porten (porten@kde.org)
  *  Copyright (C) 2001 Peter Kelly (pmk@post.com)
- *  Copyright (C) 2006-2018 Apple Inc. All rights reserved.
+ *  Copyright (C) 2006-2019 Apple Inc. All rights reserved.
  *
  *  This library is free software; you can redistribute it and/or
  *  modify it under the terms of the GNU Lesser General Public
  *  License as published by the Free Software Foundation; either
  *  version 2 of the License, or (at your option) any later version.
@@ -30,10 +30,11 @@
 #include "PageGroup.h"
 #include "RemoteFrame.h"
 #include "ScriptController.h"
 #include "runtime_root.h"
 #include <JavaScriptCore/JSLock.h>
+#include <JavaScriptCore/WeakGCMapInlines.h>
 #include <wtf/MemoryPressureHandler.h>
 
 namespace WebCore {
 
 using namespace JSC;
@@ -136,11 +137,11 @@
             continue;
 
         // Clear the debugger and console from the current window before setting the new window.
         windowProxy->attachDebugger(nullptr);
         windowProxy->window()->setConsoleClient(nullptr);
-        if (auto* jsDOMWindow = jsDynamicCast<JSDOMWindowBase*>(*windowProxy->vm(), windowProxy->window()))
+        if (auto* jsDOMWindow = jsDynamicCast<JSDOMWindowBase*>(windowProxy->vm(), windowProxy->window()))
             jsDOMWindow->willRemoveFromWindowProxy();
     }
 
     // It's likely that resetting our windows created a lot of garbage, unless
     // it went in a back/forward cache.
