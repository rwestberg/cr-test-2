diff a/modules/javafx.web/src/main/native/Source/WebCore/loader/cache/KeepaliveRequestTracker.cpp b/modules/javafx.web/src/main/native/Source/WebCore/loader/cache/KeepaliveRequestTracker.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/loader/cache/KeepaliveRequestTracker.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/loader/cache/KeepaliveRequestTracker.cpp
@@ -42,11 +42,11 @@
     ASSERT(resource.options().keepAlive);
     auto* body = resource.resourceRequest().httpBody();
     if (!body)
         return true;
 
-    uint64_t bodySize = body->lengthInBytes();
+    uint64_t bodySize = body->lengthInBytes(resource.sessionID());
     if (m_inflightKeepaliveBytes + bodySize > maxInflightKeepaliveBytes)
         return false;
 
     registerRequest(resource);
     return true;
@@ -58,11 +58,11 @@
     auto* body = resource.resourceRequest().httpBody();
     if (!body)
         return;
     ASSERT(!m_inflightKeepaliveRequests.contains(&resource));
     m_inflightKeepaliveRequests.append(&resource);
-    m_inflightKeepaliveBytes += body->lengthInBytes();
+    m_inflightKeepaliveBytes += body->lengthInBytes(resource.sessionID());
     ASSERT(m_inflightKeepaliveBytes <= maxInflightKeepaliveBytes);
 
     resource.addClient(*this);
 }
 
@@ -85,10 +85,10 @@
 {
     ASSERT(resource.options().keepAlive);
     resource.removeClient(*this);
     bool wasRemoved = m_inflightKeepaliveRequests.removeFirst(&resource);
     ASSERT_UNUSED(wasRemoved, wasRemoved);
-    m_inflightKeepaliveBytes -= resource.resourceRequest().httpBody()->lengthInBytes();
+    m_inflightKeepaliveBytes -= resource.resourceRequest().httpBody()->lengthInBytes(resource.sessionID());
     ASSERT(m_inflightKeepaliveBytes <= maxInflightKeepaliveBytes);
 }
 
 }
