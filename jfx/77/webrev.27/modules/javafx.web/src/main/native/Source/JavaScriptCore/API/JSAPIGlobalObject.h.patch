diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/API/JSAPIGlobalObject.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/API/JSAPIGlobalObject.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/API/JSAPIGlobalObject.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/API/JSAPIGlobalObject.h
@@ -25,10 +25,12 @@
 
 #pragma once
 
 #include "JSGlobalObject.h"
 
+OBJC_CLASS JSScript;
+
 namespace JSC {
 
 class JSAPIGlobalObject : public JSGlobalObject {
 public:
     using Base = JSGlobalObject;
@@ -52,10 +54,13 @@
 
     static JSInternalPromise* moduleLoaderImportModule(JSGlobalObject*, ExecState*, JSModuleLoader*, JSString* moduleNameValue, JSValue parameters, const SourceOrigin&);
     static Identifier moduleLoaderResolve(JSGlobalObject*, ExecState*, JSModuleLoader*, JSValue keyValue, JSValue referrerValue, JSValue);
     static JSInternalPromise* moduleLoaderFetch(JSGlobalObject*, ExecState*, JSModuleLoader*, JSValue, JSValue, JSValue);
     static JSObject* moduleLoaderCreateImportMetaProperties(JSGlobalObject*, ExecState*, JSModuleLoader*, JSValue, JSModuleRecord*, JSValue);
+    static JSValue moduleLoaderEvaluate(JSGlobalObject*, ExecState*, JSModuleLoader*, JSValue, JSValue, JSValue);
+
+    JSValue loadAndEvaluateJSScriptModule(const JSLockHolder&, JSScript *);
 
 private:
     JSAPIGlobalObject(VM& vm, Structure* structure)
         : Base(vm, structure, &s_globalObjectMethodTable)
     { }
