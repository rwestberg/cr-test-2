diff a/modules/javafx.web/src/main/native/Source/WebCore/layout/displaytree/DisplayBox.cpp b/modules/javafx.web/src/main/native/Source/WebCore/layout/displaytree/DisplayBox.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/layout/displaytree/DisplayBox.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/layout/displaytree/DisplayBox.cpp
@@ -34,21 +34,10 @@
 namespace WebCore {
 namespace Display {
 
 WTF_MAKE_ISO_ALLOCATED_IMPL(Box);
 
-Box::Rect::Rect(LayoutUnit top, LayoutUnit left, LayoutUnit width, LayoutUnit height)
-    : m_rect(left, top, width, height)
-{
-#if !ASSERT_DISABLED
-    m_hasValidTop = true;
-    m_hasValidLeft = true;
-    m_hasValidWidth = true;
-    m_hasValidHeight = true;
-#endif
-}
-
 Box::Box(const RenderStyle& style)
     : m_style(style)
 {
 }
 
@@ -86,11 +75,11 @@
 Box::Style::Style(const RenderStyle& style)
     : boxSizing(style.boxSizing())
 {
 }
 
-Box::Rect Box::marginBox() const
+Rect Box::marginBox() const
 {
     auto borderBox = this->borderBox();
 
     Rect marginBox;
     marginBox.setTop(borderBox.top() - marginBefore());
@@ -98,11 +87,11 @@
     marginBox.setHeight(borderBox.height() + marginBefore() + marginAfter());
     marginBox.setWidth(borderBox.width() + marginStart() + marginEnd());
     return marginBox;
 }
 
-Box::Rect Box::nonCollapsedMarginBox() const
+Rect Box::nonCollapsedMarginBox() const
 {
     auto borderBox = this->borderBox();
 
     Rect marginBox;
     marginBox.setTop(borderBox.top() - nonCollapsedMarginBefore());
@@ -110,19 +99,19 @@
     marginBox.setHeight(borderBox.height() + nonCollapsedMarginBefore() + nonCollapsedMarginAfter());
     marginBox.setWidth(borderBox.width() + marginStart() + marginEnd());
     return marginBox;
 }
 
-Box::Rect Box::borderBox() const
+Rect Box::borderBox() const
 {
     Rect borderBox;
     borderBox.setTopLeft({ });
     borderBox.setSize({ width(), height() });
     return borderBox;
 }
 
-Box::Rect Box::paddingBox() const
+Rect Box::paddingBox() const
 {
     auto borderBox = this->borderBox();
 
     Rect paddingBox;
     paddingBox.setTop(borderBox.top() + borderTop());
@@ -130,11 +119,11 @@
     paddingBox.setHeight(borderBox.bottom() - borderTop() - borderBottom());
     paddingBox.setWidth(borderBox.width() - borderLeft() - borderRight());
     return paddingBox;
 }
 
-Box::Rect Box::contentBox() const
+Rect Box::contentBox() const
 {
     Rect contentBox;
     contentBox.setTop(contentBoxTop());
     contentBox.setLeft(contentBoxLeft());
     contentBox.setWidth(contentBoxWidth());
