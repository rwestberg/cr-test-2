diff a/modules/javafx.web/src/main/native/Source/WebCore/html/track/TextTrackCueGeneric.h b/modules/javafx.web/src/main/native/Source/WebCore/html/track/TextTrackCueGeneric.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/track/TextTrackCueGeneric.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/track/TextTrackCueGeneric.h
@@ -34,10 +34,11 @@
 
 class GenericCueData;
 
 // A "generic" cue is a non-WebVTT cue, so it is not positioned/sized with the WebVTT logic.
 class TextTrackCueGeneric final : public VTTCue {
+    WTF_MAKE_ISO_ALLOCATED_EXPORT(TextTrackCueGeneric, WEBCORE_EXPORT);
 public:
     static Ref<TextTrackCueGeneric> create(ScriptExecutionContext& context, const MediaTime& start, const MediaTime& end, const String& content)
     {
         return adoptRef(*new TextTrackCueGeneric(context, start, end, content));
     }
@@ -68,11 +69,11 @@
     void setFontSize(int, const IntSize&, bool important) final;
 
     String toJSONString() const;
 
 private:
-    TextTrackCueGeneric(ScriptExecutionContext&, const MediaTime& start, const MediaTime& end, const String&);
+    WEBCORE_EXPORT TextTrackCueGeneric(ScriptExecutionContext&, const MediaTime& start, const MediaTime& end, const String&);
 
     bool isOrderedBefore(const TextTrackCue*) const final;
     bool isPositionedAbove(const TextTrackCue*) const final;
 
     Ref<VTTCueBox> createDisplayTree() final;
@@ -106,6 +107,11 @@
         return cue.toJSONString();
     }
 };
 
 }
+
+SPECIALIZE_TYPE_TRAITS_BEGIN(WebCore::TextTrackCueGeneric)
+static bool isType(const WebCore::TextTrackCue& cue) { return cue.cueType() == WebCore::TextTrackCue::Generic; }
+SPECIALIZE_TYPE_TRAITS_END()
+
 #endif
