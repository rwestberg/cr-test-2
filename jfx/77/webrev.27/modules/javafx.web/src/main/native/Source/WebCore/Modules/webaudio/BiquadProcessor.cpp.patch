diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webaudio/BiquadProcessor.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webaudio/BiquadProcessor.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webaudio/BiquadProcessor.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webaudio/BiquadProcessor.cpp
@@ -60,11 +60,11 @@
         uninitialize();
 }
 
 std::unique_ptr<AudioDSPKernel> BiquadProcessor::createKernel()
 {
-    return std::make_unique<BiquadDSPKernel>(this);
+    return makeUnique<BiquadDSPKernel>(this);
 }
 
 void BiquadProcessor::checkForDirtyCoefficients()
 {
     // Deal with smoothing / de-zippering. Start out assuming filter parameters are not changing.
@@ -123,11 +123,11 @@
 {
     // Compute the frequency response on a separate temporary kernel
     // to avoid interfering with the processing running in the audio
     // thread on the main kernels.
 
-    auto responseKernel = std::make_unique<BiquadDSPKernel>(this);
+    auto responseKernel = makeUnique<BiquadDSPKernel>(this);
 
     responseKernel->getFrequencyResponse(nFrequencies, frequencyHz, magResponse, phaseResponse);
 }
 
 } // namespace WebCore
