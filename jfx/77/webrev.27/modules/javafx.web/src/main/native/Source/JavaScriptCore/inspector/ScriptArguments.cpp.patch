diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/ScriptArguments.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/ScriptArguments.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/ScriptArguments.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/ScriptArguments.cpp
@@ -33,10 +33,11 @@
 #include "ScriptArguments.h"
 
 #include "CatchScope.h"
 #include "JSCInlines.h"
 #include "ProxyObject.h"
+#include "StrongInlines.h"
 
 namespace Inspector {
 
 Ref<ScriptArguments> ScriptArguments::create(JSC::ExecState& state, Vector<JSC::Strong<JSC::Unknown>>&& arguments)
 {
@@ -63,11 +64,11 @@
         return const_cast<JSC::JSGlobalObject*>(m_globalObject.get())->globalExec();
 
     return nullptr;
 }
 
-bool ScriptArguments::getFirstArgumentAsString(String& result)
+bool ScriptArguments::getFirstArgumentAsString(String& result) const
 {
     if (!argumentCount())
         return false;
 
     auto* state = globalState();
@@ -108,11 +109,11 @@
         if (!a || !b) {
             if (a != b)
                 return false;
         } else {
             auto scope = DECLARE_CATCH_SCOPE(state->vm());
-            bool result = JSValue::strictEqual(state, a, b);
+            bool result = JSC::JSValue::strictEqual(state, a, b);
             scope.clearException();
             if (!result)
                 return false;
         }
     }
