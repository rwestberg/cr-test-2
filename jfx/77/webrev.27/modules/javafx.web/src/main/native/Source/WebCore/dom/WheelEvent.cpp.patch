diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/WheelEvent.cpp b/modules/javafx.web/src/main/native/Source/WebCore/dom/WheelEvent.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/WheelEvent.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/WheelEvent.cpp
@@ -35,11 +35,11 @@
     return event.granularity() == ScrollByPageWheelEvent ? WheelEvent::DOM_DELTA_PAGE : WheelEvent::DOM_DELTA_PIXEL;
 }
 
 inline WheelEvent::WheelEvent() = default;
 
-inline WheelEvent::WheelEvent(const AtomicString& type, const Init& initializer)
+inline WheelEvent::WheelEvent(const AtomString& type, const Init& initializer)
     : MouseEvent(type, initializer)
     , m_wheelDelta(initializer.wheelDeltaX ? initializer.wheelDeltaX : -initializer.deltaX, initializer.wheelDeltaY ? initializer.wheelDeltaY : -initializer.deltaY)
     , m_deltaX(initializer.deltaX ? initializer.deltaX : -initializer.wheelDeltaX)
     , m_deltaY(initializer.deltaY ? initializer.deltaY : -initializer.wheelDeltaY)
     , m_deltaZ(initializer.deltaZ)
@@ -66,11 +66,11 @@
 Ref<WheelEvent> WheelEvent::createForBindings()
 {
     return adoptRef(*new WheelEvent);
 }
 
-Ref<WheelEvent> WheelEvent::create(const AtomicString& type, const Init& initializer)
+Ref<WheelEvent> WheelEvent::create(const AtomString& type, const Init& initializer)
 {
     return adoptRef(*new WheelEvent(type, initializer));
 }
 
 void WheelEvent::initWebKitWheelEvent(int rawDeltaX, int rawDeltaY, RefPtr<WindowProxy>&& view, int screenX, int screenY, int pageX, int pageY, bool ctrlKey, bool altKey, bool shiftKey, bool metaKey)
