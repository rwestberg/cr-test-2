diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/MarkedBlockInlines.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/MarkedBlockInlines.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/MarkedBlockInlines.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/MarkedBlockInlines.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2016-2018 Apple Inc. All rights reserved.
+ * Copyright (C) 2016-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -50,11 +50,11 @@
     return !isNewlyAllocatedStale();
 }
 
 inline Heap* MarkedBlock::heap() const
 {
-    return &vm()->heap;
+    return &vm().heap;
 }
 
 inline MarkedSpace* MarkedBlock::space() const
 {
     return &heap()->objectSpace();
@@ -251,16 +251,16 @@
     if (false)
         dataLog(RawPointer(this), "/", RawPointer(&block), ": MarkedBlock::Handle::specializedSweep!\n");
 
     unsigned cellSize = this->cellSize();
 
-    VM& vm = *this->vm();
+    VM& vm = this->vm();
     auto destroy = [&] (void* cell) {
         JSCell* jsCell = static_cast<JSCell*>(cell);
         if (!jsCell->isZapped()) {
             destroyFunc(vm, jsCell);
-            jsCell->zap();
+            jsCell->zap(HeapCell::Destruction);
         }
     };
 
     m_directory->setIsDestructible(NoLockingNecessary, this, false);
 
