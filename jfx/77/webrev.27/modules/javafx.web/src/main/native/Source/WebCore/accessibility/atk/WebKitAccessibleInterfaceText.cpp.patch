diff a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/atk/WebKitAccessibleInterfaceText.cpp b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/atk/WebKitAccessibleInterfaceText.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/atk/WebKitAccessibleInterfaceText.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/atk/WebKitAccessibleInterfaceText.cpp
@@ -30,11 +30,11 @@
  */
 
 #include "config.h"
 #include "WebKitAccessibleInterfaceText.h"
 
-#if HAVE(ACCESSIBILITY)
+#if ENABLE(ACCESSIBILITY)
 
 #include "AccessibilityObject.h"
 #include "Document.h"
 #include "Editing.h"
 #include "FontCascade.h"
@@ -1205,21 +1205,23 @@
     // Internally, setting the caret offset is equivalent to set a zero-length
     // selection, so delegate in that implementation and void duplicated code.
     return webkitAccessibleTextSetSelection(text, 0, offset, offset);
 }
 
-#if ATK_CHECK_VERSION(2, 10, 0)
 static gchar* webkitAccessibleTextGetStringAtOffset(AtkText* text, gint offset, AtkTextGranularity granularity, gint* startOffset, gint* endOffset)
 {
     // This new API has been designed to simplify the AtkText interface and it has been
     // designed to keep exactly the same behaviour the atk_text_get_text_at_text() for
     // ATK_TEXT_BOUNDARY_*_START boundaries, so for now we just need to translate the
     // granularity to the right old boundary and reuse the code for the old API.
     // However, this should be simplified later on (and a lot of code removed) once
-    // WebKitGTK+ depends on ATK >= 2.9.4 *and* can safely assume that a version of
+    // WebKitGTK depends on ATK >= 2.9.4 *and* can safely assume that a version of
     // AT-SPI2 new enough not to include the old APIs is being used. But until then,
     // we will have to live with both the old and new APIs implemented here.
+    // FIXME: WebKit nowadays depends on much newer ATK and we can safely assume AT-SPI2
+    // isn't ancient. But whoever wrote this code didn't use ATK_CHECK_VERSION() guards,
+    // so it's unclear what is supposed to be changed here.
     AtkTextBoundary boundaryType = ATK_TEXT_BOUNDARY_CHAR;
     switch (granularity) {
     case ATK_TEXT_GRANULARITY_CHAR:
         break;
 
@@ -1245,11 +1247,10 @@
         ASSERT_NOT_REACHED();
     }
 
     return webkitAccessibleTextGetTextForOffset(text, offset, boundaryType, GetTextPositionAt, startOffset, endOffset);
 }
-#endif
 
 void webkitAccessibleTextInterfaceInit(AtkTextIface* iface)
 {
     iface->get_text = webkitAccessibleTextGetText;
     iface->get_text_after_offset = webkitAccessibleTextGetTextAfterOffset;
@@ -1267,12 +1268,9 @@
     iface->get_selection = webkitAccessibleTextGetSelection;
     iface->add_selection = webkitAccessibleTextAddSelection;
     iface->remove_selection = webkitAccessibleTextRemoveSelection;
     iface->set_selection = webkitAccessibleTextSetSelection;
     iface->set_caret_offset = webkitAccessibleTextSetCaretOffset;
-
-#if ATK_CHECK_VERSION(2, 10, 0)
     iface->get_string_at_offset = webkitAccessibleTextGetStringAtOffset;
-#endif
 }
 
 #endif
