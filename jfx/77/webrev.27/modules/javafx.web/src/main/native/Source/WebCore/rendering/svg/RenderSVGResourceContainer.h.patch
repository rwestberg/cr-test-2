diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/svg/RenderSVGResourceContainer.h b/modules/javafx.web/src/main/native/Source/WebCore/rendering/svg/RenderSVGResourceContainer.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/svg/RenderSVGResourceContainer.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/svg/RenderSVGResourceContainer.h
@@ -68,18 +68,18 @@
     void removeClient(RenderElement&);
 
     void willBeDestroyed() final;
     void registerResource();
 
-    AtomicString m_id;
+    AtomString m_id;
     HashSet<RenderElement*> m_clients;
     HashSet<RenderLayer*> m_clientLayers;
     bool m_registered { false };
     bool m_isInvalidating { false };
 };
 
-inline RenderSVGResourceContainer* getRenderSVGResourceContainerById(Document& document, const AtomicString& id)
+inline RenderSVGResourceContainer* getRenderSVGResourceContainerById(Document& document, const AtomString& id)
 {
     if (id.isEmpty())
         return nullptr;
 
     if (RenderSVGResourceContainer* renderResource = document.accessSVGExtensions().resourceById(id))
@@ -87,11 +87,11 @@
 
     return nullptr;
 }
 
 template<typename Renderer>
-Renderer* getRenderSVGResourceById(Document& document, const AtomicString& id)
+Renderer* getRenderSVGResourceById(Document& document, const AtomString& id)
 {
     // Using the RenderSVGResource type here avoids ambiguous casts for types that
     // descend from both RenderObject and RenderSVGResourceContainer.
     RenderSVGResource* container = getRenderSVGResourceContainerById(document, id);
     if (is<Renderer>(container))
