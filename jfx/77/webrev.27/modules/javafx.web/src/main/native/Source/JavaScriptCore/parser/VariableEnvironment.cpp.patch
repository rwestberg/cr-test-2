diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/parser/VariableEnvironment.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/parser/VariableEnvironment.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/parser/VariableEnvironment.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/parser/VariableEnvironment.cpp
@@ -152,16 +152,25 @@
 }
 
 CompactVariableMap::Handle CompactVariableMap::get(const VariableEnvironment& env)
 {
     auto* environment = new CompactVariableEnvironment(env);
+    bool isNewEntry;
+    auto handle = get(environment, isNewEntry);
+    if (!isNewEntry)
+        delete environment;
+    return handle;
+}
+
+CompactVariableMap::Handle CompactVariableMap::get(CompactVariableEnvironment* environment, bool& isNewEntry)
+{
     CompactVariableMapKey key { *environment };
     auto addResult = m_map.add(key, 1);
+    isNewEntry = addResult.isNewEntry;
     if (addResult.isNewEntry)
         return CompactVariableMap::Handle(*environment, *this);
 
-    delete environment;
     ++addResult.iterator->value;
     return CompactVariableMap::Handle(addResult.iterator->key.environment(), *this);
 }
 
 CompactVariableMap::Handle::~Handle()
@@ -182,28 +191,22 @@
         delete m_environment;
     }
 }
 
 CompactVariableMap::Handle::Handle(const CompactVariableMap::Handle& other)
+    : m_environment(other.m_environment)
+    , m_map(other.m_map)
 {
-    *this = other;
+    if (m_map) {
+        auto iter = m_map->m_map.find(CompactVariableMapKey { *m_environment });
+        RELEASE_ASSERT(iter != m_map->m_map.end());
+        ++iter->value;
+    }
 }
 
-CompactVariableMap::Handle& CompactVariableMap::Handle::operator=(const Handle& other)
+CompactVariableMap::Handle::Handle(CompactVariableEnvironment& environment, CompactVariableMap& map)
+    : m_environment(&environment)
+    , m_map(&map)
 {
-    m_map = other.m_map;
-    m_environment = other.m_environment;
-
-    if (!m_map) {
-        ASSERT(!m_environment);
-        // This happens if `other` were moved into a different handle.
-        return *this;
-    }
-
-    auto iter = m_map->m_map.find(CompactVariableMapKey { *m_environment });
-    RELEASE_ASSERT(iter != m_map->m_map.end());
-    ++iter->value;
-
-    return *this;
 }
 
 } // namespace JSC
