diff a/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLFormControlsCollection.h b/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLFormControlsCollection.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLFormControlsCollection.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLFormControlsCollection.h
@@ -33,10 +33,11 @@
 
 // This class is just a big hack to find form elements even in malformed HTML elements.
 // The famous <table><tr><form><td> problem.
 
 class HTMLFormControlsCollection final : public CachedHTMLCollection<HTMLFormControlsCollection, CollectionTypeTraits<FormControls>::traversalType> {
+    WTF_MAKE_ISO_ALLOCATED(HTMLFormControlsCollection);
 public:
     static Ref<HTMLFormControlsCollection> create(ContainerNode&, CollectionType);
     virtual ~HTMLFormControlsCollection();
 
     HTMLElement* item(unsigned offset) const override;
@@ -53,11 +54,10 @@
     void invalidateCacheForDocument(Document&) override;
     void updateNamedElementCache() const override;
 
     const Vector<FormAssociatedElement*>& unsafeFormControlElements() const;
     Vector<Ref<FormAssociatedElement>> copyFormControlElementsVector() const;
-    const Vector<HTMLImageElement*>& formImageElements() const;
 
     mutable Element* m_cachedElement;
     mutable unsigned m_cachedElementOffsetInArray;
 };
 
