diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSArray.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSArray.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSArray.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSArray.h
@@ -1,8 +1,8 @@
 /*
  *  Copyright (C) 1999-2000 Harri Porten (porten@kde.org)
- *  Copyright (C) 2003-2018 Apple Inc. All rights reserved.
+ *  Copyright (C) 2003-2019 Apple Inc. All rights reserved.
  *
  *  This library is free software; you can redistribute it and/or
  *  modify it under the terms of the GNU Lesser General Public
  *  License as published by the Free Software Foundation; either
  *  version 2 of the License, or (at your option) any later version.
@@ -287,22 +287,22 @@
 
 JSArray* asArray(JSValue);
 
 inline JSArray* asArray(JSCell* cell)
 {
-    ASSERT(cell->inherits<JSArray>(*cell->vm()));
+    ASSERT(cell->inherits<JSArray>(cell->vm()));
     return jsCast<JSArray*>(cell);
 }
 
 inline JSArray* asArray(JSValue value)
 {
     return asArray(value.asCell());
 }
 
 inline bool isJSArray(JSCell* cell)
 {
-    ASSERT((cell->classInfo(*cell->vm()) == JSArray::info()) == (cell->type() == ArrayType));
+    ASSERT((cell->classInfo(cell->vm()) == JSArray::info()) == (cell->type() == ArrayType));
     return cell->type() == ArrayType;
 }
 
 inline bool isJSArray(JSValue v) { return v.isCell() && isJSArray(v.asCell()); }
 
