diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBVersionChangeEvent.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBVersionChangeEvent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBVersionChangeEvent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBVersionChangeEvent.h
@@ -33,26 +33,26 @@
 
 namespace WebCore {
 
 class IDBVersionChangeEvent final : public Event {
 public:
-    static Ref<IDBVersionChangeEvent> create(uint64_t oldVersion, uint64_t newVersion, const AtomicString& eventType)
+    static Ref<IDBVersionChangeEvent> create(uint64_t oldVersion, uint64_t newVersion, const AtomString& eventType)
     {
         return adoptRef(*new IDBVersionChangeEvent(IDBResourceIdentifier::emptyValue(), oldVersion, newVersion, eventType));
     }
 
-    static Ref<IDBVersionChangeEvent> create(const IDBResourceIdentifier& requestIdentifier, uint64_t oldVersion, uint64_t newVersion, const AtomicString& eventType)
+    static Ref<IDBVersionChangeEvent> create(const IDBResourceIdentifier& requestIdentifier, uint64_t oldVersion, uint64_t newVersion, const AtomString& eventType)
     {
         return adoptRef(*new IDBVersionChangeEvent(requestIdentifier, oldVersion, newVersion, eventType));
     }
 
     struct Init : EventInit {
         uint64_t oldVersion { 0 };
         Optional<uint64_t> newVersion;
     };
 
-    static Ref<IDBVersionChangeEvent> create(const AtomicString& type, const Init& initializer, IsTrusted isTrusted = IsTrusted::No)
+    static Ref<IDBVersionChangeEvent> create(const AtomString& type, const Init& initializer, IsTrusted isTrusted = IsTrusted::No)
     {
         return adoptRef(*new IDBVersionChangeEvent(type, initializer, isTrusted));
     }
 
     const IDBResourceIdentifier& requestIdentifier() const { return m_requestIdentifier; }
@@ -61,12 +61,12 @@
 
     uint64_t oldVersion() const { return m_oldVersion; }
     Optional<uint64_t> newVersion() const { return m_newVersion; }
 
 private:
-    IDBVersionChangeEvent(const IDBResourceIdentifier& requestIdentifier, uint64_t oldVersion, uint64_t newVersion, const AtomicString& eventType);
-    IDBVersionChangeEvent(const AtomicString&, const Init&, IsTrusted);
+    IDBVersionChangeEvent(const IDBResourceIdentifier& requestIdentifier, uint64_t oldVersion, uint64_t newVersion, const AtomString& eventType);
+    IDBVersionChangeEvent(const AtomString&, const Init&, IsTrusted);
 
     EventInterface eventInterface() const;
 
     IDBResourceIdentifier m_requestIdentifier;
     uint64_t m_oldVersion;
