diff a/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/CanvasRenderingContext.h b/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/CanvasRenderingContext.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/CanvasRenderingContext.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/CanvasRenderingContext.h
@@ -26,10 +26,12 @@
 #pragma once
 
 #include "CanvasBase.h"
 #include "GraphicsLayer.h"
 #include "ScriptWrappable.h"
+#include <wtf/Forward.h>
+#include <wtf/IsoMalloc.h>
 #include <wtf/Noncopyable.h>
 #include <wtf/text/StringHash.h>
 
 namespace WebCore {
 
@@ -40,13 +42,17 @@
 class ImageBitmap;
 class TypedOMCSSImageValue;
 class WebGLObject;
 
 class CanvasRenderingContext : public ScriptWrappable {
-    WTF_MAKE_NONCOPYABLE(CanvasRenderingContext); WTF_MAKE_FAST_ALLOCATED;
+    WTF_MAKE_NONCOPYABLE(CanvasRenderingContext);
+    WTF_MAKE_ISO_ALLOCATED(CanvasRenderingContext);
 public:
-    virtual ~CanvasRenderingContext() = default;
+    virtual ~CanvasRenderingContext();
+
+    static HashSet<CanvasRenderingContext*>& instances(const LockHolder&);
+    static Lock& instancesMutex();
 
     void ref();
     WEBCORE_EXPORT void deref();
 
     CanvasBase& canvasBase() const { return m_canvas; }
@@ -55,13 +61,10 @@
     virtual bool isWebGL1() const { return false; }
     virtual bool isWebGL2() const { return false; }
     bool isWebGL() const { return isWebGL1() || isWebGL2(); }
 #if ENABLE(WEBGPU)
     virtual bool isWebGPU() const { return false; }
-#endif
-#if ENABLE(WEBMETAL)
-    virtual bool isWebMetal() const { return false; }
 #endif
     virtual bool isGPUBased() const { return false; }
     virtual bool isAccelerated() const { return false; }
     virtual bool isBitmapRenderer() const { return false; }
     virtual bool isPlaceholder() const { return false; }
