diff a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGAnimateTransformElement.cpp b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGAnimateTransformElement.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGAnimateTransformElement.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGAnimateTransformElement.cpp
@@ -41,22 +41,22 @@
 Ref<SVGAnimateTransformElement> SVGAnimateTransformElement::create(const QualifiedName& tagName, Document& document)
 {
     return adoptRef(*new SVGAnimateTransformElement(tagName, document));
 }
 
-bool SVGAnimateTransformElement::hasValidAttributeType()
+bool SVGAnimateTransformElement::hasValidAttributeType() const
 {
     if (!this->targetElement())
         return false;
 
     if (attributeType() == AttributeType::CSS)
         return false;
 
-    return m_animatedPropertyType == AnimatedTransformList;
+    return SVGAnimateElementBase::hasValidAttributeType();
 }
 
-void SVGAnimateTransformElement::parseAttribute(const QualifiedName& name, const AtomicString& value)
+void SVGAnimateTransformElement::parseAttribute(const QualifiedName& name, const AtomString& value)
 {
     if (name == SVGNames::typeAttr) {
         m_type = SVGTransformable::parseTransformType(value);
         if (m_type == SVGTransformValue::SVG_TRANSFORM_MATRIX)
             m_type = SVGTransformValue::SVG_TRANSFORM_UNKNOWN;
@@ -64,6 +64,11 @@
     }
 
     SVGAnimateElementBase::parseAttribute(name, value);
 }
 
+String SVGAnimateTransformElement::animateRangeString(const String& string) const
+{
+    return SVGTransformValue::prefixForTransfromType(m_type) + string + ')';
+}
+
 }
