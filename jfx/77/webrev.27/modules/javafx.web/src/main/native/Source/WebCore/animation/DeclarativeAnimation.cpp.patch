diff a/modules/javafx.web/src/main/native/Source/WebCore/animation/DeclarativeAnimation.cpp b/modules/javafx.web/src/main/native/Source/WebCore/animation/DeclarativeAnimation.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/animation/DeclarativeAnimation.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/animation/DeclarativeAnimation.cpp
@@ -26,18 +26,24 @@
 #include "config.h"
 #include "DeclarativeAnimation.h"
 
 #include "Animation.h"
 #include "AnimationEvent.h"
+#include "CSSAnimation.h"
+#include "CSSTransition.h"
+#include "DocumentTimeline.h"
 #include "Element.h"
 #include "EventNames.h"
 #include "KeyframeEffect.h"
 #include "PseudoElement.h"
 #include "TransitionEvent.h"
+#include <wtf/IsoMallocInlines.h>
 
 namespace WebCore {
 
+WTF_MAKE_ISO_ALLOCATED_IMPL(DeclarativeAnimation);
+
 DeclarativeAnimation::DeclarativeAnimation(Element& owningElement, const Animation& backingAnimation)
     : WebAnimation(owningElement.document())
     , m_eventQueue(owningElement)
     , m_owningElement(&owningElement)
     , m_backingAnimation(const_cast<Animation&>(backingAnimation))
@@ -322,11 +328,11 @@
     m_wasPending = isPending;
     m_previousPhase = currentPhase;
     m_previousIteration = iteration;
 }
 
-void DeclarativeAnimation::enqueueDOMEvent(const AtomicString& eventType, Seconds elapsedTime)
+void DeclarativeAnimation::enqueueDOMEvent(const AtomString& eventType, Seconds elapsedTime)
 {
     ASSERT(m_owningElement);
     auto time = secondsToWebAnimationsAPITime(elapsedTime) / 1000;
     if (is<CSSAnimation>(this))
         m_eventQueue.enqueueEvent(AnimationEvent::create(eventType, downcast<CSSAnimation>(this)->animationName(), time));
