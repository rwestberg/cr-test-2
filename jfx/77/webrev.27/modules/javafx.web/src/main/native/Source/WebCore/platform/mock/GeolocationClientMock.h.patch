diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/mock/GeolocationClientMock.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/mock/GeolocationClientMock.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/mock/GeolocationClientMock.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/mock/GeolocationClientMock.h
@@ -30,11 +30,11 @@
  */
 
 #pragma once
 
 #include "GeolocationClient.h"
-#include "GeolocationPosition.h"
+#include "GeolocationPositionData.h"
 #include "Timer.h"
 #include <wtf/HashSet.h>
 #include <wtf/RefPtr.h>
 #include <wtf/text/WTFString.h>
 
@@ -50,21 +50,21 @@
     virtual ~GeolocationClientMock();
 
     void reset();
     void setController(GeolocationController*);
 
-    void setPosition(GeolocationPosition&&);
+    void setPosition(GeolocationPositionData&&);
     void setPositionUnavailableError(const String& errorMessage);
     void setPermission(bool allowed);
     int numberOfPendingPermissionRequests() const;
 
     // GeolocationClient
     void geolocationDestroyed() override;
     void startUpdating() override;
     void stopUpdating() override;
     void setEnableHighAccuracy(bool) override;
-    Optional<GeolocationPosition> lastPosition() override;
+    Optional<GeolocationPositionData> lastPosition() override;
     void requestPermission(Geolocation&) override;
     void cancelPermissionRequest(Geolocation&) override;
 
 private:
     void asyncUpdateController();
@@ -74,11 +74,11 @@
     void permissionTimerFired();
 
     void clearError();
 
     GeolocationController* m_controller;
-    Optional<GeolocationPosition> m_lastPosition;
+    Optional<GeolocationPositionData> m_lastPosition;
     bool m_hasError;
     String m_errorMessage;
     Timer m_controllerTimer;
     Timer m_permissionTimer;
     bool m_isActive;
