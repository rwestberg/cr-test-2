diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/ftl/FTLExitValue.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/ftl/FTLExitValue.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/ftl/FTLExitValue.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/ftl/FTLExitValue.cpp
@@ -36,11 +36,13 @@
 
 ExitValue ExitValue::materializeNewObject(ExitTimeObjectMaterialization* data)
 {
     ExitValue result;
     result.m_kind = ExitValueMaterializeNewObject;
-    result.u.newObjectMaterializationData = data;
+    UnionType u;
+    u.newObjectMaterializationData = data;
+    result.m_value = WTFMove(u);
     return result;
 }
 
 ExitValue ExitValue::withLocalsOffset(int offset) const
 {
@@ -73,13 +75,10 @@
     case ExitValueInJSStackAsInt52:
         return DataFormatInt52;
 
     case ExitValueInJSStackAsDouble:
         return DataFormatDouble;
-
-    case ExitValueRecovery:
-        return recoveryFormat();
     }
 
     RELEASE_ASSERT_NOT_REACHED();
 }
 
@@ -108,13 +107,10 @@
         out.print("InJSStackAsInt52:", virtualRegister());
         return;
     case ExitValueInJSStackAsDouble:
         out.print("InJSStackAsDouble:", virtualRegister());
         return;
-    case ExitValueRecovery:
-        out.print("Recovery(", recoveryOpcode(), ", arg", leftRecoveryArgument(), ", arg", rightRecoveryArgument(), ", ", recoveryFormat(), ")");
-        return;
     case ExitValueMaterializeNewObject:
         out.print("Materialize(", WTF::RawPointer(objectMaterialization()), ")");
         return;
     }
 
