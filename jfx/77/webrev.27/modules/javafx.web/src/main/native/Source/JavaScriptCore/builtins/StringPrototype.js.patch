diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/builtins/StringPrototype.js b/modules/javafx.web/src/main/native/Source/JavaScriptCore/builtins/StringPrototype.js
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/builtins/StringPrototype.js
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/builtins/StringPrototype.js
@@ -41,10 +41,28 @@
     let thisString = @toString(this);
     let createdRegExp = @regExpCreate(regexp, @undefined);
     return createdRegExp.@matchSymbol(thisString);
 }
 
+function matchAll(arg)
+{
+    "use strict";
+
+    if (@isUndefinedOrNull(this))
+        @throwTypeError("String.prototype.matchAll requires |this| not to be null nor undefined");
+
+    if (!@isUndefinedOrNull(arg)) {
+        let matcher = arg.@matchAllSymbol;
+        if (!@isUndefinedOrNull(matcher))
+            return matcher.@call(arg, this);
+    }
+
+    let string = @toString(this);
+    let regExp = @regExpCreate(arg, "g");
+    return regExp.@matchAllSymbol(string);
+}
+
 @globalPrivate
 function repeatSlowPath(string, count)
 {
     "use strict";
 
@@ -235,11 +253,11 @@
 
     let thisString = @toString(this);
     let searchString = @toString(search);
     return thisString.@replaceUsingStringSearch(searchString, replace);
 }
-    
+
 function search(regexp)
 {
     "use strict";
 
     if (@isUndefinedOrNull(this))
