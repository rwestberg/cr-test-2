diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/AST/WHLSLBaseSemantic.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/AST/WHLSLBaseSemantic.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/AST/WHLSLBaseSemantic.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/AST/WHLSLBaseSemantic.h
@@ -25,13 +25,13 @@
 
 #pragma once
 
 #if ENABLE(WEBGPU)
 
+#include "WHLSLCodeLocation.h"
 #include "WHLSLEntryPointType.h"
-#include "WHLSLLexer.h"
-#include "WHLSLNode.h"
+#include <wtf/FastMalloc.h>
 #include <wtf/Optional.h>
 
 namespace WebCore {
 
 namespace WHLSL {
@@ -41,14 +41,15 @@
 namespace AST {
 
 class FunctionDefinition;
 class UnnamedType;
 
-class BaseSemantic : public Node {
+class BaseSemantic {
+    WTF_MAKE_FAST_ALLOCATED;
 public:
-    BaseSemantic(Lexer::Token&& origin)
-        : m_origin(WTFMove(origin))
+    BaseSemantic(CodeLocation location)
+        : m_codeLocation(location)
     {
     }
 
     virtual ~BaseSemantic() = default;
 
@@ -62,11 +63,11 @@
         Output
     };
     virtual bool isAcceptableForShaderItemDirection(ShaderItemDirection, const Optional<EntryPointType>&) const = 0;
 
 private:
-    Lexer::Token m_origin;
+    CodeLocation m_codeLocation;
 };
 
 } // namespace AST
 
 }
