diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/AST/WHLSLBlock.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/AST/WHLSLBlock.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/AST/WHLSLBlock.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/AST/WHLSLBlock.h
@@ -25,45 +25,47 @@
 
 #pragma once
 
 #if ENABLE(WEBGPU)
 
-#include "WHLSLLexer.h"
+#include "WHLSLCodeLocation.h"
 #include "WHLSLStatement.h"
+#include <wtf/FastMalloc.h>
 #include <wtf/Vector.h>
 
 namespace WebCore {
 
 namespace WHLSL {
 
 namespace AST {
 
-class Block : public Statement {
+class Block final : public Statement {
+    WTF_MAKE_FAST_ALLOCATED;
 public:
-    Block(Lexer::Token&& origin, Statements&& statements)
-        : Statement(WTFMove(origin))
+    Block(CodeLocation location, Statements&& statements)
+        : Statement(location, Kind::Block)
         , m_statements(WTFMove(statements))
     {
     }
 
-    virtual ~Block() = default;
+    ~Block() = default;
 
     Block(const Block&) = delete;
     Block(Block&&) = default;
 
     Statements& statements() { return m_statements; }
 
-    bool isBlock() const override { return true; }
-
 private:
     Statements m_statements;
 };
 
 } // namespace AST
 
 }
 
 }
 
+DEFINE_DEFAULT_DELETE(Block)
+
 SPECIALIZE_TYPE_TRAITS_WHLSL_STATEMENT(Block, isBlock())
 
 #endif
