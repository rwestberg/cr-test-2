diff a/modules/javafx.web/src/main/native/Source/WebCore/html/shadow/SliderThumbElement.h b/modules/javafx.web/src/main/native/Source/WebCore/html/shadow/SliderThumbElement.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/shadow/SliderThumbElement.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/shadow/SliderThumbElement.h
@@ -76,11 +76,11 @@
     void didAttachRenderers() final;
 #endif
     void willDetachRenderers() final;
 
     Optional<ElementStyle> resolveCustomStyle(const RenderStyle&, const RenderStyle*) final;
-    const AtomicString& shadowPseudoId() const final;
+    const AtomString& shadowPseudoId() const final;
 
     void startDragging();
     void stopDragging();
 
 #if ENABLE(IOS_TOUCH_EVENTS)
@@ -95,11 +95,11 @@
     bool shouldAcceptTouchEvents();
     void registerForTouchEvents();
     void unregisterForTouchEvents();
 #endif
 
-    AtomicString m_shadowPseudoId;
+    AtomString m_shadowPseudoId;
     bool m_inDragMode { false };
 
 #if ENABLE(IOS_TOUCH_EVENTS)
     // FIXME: Currently it is safe to use 0, but this may need to change
     // if touch identifiers change in the future and can be 0.
@@ -135,14 +135,14 @@
 
 private:
     SliderContainerElement(Document&);
     RenderPtr<RenderElement> createElementRenderer(RenderStyle&&, const RenderTreePosition&) final;
     Optional<ElementStyle> resolveCustomStyle(const RenderStyle&, const RenderStyle*) final;
-    const AtomicString& shadowPseudoId() const final;
+    const AtomString& shadowPseudoId() const final;
     bool isSliderContainerElement() const final { return true; }
 
-    AtomicString m_shadowPseudoId;
+    AtomString m_shadowPseudoId;
 };
 
 } // namespace WebCore
 
 SPECIALIZE_TYPE_TRAITS_BEGIN(WebCore::SliderContainerElement)
