diff a/modules/javafx.web/src/main/native/Source/WebCore/WebCoreMacros.cmake b/modules/javafx.web/src/main/native/Source/WebCore/WebCoreMacros.cmake
--- a/modules/javafx.web/src/main/native/Source/WebCore/WebCoreMacros.cmake
+++ b/modules/javafx.web/src/main/native/Source/WebCore/WebCoreMacros.cmake
@@ -1,32 +1,32 @@
 macro(MAKE_HASH_TOOLS _source)
     get_filename_component(_name ${_source} NAME_WE)
 
     if (${_source} STREQUAL "DocTypeStrings")
-        set(_hash_tools_h "${DERIVED_SOURCES_WEBCORE_DIR}/HashTools.h")
+        set(_hash_tools_h "${WebCore_DERIVED_SOURCES_DIR}/HashTools.h")
     else ()
         set(_hash_tools_h "")
     endif ()
 
     add_custom_command(
-        OUTPUT ${DERIVED_SOURCES_WEBCORE_DIR}/${_name}.cpp ${_hash_tools_h}
+        OUTPUT ${WebCore_DERIVED_SOURCES_DIR}/${_name}.cpp ${_hash_tools_h}
         MAIN_DEPENDENCY ${_source}.gperf
-        COMMAND ${PERL_EXECUTABLE} ${WEBCORE_DIR}/make-hash-tools.pl ${DERIVED_SOURCES_WEBCORE_DIR} ${_source}.gperf ${GPERF_EXECUTABLE}
+        COMMAND ${PERL_EXECUTABLE} ${WEBCORE_DIR}/make-hash-tools.pl ${WebCore_DERIVED_SOURCES_DIR} ${_source}.gperf ${GPERF_EXECUTABLE}
         VERBATIM)
 
     unset(_name)
     unset(_hash_tools_h)
 endmacro()
 
 
 # Append the given dependencies to the source file
-# This one consider the given dependencies are in ${DERIVED_SOURCES_WEBCORE_DIR}
+# This one consider the given dependencies are in ${WebCore_DERIVED_SOURCES_DIR}
 # and prepends this to every member of dependencies list
 macro(ADD_SOURCE_WEBCORE_DERIVED_DEPENDENCIES _source _deps)
     set(_tmp "")
     foreach (f ${_deps})
-        list(APPEND _tmp "${DERIVED_SOURCES_WEBCORE_DIR}/${f}")
+        list(APPEND _tmp "${WebCore_DERIVED_SOURCES_DIR}/${f}")
     endforeach ()
 
     WEBKIT_ADD_SOURCE_DEPENDENCIES(${_source} ${_tmp})
     unset(_tmp)
 endmacro()
@@ -62,11 +62,10 @@
     set(multiValueArgs INPUT_FILES IDL_INCLUDES PP_EXTRA_OUTPUT PP_EXTRA_ARGS)
     cmake_parse_arguments(arg "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
     set(binding_generator ${WEBCORE_DIR}/bindings/scripts/generate-bindings-all.pl)
     set(idl_attributes_file ${WEBCORE_DIR}/bindings/scripts/IDLAttributes.json)
     set(idl_files_list ${CMAKE_CURRENT_BINARY_DIR}/idl_files_${target}.tmp)
-    set(idl_include_list ${CMAKE_CURRENT_BINARY_DIR}/idl_include_${target}.tmp)
     set(_supplemental_dependency)
 
     set(content)
     foreach (f ${arg_INPUT_FILES})
         if (NOT IS_ABSOLUTE ${f})
@@ -79,31 +78,44 @@
     set(args
         --defines ${arg_FEATURES}
         --generator ${arg_GENERATOR}
         --outputDir ${arg_DESTINATION}
         --idlFilesList ${idl_files_list}
-        --includeDirsList ${idl_include_list}
         --preprocessor "${CODE_GENERATOR_PREPROCESSOR}"
         --idlAttributesFile ${idl_attributes_file}
     )
     if (arg_SUPPLEMENTAL_DEPFILE)
         list(APPEND args --supplementalDependencyFile ${arg_SUPPLEMENTAL_DEPFILE})
     endif ()
     ProcessorCount(PROCESSOR_COUNT)
     if (PROCESSOR_COUNT)
         list(APPEND args --numOfJobs ${PROCESSOR_COUNT})
     endif ()
-    set(include_dir)
-    foreach (i IN LISTS arg_IDL_INCLUDES)
-        if (IS_ABSOLUTE ${i})
-            set(f ${i})
-        else ()
-            set(f ${CMAKE_CURRENT_SOURCE_DIR}/${i})
-        endif ()
-        set(include_dir "${include_dir}${f}\n")
-    endforeach ()
-    file(WRITE ${idl_include_list} ${include_dir})
+
+    # https://support.microsoft.com/en-in/help/830473/command-prompt-cmd-exe-command-line-string-limitation
+    # pass --include dir list to tmp file instead of multiple argument
+    if (WIN32 AND PORT STREQUAL "Java")
+        set(include_dir_list ${CMAKE_CURRENT_BINARY_DIR}/include_dir_${target}.tmp)
+        set(includeDirectories)
+        foreach (i IN LISTS arg_IDL_INCLUDES)
+            if (IS_ABSOLUTE ${i})
+                set(includeDirectories "${includeDirectories}${i}\n")
+            else ()
+                set(includeDirectories "${includeDirectories}${CMAKE_CURRENT_SOURCE_DIR}/${i}\n")
+            endif ()
+        endforeach ()
+        file(WRITE ${include_dir_list} ${includeDirectories})
+        list(APPEND args --includeDirList ${include_dir_list})
+    else ()
+            foreach (i IN LISTS arg_IDL_INCLUDES)
+            if (IS_ABSOLUTE ${i})
+                list(APPEND args --include ${i})
+            else ()
+                list(APPEND args --include ${CMAKE_CURRENT_SOURCE_DIR}/${i})
+            endif ()
+        endforeach ()
+    endif ()
 
     foreach (i IN LISTS arg_PP_EXTRA_OUTPUT)
         list(APPEND args --ppExtraOutput ${i})
     endforeach ()
     foreach (i IN LISTS arg_PP_EXTRA_ARGS)
@@ -152,30 +164,30 @@
 
 
 macro(GENERATE_FONT_NAMES _infile)
     set(NAMES_GENERATOR ${WEBCORE_DIR}/dom/make_names.pl)
     set(_arguments  --fonts ${_infile})
-    set(_outputfiles ${DERIVED_SOURCES_WEBCORE_DIR}/WebKitFontFamilyNames.cpp ${DERIVED_SOURCES_WEBCORE_DIR}/WebKitFontFamilyNames.h)
+    set(_outputfiles ${WebCore_DERIVED_SOURCES_DIR}/WebKitFontFamilyNames.cpp ${WebCore_DERIVED_SOURCES_DIR}/WebKitFontFamilyNames.h)
 
     add_custom_command(
         OUTPUT  ${_outputfiles}
         MAIN_DEPENDENCY ${_infile}
         DEPENDS ${MAKE_NAMES_DEPENDENCIES} ${NAMES_GENERATOR} ${SCRIPTS_BINDINGS}
-        COMMAND ${PERL_EXECUTABLE} ${NAMES_GENERATOR} --outputDir ${DERIVED_SOURCES_WEBCORE_DIR} ${_arguments}
+        COMMAND ${PERL_EXECUTABLE} ${NAMES_GENERATOR} --outputDir ${WebCore_DERIVED_SOURCES_DIR} ${_arguments}
         VERBATIM)
 endmacro()
 
 
 macro(GENERATE_EVENT_FACTORY _infile _namespace)
     set(NAMES_GENERATOR ${WEBCORE_DIR}/dom/make_event_factory.pl)
-    set(_outputfiles ${DERIVED_SOURCES_WEBCORE_DIR}/${_namespace}Interfaces.h ${DERIVED_SOURCES_WEBCORE_DIR}/${_namespace}Factory.cpp)
+    set(_outputfiles ${WebCore_DERIVED_SOURCES_DIR}/${_namespace}Interfaces.h ${WebCore_DERIVED_SOURCES_DIR}/${_namespace}Factory.cpp)
 
     add_custom_command(
         OUTPUT  ${_outputfiles}
         MAIN_DEPENDENCY ${_infile}
         DEPENDS ${NAMES_GENERATOR} ${SCRIPTS_BINDINGS}
-        COMMAND ${PERL_EXECUTABLE} ${NAMES_GENERATOR} --input ${_infile} --outputDir ${DERIVED_SOURCES_WEBCORE_DIR}
+        COMMAND ${PERL_EXECUTABLE} ${NAMES_GENERATOR} --input ${_infile} --outputDir ${WebCore_DERIVED_SOURCES_DIR}
         VERBATIM)
 endmacro()
 
 
 macro(GENERATE_SETTINGS_MACROS _infile _outfile)
@@ -183,14 +195,14 @@
 
     # Do not list the output in more than one independent target that may
     # build in parallel or the two instances of the rule may conflict.
     # <https://cmake.org/cmake/help/v3.0/command/add_custom_command.html>
     set(_extra_output
-        ${DERIVED_SOURCES_WEBCORE_DIR}/Settings.cpp
-        ${DERIVED_SOURCES_WEBCORE_DIR}/InternalSettingsGenerated.h
-        ${DERIVED_SOURCES_WEBCORE_DIR}/InternalSettingsGenerated.cpp
-        ${DERIVED_SOURCES_WEBCORE_DIR}/InternalSettingsGenerated.idl
+        ${WebCore_DERIVED_SOURCES_DIR}/Settings.cpp
+        ${WebCore_DERIVED_SOURCES_DIR}/InternalSettingsGenerated.h
+        ${WebCore_DERIVED_SOURCES_DIR}/InternalSettingsGenerated.cpp
+        ${WebCore_DERIVED_SOURCES_DIR}/InternalSettingsGenerated.idl
     )
 
     set(GENERATE_SETTINGS_SCRIPTS
         ${WEBCORE_DIR}/Scripts/SettingsTemplates/InternalSettingsGenerated.cpp.erb
         ${WEBCORE_DIR}/Scripts/SettingsTemplates/InternalSettingsGenerated.idl.erb
@@ -199,22 +211,22 @@
         ${WEBCORE_DIR}/Scripts/SettingsTemplates/Settings.h.erb
     )
 
     set(_args BYPRODUCTS ${_extra_output})
     add_custom_command(
-        OUTPUT ${DERIVED_SOURCES_WEBCORE_DIR}/${_outfile}
+        OUTPUT ${WebCore_DERIVED_SOURCES_DIR}/${_outfile}
         MAIN_DEPENDENCY ${_infile}
         DEPENDS ${NAMES_GENERATOR} ${GENERATE_SETTINGS_SCRIPTS} ${SCRIPTS_BINDINGS}
-        COMMAND ${RUBY_EXECUTABLE} ${NAMES_GENERATOR} --input ${_infile} --outputDir ${DERIVED_SOURCES_WEBCORE_DIR}
+        COMMAND ${RUBY_EXECUTABLE} ${NAMES_GENERATOR} --input ${_infile} --outputDir ${WebCore_DERIVED_SOURCES_DIR}
         VERBATIM ${_args})
 endmacro()
 
 
 macro(GENERATE_DOM_NAMES _namespace _attrs)
     set(NAMES_GENERATOR ${WEBCORE_DIR}/dom/make_names.pl)
     set(_arguments  --attrs ${_attrs})
-    set(_outputfiles ${DERIVED_SOURCES_WEBCORE_DIR}/${_namespace}Names.cpp ${DERIVED_SOURCES_WEBCORE_DIR}/${_namespace}Names.h)
+    set(_outputfiles ${WebCore_DERIVED_SOURCES_DIR}/${_namespace}Names.cpp ${WebCore_DERIVED_SOURCES_DIR}/${_namespace}Names.h)
     set(_extradef)
     set(_tags)
 
     foreach (f ${ARGN})
         if (_tags)
@@ -224,18 +236,18 @@
         endif ()
     endforeach ()
 
     if (_tags)
         set(_arguments "${_arguments}" --tags ${_tags} --factory --wrapperFactory)
-        set(_outputfiles "${_outputfiles}" ${DERIVED_SOURCES_WEBCORE_DIR}/${_namespace}ElementFactory.cpp ${DERIVED_SOURCES_WEBCORE_DIR}/${_namespace}ElementFactory.h ${DERIVED_SOURCES_WEBCORE_DIR}/JS${_namespace}ElementWrapperFactory.cpp ${DERIVED_SOURCES_WEBCORE_DIR}/JS${_namespace}ElementWrapperFactory.h)
+        set(_outputfiles "${_outputfiles}" ${WebCore_DERIVED_SOURCES_DIR}/${_namespace}ElementFactory.cpp ${WebCore_DERIVED_SOURCES_DIR}/${_namespace}ElementFactory.h ${WebCore_DERIVED_SOURCES_DIR}/${_namespace}ElementTypeHelpers.h ${WebCore_DERIVED_SOURCES_DIR}/JS${_namespace}ElementWrapperFactory.cpp ${WebCore_DERIVED_SOURCES_DIR}/JS${_namespace}ElementWrapperFactory.h)
     endif ()
 
     if (_extradef)
         set(_additionArguments "${_additionArguments}" --extraDefines=${_extradef})
     endif ()
 
     add_custom_command(
         OUTPUT  ${_outputfiles}
         DEPENDS ${MAKE_NAMES_DEPENDENCIES} ${NAMES_GENERATOR} ${SCRIPTS_BINDINGS} ${_attrs} ${_tags}
-        COMMAND ${PERL_EXECUTABLE} ${NAMES_GENERATOR} --preprocessor "${CODE_GENERATOR_PREPROCESSOR_WITH_LINEMARKERS}" --outputDir ${DERIVED_SOURCES_WEBCORE_DIR} ${_arguments} ${_additionArguments}
+        COMMAND ${PERL_EXECUTABLE} ${NAMES_GENERATOR} --preprocessor "${CODE_GENERATOR_PREPROCESSOR_WITH_LINEMARKERS}" --outputDir ${WebCore_DERIVED_SOURCES_DIR} ${_arguments} ${_additionArguments}
         VERBATIM)
 endmacro()
