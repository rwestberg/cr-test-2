diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/legacy/WebKitMediaKeyMessageEvent.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/legacy/WebKitMediaKeyMessageEvent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/legacy/WebKitMediaKeyMessageEvent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/legacy/WebKitMediaKeyMessageEvent.h
@@ -35,33 +35,33 @@
 
 class WebKitMediaKeyMessageEvent : public Event {
 public:
     virtual ~WebKitMediaKeyMessageEvent();
 
-    static Ref<WebKitMediaKeyMessageEvent> create(const AtomicString& type, Uint8Array* message, const String& destinationURL)
+    static Ref<WebKitMediaKeyMessageEvent> create(const AtomString& type, Uint8Array* message, const String& destinationURL)
     {
         return adoptRef(*new WebKitMediaKeyMessageEvent(type, message, destinationURL));
     }
 
     struct Init : EventInit {
         RefPtr<Uint8Array> message;
         String destinationURL;
     };
 
-    static Ref<WebKitMediaKeyMessageEvent> create(const AtomicString& type, const Init& initializer, IsTrusted isTrusted = IsTrusted::No)
+    static Ref<WebKitMediaKeyMessageEvent> create(const AtomString& type, const Init& initializer, IsTrusted isTrusted = IsTrusted::No)
     {
         return adoptRef(*new WebKitMediaKeyMessageEvent(type, initializer, isTrusted));
     }
 
     EventInterface eventInterface() const override;
 
     Uint8Array* message() const { return m_message.get(); }
     String destinationURL() const { return m_destinationURL; }
 
 private:
-    WebKitMediaKeyMessageEvent(const AtomicString& type, Uint8Array* message, const String& destinationURL);
-    WebKitMediaKeyMessageEvent(const AtomicString& type, const Init&, IsTrusted);
+    WebKitMediaKeyMessageEvent(const AtomString& type, Uint8Array* message, const String& destinationURL);
+    WebKitMediaKeyMessageEvent(const AtomString& type, const Init&, IsTrusted);
 
     RefPtr<Uint8Array> m_message;
     String m_destinationURL;
 };
 
