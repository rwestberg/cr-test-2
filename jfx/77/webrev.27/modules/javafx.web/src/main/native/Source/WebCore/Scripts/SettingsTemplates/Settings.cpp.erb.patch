diff a/modules/javafx.web/src/main/native/Source/WebCore/Scripts/SettingsTemplates/Settings.cpp.erb b/modules/javafx.web/src/main/native/Source/WebCore/Scripts/SettingsTemplates/Settings.cpp.erb
--- a/modules/javafx.web/src/main/native/Source/WebCore/Scripts/SettingsTemplates/Settings.cpp.erb
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Scripts/SettingsTemplates/Settings.cpp.erb
@@ -26,10 +26,11 @@
  */
 
 #include "config.h"
 #include "Settings.h"
 
+#include "InspectorInstrumentation.h"
 #include "Page.h"
 #include "SettingsDefaultValues.h"
 
 namespace WebCore {
 
@@ -73,12 +74,14 @@
 
 <%- for @setting in @unconditionalSettingWithComplexGetters do -%>
 <%= @setting.parameterType %> Settings::<%= @setting.getterFunctionName %>() const
 {
 <%- if @setting.hasInspectorOverride? -%>
-    if (m_<%= @setting.name %>InspectorOverride)
+    if (UNLIKELY(m_<%= @setting.name %>InspectorOverride)) {
+        ASSERT(InspectorInstrumentation::hasFrontends());
         return m_<%= @setting.name %>InspectorOverride.value();
+    }
 <%- end -%>
     return m_<%= @setting.name %>;
 }
 
 <%- end -%>
@@ -97,12 +100,14 @@
 #if ENABLE(<%= @conditional.condition %>)
 <%- for @setting in @conditional.settingsWithComplexGetters do -%>
 <%= @setting.parameterType %> Settings::<%= @setting.getterFunctionName %>() const
 {
 <%- if @setting.hasInspectorOverride? -%>
-    if (m_<%= @setting.name %>InspectorOverride)
+    if (UNLIKELY(m_<%= @setting.name %>InspectorOverride)) {
+        ASSERT(InspectorInstrumentation::hasFrontends());
         return m_<%= @setting.name %>InspectorOverride.value();
+    }
 <%- end -%>
     return m_<%= @setting.name %>;
 }
 <%- end -%>
 <%- for @setting in @conditional.settingsWithComplexSetters -%>
