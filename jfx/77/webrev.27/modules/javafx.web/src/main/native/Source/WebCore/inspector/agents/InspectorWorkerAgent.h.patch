diff a/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/InspectorWorkerAgent.h b/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/InspectorWorkerAgent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/InspectorWorkerAgent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/InspectorWorkerAgent.h
@@ -40,23 +40,24 @@
 class InspectorWorkerAgent final : public InspectorAgentBase, public Inspector::WorkerBackendDispatcherHandler, public WorkerInspectorProxy::PageChannel {
     WTF_MAKE_NONCOPYABLE(InspectorWorkerAgent);
     WTF_MAKE_FAST_ALLOCATED;
 public:
     InspectorWorkerAgent(PageAgentContext&);
-    virtual ~InspectorWorkerAgent() = default;
+    virtual ~InspectorWorkerAgent();
 
-    void didCreateFrontendAndBackend(Inspector::FrontendRouter*, Inspector::BackendDispatcher*) override;
-    void willDestroyFrontendAndBackend(Inspector::DisconnectReason) override;
+    // InspectorAgentBase
+    void didCreateFrontendAndBackend(Inspector::FrontendRouter*, Inspector::BackendDispatcher*);
+    void willDestroyFrontendAndBackend(Inspector::DisconnectReason);
 
     // WorkerBackendDispatcherHandler
-    void enable(ErrorString&) override;
-    void disable(ErrorString&) override;
-    void initialized(ErrorString&, const String& workerId) override;
-    void sendMessageToWorker(ErrorString&, const String& workerId, const String& message) override;
+    void enable(ErrorString&);
+    void disable(ErrorString&);
+    void initialized(ErrorString&, const String& workerId);
+    void sendMessageToWorker(ErrorString&, const String& workerId, const String& message);
 
-    // PageChannel
-    void sendMessageFromWorkerToFrontend(WorkerInspectorProxy*, const String& message) override;
+    // WorkerInspectorProxy::PageChannel
+    void sendMessageFromWorkerToFrontend(WorkerInspectorProxy*, const String& message);
 
     // InspectorInstrumentation
     bool shouldWaitForDebuggerOnStart() const;
     void workerStarted(WorkerInspectorProxy*, const URL&);
     void workerTerminated(WorkerInspectorProxy*);
