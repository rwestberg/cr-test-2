diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/protocol/Debugger.json b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/protocol/Debugger.json
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/protocol/Debugger.json
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/protocol/Debugger.json
@@ -259,10 +259,17 @@
             "description": "Set pause on assertions state. Assertions are console.assert assertions.",
             "parameters": [
                 { "name": "enabled", "type": "boolean" }
             ]
         },
+        {
+            "name": "setPauseOnMicrotasks",
+            "description": "Pause when running the next JavaScript microtask.",
+            "parameters": [
+                { "name": "enabled", "type": "boolean" }
+            ]
+        },
         {
             "name": "setPauseForInternalScripts",
             "description": "Change whether to pause in the debugger for internal scripts. The default value is false.",
             "parameters": [
                 { "name": "shouldPause", "type": "boolean" }
@@ -277,24 +284,18 @@
                 { "name": "objectGroup", "type": "string", "optional": true, "description": "String object group name to put result into (allows rapid releasing resulting object handles using <code>releaseObjectGroup</code>)." },
                 { "name": "includeCommandLineAPI", "type": "boolean", "optional": true, "description": "Specifies whether command line API should be available to the evaluated expression, defaults to false." },
                 { "name": "doNotPauseOnExceptionsAndMuteConsole", "type": "boolean", "optional": true, "description": "Specifies whether evaluation should stop on exceptions and mute console. Overrides setPauseOnException state." },
                 { "name": "returnByValue", "type": "boolean", "optional": true, "description": "Whether the result is expected to be a JSON object that should be sent by value." },
                 { "name": "generatePreview", "type": "boolean", "optional": true, "description": "Whether preview should be generated for the result." },
-                { "name": "saveResult", "type": "boolean", "optional": true, "description": "Whether the resulting value should be considered for saving in the $n history." }
+                { "name": "saveResult", "type": "boolean", "optional": true, "description": "Whether the resulting value should be considered for saving in the $n history." },
+                { "name": "emulateUserGesture", "type": "boolean", "optional": true, "description": "Whether the expression should be considered to be in a user gesture or not." }
             ],
             "returns": [
                 { "name": "result", "$ref": "Runtime.RemoteObject", "description": "Object wrapper for the evaluation result." },
                 { "name": "wasThrown", "type": "boolean", "optional": true, "description": "True if the result was thrown during the evaluation." },
                 { "name": "savedResultIndex", "type": "integer", "optional": true, "description": "If the result was saved, this is the $n index that can be used to access the value." }
             ]
-        },
-        {
-            "name": "setOverlayMessage",
-            "description": "Sets overlay message.",
-            "parameters": [
-                { "name": "message", "type": "string", "optional": true, "description": "Overlay message to display when paused in debugger." }
-            ]
         }
     ],
     "events": [
         {
             "name": "globalObjectCleared",
@@ -338,11 +339,11 @@
         {
             "name": "paused",
             "description": "Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.",
             "parameters": [
                 { "name": "callFrames", "type": "array", "items": { "$ref": "CallFrame" }, "description": "Call stack the virtual machine stopped on." },
-                { "name": "reason", "type": "string", "enum": ["XHR", "Fetch", "DOM", "AnimationFrame", "EventListener", "Timer", "exception", "assert", "CSPViolation", "DebuggerStatement", "Breakpoint", "PauseOnNextStatement", "other"], "description": "Pause reason." },
+                { "name": "reason", "type": "string", "enum": ["XHR", "Fetch", "DOM", "AnimationFrame", "Interval", "Listener", "Timeout", "exception", "assert", "CSPViolation", "DebuggerStatement", "Breakpoint", "PauseOnNextStatement", "Microtask", "other"], "description": "Pause reason." },
                 { "name": "data", "type": "object", "optional": true, "description": "Object containing break-specific auxiliary properties." },
                 { "name": "asyncStackTrace", "$ref": "Console.StackTrace", "optional": true, "description": "Linked list of asynchronous StackTraces." }
             ]
         },
         {
