diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/legacy/LegacyCDMSessionClearKey.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/legacy/LegacyCDMSessionClearKey.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/legacy/LegacyCDMSessionClearKey.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/legacy/LegacyCDMSessionClearKey.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2015 Apple Inc. All rights reserved.
+ * Copyright (C) 2015-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -107,11 +107,11 @@
         if (scope.exception() || !keysDataValue.isObject()) {
             LOG(Media, "CDMSessionClearKey::update(%p) - failed: invalid JSON", this);
             break;
         }
 
-        auto keysArrayValue = asObject(keysDataValue)->get(&state, Identifier::fromString(&state, "keys"));
+        auto keysArrayValue = asObject(keysDataValue)->get(&state, Identifier::fromString(vm, "keys"));
         if (scope.exception() || !isJSArray(keysArrayValue)) {
             LOG(Media, "CDMSessionClearKey::update(%p) - failed: keys array missing or empty", this);
             break;
         }
 
@@ -131,12 +131,12 @@
                 continue;
             }
 
             auto keyObject = asObject(keyValue);
 
-            auto getStringProperty = [&scope, &state, &keyObject](const char* name) -> String {
-                auto value = keyObject->get(&state, Identifier::fromString(&state, name));
+            auto getStringProperty = [&scope, &state, &keyObject, &vm](const char* name) -> String {
+                auto value = keyObject->get(&state, Identifier::fromString(vm, name));
                 if (scope.exception() || !value.isString())
                     return { };
 
                 auto string = asString(value)->value(&state);
                 if (scope.exception())
