diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/GetByIdVariant.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/GetByIdVariant.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/GetByIdVariant.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/GetByIdVariant.cpp
@@ -70,11 +70,11 @@
     m_offset = other.m_offset;
     m_intrinsicFunction = other.m_intrinsicFunction;
     m_customAccessorGetter = other.m_customAccessorGetter;
     m_domAttribute = other.m_domAttribute;
     if (other.m_callLinkStatus)
-        m_callLinkStatus = std::make_unique<CallLinkStatus>(*other.m_callLinkStatus);
+        m_callLinkStatus = makeUnique<CallLinkStatus>(*other.m_callLinkStatus);
     else
         m_callLinkStatus = nullptr;
     return *this;
 }
 
@@ -147,19 +147,19 @@
 void GetByIdVariant::markIfCheap(SlotVisitor& visitor)
 {
     m_structureSet.markIfCheap(visitor);
 }
 
-bool GetByIdVariant::finalize()
+bool GetByIdVariant::finalize(VM& vm)
 {
-    if (!m_structureSet.isStillAlive())
+    if (!m_structureSet.isStillAlive(vm))
         return false;
-    if (!m_conditionSet.areStillLive())
+    if (!m_conditionSet.areStillLive(vm))
         return false;
-    if (m_callLinkStatus && !m_callLinkStatus->finalize())
+    if (m_callLinkStatus && !m_callLinkStatus->finalize(vm))
         return false;
-    if (m_intrinsicFunction && !Heap::isMarked(m_intrinsicFunction))
+    if (m_intrinsicFunction && !vm.heap.isMarked(m_intrinsicFunction))
         return false;
     return true;
 }
 
 void GetByIdVariant::dump(PrintStream& out) const
