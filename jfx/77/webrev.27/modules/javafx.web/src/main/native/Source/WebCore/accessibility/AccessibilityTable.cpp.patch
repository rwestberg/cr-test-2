diff a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityTable.cpp b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityTable.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityTable.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityTable.cpp
@@ -698,11 +698,11 @@
     return title;
 }
 
 int AccessibilityTable::axColumnCount() const
 {
-    const AtomicString& colCountValue = getAttribute(aria_colcountAttr);
+    const AtomString& colCountValue = getAttribute(aria_colcountAttr);
     int colCountInt = colCountValue.toInt();
     // The ARIA spec states, "Authors must set the value of aria-colcount to an integer equal to the
     // number of columns in the full table. If the total number of columns is unknown, authors must
     // set the value of aria-colcount to -1 to indicate that the value should not be calculated by
     // the user agent." If we have a valid value, make it available to platforms.
@@ -712,11 +712,11 @@
     return 0;
 }
 
 int AccessibilityTable::axRowCount() const
 {
-    const AtomicString& rowCountValue = getAttribute(aria_rowcountAttr);
+    const AtomString& rowCountValue = getAttribute(aria_rowcountAttr);
     int rowCountInt = rowCountValue.toInt();
     // The ARIA spec states, "Authors must set the value of aria-rowcount to an integer equal to the
     // number of rows in the full table. If the total number of rows is unknown, authors must set
     // the value of aria-rowcount to -1 to indicate that the value should not be calculated by the
     // user agent." If we have a valid value, make it available to platforms.
