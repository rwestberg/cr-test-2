diff a/modules/javafx.web/src/main/native/Source/WebKitLegacy/java/WebCoreSupport/EditorClientJava.h b/modules/javafx.web/src/main/native/Source/WebKitLegacy/java/WebCoreSupport/EditorClientJava.h
--- a/modules/javafx.web/src/main/native/Source/WebKitLegacy/java/WebCoreSupport/EditorClientJava.h
+++ b/modules/javafx.web/src/main/native/Source/WebKitLegacy/java/WebCoreSupport/EditorClientJava.h
@@ -23,10 +23,11 @@
  * questions.
  */
 
 #pragma once
 
+#include <WebCore/DOMPasteAccess.h>
 #include <WebCore/EditorClient.h>
 #include <WebCore/TextCheckerClient.h>
 #include <WebCore/PlatformJavaClasses.h>
 
 #include <wtf/Deque.h>
@@ -85,12 +86,12 @@
     bool canRedo() const override;
 
     void undo() override;
     void redo() override;
 
-    void handleKeyboardEvent(KeyboardEvent*) override;
-    void handleInputMethodKeydown(KeyboardEvent*) override;
+    void handleKeyboardEvent(KeyboardEvent&) override;
+    void handleInputMethodKeydown(KeyboardEvent&) override;
 
     void textFieldDidBeginEditing(Element*) override;
     void textFieldDidEndEditing(Element*) override;
     void textDidChangeInTextField(Element*) override;
     bool doTextFieldCommandFromEvent(Element*, KeyboardEvent*) override;
@@ -149,11 +150,14 @@
     // provide more accurate correction suggestions. Caller can pass in more text in "context" to aid such spellcheckers on language
     // identification. Noramlly it's the text surrounding the "word" for which we are getting correction suggestions.
     void getGuessesForWord(const String& word, const String& context, const VisibleSelection& currentSelection, Vector<String>& guesses) override;
     void requestCheckingOfString(TextCheckingRequest&, const VisibleSelection& currentSelection) override;
     bool performTwoStepDrop(WebCore::DocumentFragment&, WebCore::Range&, bool) final { return false; }
-    String replacementURLForResource(Ref<WebCore::SharedBuffer>&&, const String&) override;
+    bool canShowFontPanel() const final { return false; }
+
+    DOMPasteAccessResponse requestDOMPasteAccess(const String&) final { return DOMPasteAccessResponse::DeniedForGesture; }
+
 protected:
     JGObject m_webPage;
 
     bool m_isInRedo;
     Deque<Ref<UndoStep>> m_redoStack;
