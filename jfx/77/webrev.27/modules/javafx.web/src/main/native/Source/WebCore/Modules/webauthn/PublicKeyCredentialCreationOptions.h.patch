diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/PublicKeyCredentialCreationOptions.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/PublicKeyCredentialCreationOptions.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/PublicKeyCredentialCreationOptions.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/PublicKeyCredentialCreationOptions.h
@@ -25,10 +25,12 @@
 
 #pragma once
 
 #if ENABLE(WEB_AUTHN)
 
+#include "AttestationConveyancePreference.h"
+#include "AuthenticationExtensionsClientInputs.h"
 #include "BufferSource.h"
 #include "PublicKeyCredentialDescriptor.h"
 #include "PublicKeyCredentialType.h"
 #include "UserVerificationRequirement.h"
 #include <wtf/CrossThreadCopier.h>
@@ -81,10 +83,12 @@
     Vector<Parameters> pubKeyCredParams;
 
     Optional<unsigned> timeout;
     Vector<PublicKeyCredentialDescriptor> excludeCredentials;
     Optional<AuthenticatorSelectionCriteria> authenticatorSelection;
+    AttestationConveyancePreference attestation;
+    Optional<AuthenticationExtensionsClientInputs> extensions; // A place holder, but never used.
 
     template<class Encoder> void encode(Encoder&) const;
     template<class Decoder> static Optional<PublicKeyCredentialCreationOptions> decode(Decoder&);
 };
 
@@ -138,11 +142,11 @@
 void PublicKeyCredentialCreationOptions::encode(Encoder& encoder) const
 {
     encoder << rp.id << rp.name << rp.icon;
     encoder << static_cast<uint64_t>(user.id.length());
     encoder.encodeFixedLengthData(user.id.data(), user.id.length(), 1);
-    encoder << user.displayName << user.name << user.icon << pubKeyCredParams << timeout << excludeCredentials << authenticatorSelection;
+    encoder << user.displayName << user.name << user.icon << pubKeyCredParams << timeout << excludeCredentials << authenticatorSelection << attestation;
 }
 
 template<class Decoder>
 Optional<PublicKeyCredentialCreationOptions> PublicKeyCredentialCreationOptions::decode(Decoder& decoder)
 {
@@ -177,10 +181,16 @@
     decoder >> authenticatorSelection;
     if (!authenticatorSelection)
         return WTF::nullopt;
     result.authenticatorSelection = WTFMove(*authenticatorSelection);
 
+    Optional<AttestationConveyancePreference> attestation;
+    decoder >> attestation;
+    if (!attestation)
+        return WTF::nullopt;
+    result.attestation = WTFMove(*attestation);
+
     return result;
 }
 
 } // namespace WebCore
 
