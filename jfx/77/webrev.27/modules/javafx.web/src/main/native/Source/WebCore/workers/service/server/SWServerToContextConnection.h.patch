diff a/modules/javafx.web/src/main/native/Source/WebCore/workers/service/server/SWServerToContextConnection.h b/modules/javafx.web/src/main/native/Source/WebCore/workers/service/server/SWServerToContextConnection.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/workers/service/server/SWServerToContextConnection.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/workers/service/server/SWServerToContextConnection.h
@@ -25,11 +25,11 @@
 
 #pragma once
 
 #if ENABLE(SERVICE_WORKER)
 
-#include "SecurityOriginData.h"
+#include "RegistrableDomain.h"
 #include "ServiceWorkerClientQueryOptions.h"
 #include "ServiceWorkerContextData.h"
 #include "ServiceWorkerIdentifier.h"
 #include "ServiceWorkerTypes.h"
 #include <wtf/RefCounted.h>
@@ -74,22 +74,22 @@
     WEBCORE_EXPORT void findClientByIdentifier(uint64_t clientIdRequestIdentifier, ServiceWorkerIdentifier, ServiceWorkerClientIdentifier);
     WEBCORE_EXPORT void matchAll(uint64_t requestIdentifier, ServiceWorkerIdentifier, const ServiceWorkerClientQueryOptions&);
     WEBCORE_EXPORT void claim(uint64_t requestIdentifier, ServiceWorkerIdentifier);
     WEBCORE_EXPORT void setScriptResource(ServiceWorkerIdentifier, URL&& scriptURL, String&& script, URL&& responseURL, String&& mimeType);
 
-    static SWServerToContextConnection* connectionForOrigin(const SecurityOriginData&);
+    WEBCORE_EXPORT static SWServerToContextConnection* connectionForRegistrableDomain(const RegistrableDomain&);
 
-    const SecurityOriginData& securityOrigin() const { return m_securityOrigin; }
+    const RegistrableDomain& registrableDomain() const { return m_registrableDomain; }
 
     virtual void connectionMayNoLongerBeNeeded() = 0;
 
 protected:
-    WEBCORE_EXPORT explicit SWServerToContextConnection(const SecurityOriginData&);
+    WEBCORE_EXPORT explicit SWServerToContextConnection(const RegistrableDomain&);
 
 private:
     SWServerToContextConnectionIdentifier m_identifier;
-    SecurityOriginData m_securityOrigin;
+    RegistrableDomain m_registrableDomain;
 };
 
 } // namespace WebCore
 
 #endif // ENABLE(SERVICE_WORKER)
