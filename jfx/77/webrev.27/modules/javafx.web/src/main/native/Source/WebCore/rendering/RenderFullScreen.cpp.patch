diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderFullScreen.cpp b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderFullScreen.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderFullScreen.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderFullScreen.cpp
@@ -26,10 +26,11 @@
 
 #if ENABLE(FULLSCREEN_API)
 
 #include "RenderFullScreen.h"
 
+#include "FullscreenManager.h"
 #include "RenderBlockFlow.h"
 #include "RenderLayer.h"
 #include "RenderLayerCompositor.h"
 #include "RenderTreeBuilder.h"
 #include <wtf/IsoMallocInlines.h>
@@ -97,11 +98,11 @@
         return nullptr;
 
     builder.attach(fullscreenRenderer, WTFMove(renderer));
     fullscreenRenderer.setNeedsLayoutAndPrefWidthsRecalc();
 
-    document.setFullScreenRenderer(builder, fullscreenRenderer);
+    document.fullscreenManager().setFullscreenRenderer(builder, fullscreenRenderer);
 
     return newFullscreenRenderer;
 }
 
 void RenderFullScreen::wrapExistingRenderer(RenderElement& renderer, Document& document)
@@ -134,11 +135,11 @@
     containingBlock->setNeedsLayoutAndPrefWidthsRecalc();
 
     builder.attach(fullscreenRenderer, WTFMove(toMove));
     fullscreenRenderer.setNeedsLayoutAndPrefWidthsRecalc();
 
-    document.setFullScreenRenderer(builder, fullscreenRenderer);
+    document.fullscreenManager().setFullscreenRenderer(builder, fullscreenRenderer);
 }
 
 void RenderFullScreen::unwrapRenderer(bool& requiresRenderTreeRebuild)
 {
     RenderTreeBuilder builder(view());
