diff a/modules/javafx.web/src/main/native/Source/WebCore/html/parser/XSSAuditor.cpp b/modules/javafx.web/src/main/native/Source/WebCore/html/parser/XSSAuditor.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/parser/XSSAuditor.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/parser/XSSAuditor.cpp
@@ -26,10 +26,11 @@
  */
 
 #include "config.h"
 #include "XSSAuditor.h"
 
+#include "CustomHeaderFields.h"
 #include "DecodeEscapeSequences.h"
 #include "Document.h"
 #include "DocumentLoader.h"
 #include "FormData.h"
 #include "Frame.h"
@@ -373,11 +374,11 @@
 
     if (!didBlockScript)
         return nullptr;
 
     bool didBlockEntirePage = m_xssProtection == XSSProtectionDisposition::BlockEnabled;
-    return std::make_unique<XSSInfo>(m_documentURL, didBlockEntirePage, m_didSendValidXSSProtectionHeader);
+    return makeUnique<XSSInfo>(m_documentURL, didBlockEntirePage, m_didSendValidXSSProtectionHeader);
 }
 
 bool XSSAuditor::filterStartToken(const FilterTokenRequest& request)
 {
     bool didBlockScript = eraseDangerousAttributesIfInjected(request);
@@ -709,11 +710,11 @@
 {
     const unsigned minimumLengthForSuffixTree = 512; // FIXME: Tune this parameter.
     const unsigned suffixTreeDepth = 5;
 
     if (!m_decodedHTTPBodySuffixTree && m_decodedHTTPBody.length() >= minimumLengthForSuffixTree)
-        m_decodedHTTPBodySuffixTree = std::make_unique<SuffixTree<ASCIICodebook>>(m_decodedHTTPBody, suffixTreeDepth);
+        m_decodedHTTPBodySuffixTree = makeUnique<SuffixTree<ASCIICodebook>>(m_decodedHTTPBody, suffixTreeDepth);
     return m_decodedHTTPBodySuffixTree.get();
 }
 
 bool XSSAuditor::isContainedInRequest(const String& decodedSnippet)
 {
