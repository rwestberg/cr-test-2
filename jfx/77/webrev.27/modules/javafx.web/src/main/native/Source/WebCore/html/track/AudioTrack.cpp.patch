diff a/modules/javafx.web/src/main/native/Source/WebCore/html/track/AudioTrack.cpp b/modules/javafx.web/src/main/native/Source/WebCore/html/track/AudioTrack.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/track/AudioTrack.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/track/AudioTrack.cpp
@@ -37,43 +37,43 @@
 #include "HTMLMediaElement.h"
 #include <wtf/NeverDestroyed.h>
 
 namespace WebCore {
 
-const AtomicString& AudioTrack::alternativeKeyword()
+const AtomString& AudioTrack::alternativeKeyword()
 {
-    static NeverDestroyed<AtomicString> alternative("alternative", AtomicString::ConstructFromLiteral);
+    static NeverDestroyed<AtomString> alternative("alternative", AtomString::ConstructFromLiteral);
     return alternative;
 }
 
-const AtomicString& AudioTrack::descriptionKeyword()
+const AtomString& AudioTrack::descriptionKeyword()
 {
-    static NeverDestroyed<AtomicString> description("description", AtomicString::ConstructFromLiteral);
+    static NeverDestroyed<AtomString> description("description", AtomString::ConstructFromLiteral);
     return description;
 }
 
-const AtomicString& AudioTrack::mainKeyword()
+const AtomString& AudioTrack::mainKeyword()
 {
-    static NeverDestroyed<AtomicString> main("main", AtomicString::ConstructFromLiteral);
+    static NeverDestroyed<AtomString> main("main", AtomString::ConstructFromLiteral);
     return main;
 }
 
-const AtomicString& AudioTrack::mainDescKeyword()
+const AtomString& AudioTrack::mainDescKeyword()
 {
-    static NeverDestroyed<AtomicString> mainDesc("main-desc", AtomicString::ConstructFromLiteral);
+    static NeverDestroyed<AtomString> mainDesc("main-desc", AtomString::ConstructFromLiteral);
     return mainDesc;
 }
 
-const AtomicString& AudioTrack::translationKeyword()
+const AtomString& AudioTrack::translationKeyword()
 {
-    static NeverDestroyed<AtomicString> translation("translation", AtomicString::ConstructFromLiteral);
+    static NeverDestroyed<AtomString> translation("translation", AtomString::ConstructFromLiteral);
     return translation;
 }
 
-const AtomicString& AudioTrack::commentaryKeyword()
+const AtomString& AudioTrack::commentaryKeyword()
 {
-    static NeverDestroyed<AtomicString> commentary("commentary", AtomicString::ConstructFromLiteral);
+    static NeverDestroyed<AtomString> commentary("commentary", AtomString::ConstructFromLiteral);
     return commentary;
 }
 
 AudioTrack::AudioTrack(AudioTrackClient& client, AudioTrackPrivate& trackPrivate)
     : MediaTrackBase(MediaTrackBase::AudioTrack, trackPrivate.id(), trackPrivate.label(), trackPrivate.language())
@@ -107,11 +107,11 @@
 #endif
 
     updateKindFromPrivate();
 }
 
-bool AudioTrack::isValidKind(const AtomicString& value) const
+bool AudioTrack::isValidKind(const AtomString& value) const
 {
     return value == alternativeKeyword()
         || value == commentaryKeyword()
         || value == descriptionKeyword()
         || value == mainKeyword()
@@ -141,21 +141,21 @@
 
     if (m_client)
         m_client->audioTrackEnabledChanged(*this);
 }
 
-void AudioTrack::idChanged(const AtomicString& id)
+void AudioTrack::idChanged(const AtomString& id)
 {
     setId(id);
 }
 
-void AudioTrack::labelChanged(const AtomicString& label)
+void AudioTrack::labelChanged(const AtomString& label)
 {
     setLabel(label);
 }
 
-void AudioTrack::languageChanged(const AtomicString& language)
+void AudioTrack::languageChanged(const AtomString& language)
 {
     setLanguage(language);
 }
 
 void AudioTrack::willRemove()
