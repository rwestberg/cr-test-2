diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/MediaConstraints.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/MediaConstraints.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/MediaConstraints.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/MediaConstraints.cpp
@@ -121,14 +121,12 @@
     }
 }
 
 void FlattenedConstraint::set(const MediaConstraint& constraint)
 {
-    for (auto& variant : m_variants) {
-        if (variant.constraintType() == constraint.constraintType())
-            return;
-    }
+    if (find(constraint.constraintType()))
+        return;
 
     append(constraint);
 }
 
 void FlattenedConstraint::merge(const MediaConstraint& constraint)
@@ -389,27 +387,24 @@
     return false;
 }
 
 void MediaConstraints::setDefaultVideoConstraints()
 {
-    // 640x480, 30fps, font-facing camera
-    bool hasFrameRateConstraints = isConstraintSet([](const MediaTrackConstraintSetMap& constraint) {
-        return !!constraint.frameRate();
+    // 640x480, 30fps, front-facing camera
+    bool needsFrameRateConstraints = !isConstraintSet([](const MediaTrackConstraintSetMap& constraint) {
+        return !!constraint.frameRate() || !!constraint.width() || !!constraint.height();
     });
 
-    bool hasSizeConstraints = isConstraintSet([](const MediaTrackConstraintSetMap& constraint) {
+    bool needsSizeConstraints = !isConstraintSet([](const MediaTrackConstraintSetMap& constraint) {
         return !!constraint.width() || !!constraint.height();
     });
 
-    bool hasFacingModeConstraints = isConstraintSet([](const MediaTrackConstraintSetMap& constraint) {
-        return !!constraint.facingMode();
+    bool needsFacingModeConstraints = !isConstraintSet([](const MediaTrackConstraintSetMap& constraint) {
+        return !!constraint.facingMode() || !!constraint.deviceId();
     });
 
-    if (hasFrameRateConstraints && hasSizeConstraints && hasFacingModeConstraints)
-        return;
-
-    addDefaultVideoConstraints(mandatoryConstraints, !hasFrameRateConstraints, !hasSizeConstraints, !hasFacingModeConstraints);
+    addDefaultVideoConstraints(mandatoryConstraints, needsFrameRateConstraints, needsSizeConstraints, needsFacingModeConstraints);
 }
 
 }
 
 #endif // ENABLE(MEDIA_STREAM)
