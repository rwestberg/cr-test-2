diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/DirectArguments.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/DirectArguments.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/DirectArguments.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/DirectArguments.cpp
@@ -99,11 +99,11 @@
 
     visitor.appendValues(thisObject->storage(), std::max(thisObject->m_length, thisObject->m_minCapacity));
     visitor.append(thisObject->m_callee);
 
     if (thisObject->m_mappedArguments)
-        visitor.markAuxiliary(thisObject->m_mappedArguments.get());
+        visitor.markAuxiliary(thisObject->m_mappedArguments.get(thisObject->internalLength()));
     GenericArguments<DirectArguments>::visitChildren(thisCell, visitor);
 }
 
 Structure* DirectArguments::createStructure(VM& vm, JSGlobalObject* globalObject, JSValue prototype)
 {
@@ -118,12 +118,12 @@
     putDirect(vm, vm.propertyNames->callee, m_callee.get(), static_cast<unsigned>(PropertyAttribute::DontEnum));
     putDirect(vm, vm.propertyNames->iteratorSymbol, globalObject(vm)->arrayProtoValuesFunction(), static_cast<unsigned>(PropertyAttribute::DontEnum));
 
     void* backingStore = vm.gigacageAuxiliarySpace(m_mappedArguments.kind).allocateNonVirtual(vm, mappedArgumentsSize(), nullptr, AllocationFailureMode::Assert);
     bool* overrides = static_cast<bool*>(backingStore);
-    m_mappedArguments.set(vm, this, overrides);
-    for (unsigned i = m_length; i--;)
+    m_mappedArguments.set(vm, this, overrides, internalLength());
+    for (unsigned i = internalLength(); i--;)
         overrides[i] = false;
 }
 
 void DirectArguments::overrideThingsIfNecessary(VM& vm)
 {
@@ -132,11 +132,11 @@
 }
 
 void DirectArguments::unmapArgument(VM& vm, unsigned index)
 {
     overrideThingsIfNecessary(vm);
-    m_mappedArguments[index] = true;
+    m_mappedArguments.at(index, internalLength()) = true;
 }
 
 void DirectArguments::copyToArguments(ExecState* exec, VirtualRegister firstElementDest, unsigned offset, unsigned length)
 {
     if (!m_mappedArguments) {
