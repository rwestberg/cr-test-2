diff a/modules/javafx.web/src/main/native/Source/WebCore/storage/Storage.cpp b/modules/javafx.web/src/main/native/Source/WebCore/storage/Storage.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/storage/Storage.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/storage/Storage.cpp
@@ -31,14 +31,17 @@
 #include "Page.h"
 #include "SchemeRegistry.h"
 #include "SecurityOrigin.h"
 #include "StorageArea.h"
 #include "StorageType.h"
+#include <wtf/IsoMallocInlines.h>
 #include <wtf/text/WTFString.h>
 
 namespace WebCore {
 
+WTF_MAKE_ISO_ALLOCATED_IMPL(Storage);
+
 Ref<Storage> Storage::create(DOMWindow& window, Ref<StorageArea>&& storageArea)
 {
     return adoptRef(*new Storage(window, WTFMove(storageArea)));
 }
 
@@ -112,15 +115,15 @@
 bool Storage::isSupportedPropertyName(const String& propertyName) const
 {
     return m_storageArea->contains(propertyName);
 }
 
-Vector<AtomicString> Storage::supportedPropertyNames() const
+Vector<AtomString> Storage::supportedPropertyNames() const
 {
     unsigned length = m_storageArea->length();
 
-    Vector<AtomicString> result;
+    Vector<AtomString> result;
     result.reserveInitialCapacity(length);
 
     for (unsigned i = 0; i < length; ++i)
         result.uncheckedAppend(m_storageArea->key(i));
 
