diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/MediaTime.h b/modules/javafx.web/src/main/native/Source/WTF/wtf/MediaTime.h
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/MediaTime.h
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/MediaTime.h
@@ -39,11 +39,11 @@
 
 namespace WTF {
 
 class PrintStream;
 
-class WTF_EXPORT_PRIVATE MediaTime {
+class WTF_EXPORT_PRIVATE MediaTime final {
     WTF_MAKE_FAST_ALLOCATED;
 public:
     enum {
         Valid = 1 << 0,
         HasBeenRounded = 1 << 1,
@@ -152,10 +152,12 @@
 inline MediaTime operator*(int32_t lhs, const MediaTime& rhs) { return rhs.operator*(lhs); }
 
 WTF_EXPORT_PRIVATE extern MediaTime abs(const MediaTime& rhs);
 
 struct WTF_EXPORT_PRIVATE MediaTimeRange {
+    WTF_MAKE_STRUCT_FAST_ALLOCATED;
+
     String toJSONString() const;
 
     const MediaTime start;
     const MediaTime end;
 };
@@ -172,10 +174,29 @@
     return decoder.decode(time.m_timeValue)
         && decoder.decode(time.m_timeScale)
         && decoder.decode(time.m_timeFlags);
 }
 
+template<typename Type>
+struct LogArgument;
+
+template <>
+struct LogArgument<MediaTime> {
+    static String toString(const MediaTime& time)
+    {
+        return time.toJSONString();
+    }
+};
+
+template <>
+struct LogArgument<MediaTimeRange> {
+    static String toString(const MediaTimeRange& range)
+    {
+        return range.toJSONString();
+    }
+};
+
 }
 
 using WTF::MediaTime;
 using WTF::MediaTimeRange;
 using WTF::abs;
