diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/Gigacage.cpp b/modules/javafx.web/src/main/native/Source/WTF/wtf/Gigacage.cpp
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/Gigacage.cpp
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/Gigacage.cpp
@@ -39,10 +39,15 @@
 void* tryMalloc(Kind, size_t size)
 {
     return FastMalloc::tryMalloc(size);
 }
 
+void* tryRealloc(Kind, void* pointer, size_t size)
+{
+    return FastMalloc::tryRealloc(pointer, size);
+}
+
 void* tryAllocateZeroedVirtualPages(Kind, size_t requestedSize)
 {
     size_t size = roundUpToMultipleOf(WTF::pageSize(), requestedSize);
     RELEASE_ASSERT(size >= requestedSize);
     void* result = OSAllocator::reserveAndCommit(size);
@@ -91,10 +96,17 @@
     void* result = bmalloc::api::tryMalloc(size, bmalloc::heapKind(kind));
     WTF::compilerFence();
     return result;
 }
 
+void* tryRealloc(Kind kind, void* pointer, size_t size)
+{
+    void* result = bmalloc::api::tryRealloc(pointer, size, bmalloc::heapKind(kind));
+    WTF::compilerFence();
+    return result;
+}
+
 void free(Kind kind, void* p)
 {
     if (!p)
         return;
     RELEASE_ASSERT(isCaged(kind, p));
