diff a/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/InspectorDOMStorageAgent.h b/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/InspectorDOMStorageAgent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/InspectorDOMStorageAgent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/InspectorDOMStorageAgent.h
@@ -39,47 +39,46 @@
 }
 
 namespace WebCore {
 
 class Frame;
-class InspectorPageAgent;
 class Page;
 class SecurityOrigin;
 class Storage;
 
 typedef String ErrorString;
 
 class InspectorDOMStorageAgent final : public InspectorAgentBase, public Inspector::DOMStorageBackendDispatcherHandler {
     WTF_MAKE_NONCOPYABLE(InspectorDOMStorageAgent);
     WTF_MAKE_FAST_ALLOCATED;
 public:
-    InspectorDOMStorageAgent(WebAgentContext&, InspectorPageAgent*);
+    InspectorDOMStorageAgent(PageAgentContext&);
     virtual ~InspectorDOMStorageAgent();
 
-    void didCreateFrontendAndBackend(Inspector::FrontendRouter*, Inspector::BackendDispatcher*) override;
-    void willDestroyFrontendAndBackend(Inspector::DisconnectReason) override;
+    // InspectorAgentBase
+    void didCreateFrontendAndBackend(Inspector::FrontendRouter*, Inspector::BackendDispatcher*);
+    void willDestroyFrontendAndBackend(Inspector::DisconnectReason);
 
-    // Called from the front-end.
-    void enable(ErrorString&) override;
-    void disable(ErrorString&) override;
-    void getDOMStorageItems(ErrorString&, const JSON::Object& storageId, RefPtr<JSON::ArrayOf<JSON::ArrayOf<String>>>& items) override;
-    void setDOMStorageItem(ErrorString&, const JSON::Object& storageId, const String& key, const String& value) override;
-    void removeDOMStorageItem(ErrorString&, const JSON::Object& storageId, const String& key) override;
-
-    // Called from the injected script.
-    String storageId(Storage&);
-    RefPtr<Inspector::Protocol::DOMStorage::StorageId> storageId(SecurityOrigin*, bool isLocalStorage);
+    // DOMStorageBackendDispatcherHandler
+    void enable(ErrorString&);
+    void disable(ErrorString&);
+    void getDOMStorageItems(ErrorString&, const JSON::Object& storageId, RefPtr<JSON::ArrayOf<JSON::ArrayOf<String>>>& items);
+    void setDOMStorageItem(ErrorString&, const JSON::Object& storageId, const String& key, const String& value);
+    void removeDOMStorageItem(ErrorString&, const JSON::Object& storageId, const String& key);
 
     // InspectorInstrumentation
     void didDispatchDOMStorageEvent(const String& key, const String& oldValue, const String& newValue, StorageType, SecurityOrigin*);
 
+    // CommandLineAPI
+    static String storageId(Storage&);
+    static RefPtr<Inspector::Protocol::DOMStorage::StorageId> storageId(SecurityOrigin*, bool isLocalStorage);
+
 private:
     RefPtr<StorageArea> findStorageArea(ErrorString&, const JSON::Object&, Frame*&);
 
     std::unique_ptr<Inspector::DOMStorageFrontendDispatcher> m_frontendDispatcher;
     RefPtr<Inspector::DOMStorageBackendDispatcher> m_backendDispatcher;
-    InspectorPageAgent* m_pageAgent { nullptr };
 
-    bool m_enabled { false };
+    Page& m_inspectedPage;
 };
 
 } // namespace WebCore
