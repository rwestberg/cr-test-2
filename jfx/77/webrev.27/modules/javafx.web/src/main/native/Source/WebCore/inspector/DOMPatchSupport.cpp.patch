diff a/modules/javafx.web/src/main/native/Source/WebCore/inspector/DOMPatchSupport.cpp b/modules/javafx.web/src/main/native/Source/WebCore/inspector/DOMPatchSupport.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/inspector/DOMPatchSupport.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/inspector/DOMPatchSupport.cpp
@@ -74,15 +74,15 @@
 
 void DOMPatchSupport::patchDocument(const String& markup)
 {
     RefPtr<Document> newDocument;
     if (m_document.isHTMLDocument())
-        newDocument = HTMLDocument::create(nullptr, URL());
+        newDocument = HTMLDocument::create(m_document.sessionID(), nullptr, URL());
     else if (m_document.isXHTMLDocument())
-        newDocument = XMLDocument::createXHTML(nullptr, URL());
+        newDocument = XMLDocument::createXHTML(m_document.sessionID(), nullptr, URL());
     else if (m_document.isSVGDocument())
-        newDocument = XMLDocument::create(nullptr, URL());
+        newDocument = XMLDocument::create(m_document.sessionID(), nullptr, URL());
 
     ASSERT(newDocument);
     RefPtr<DocumentParser> parser;
     if (newDocument->isHTMLDocument())
         parser = HTMLDocumentParser::create(static_cast<HTMLDocument&>(*newDocument));
@@ -400,11 +400,11 @@
     sha1.addBytes(reinterpret_cast<const uint8_t*>(cString.data()), cString.length());
 }
 
 std::unique_ptr<DOMPatchSupport::Digest> DOMPatchSupport::createDigest(Node& node, UnusedNodesMap* unusedNodesMap)
 {
-    auto digest = std::make_unique<Digest>();
+    auto digest = makeUnique<Digest>();
     digest->node = &node;
     SHA1 sha1;
 
     auto nodeType = node.nodeType();
     sha1.addBytes(reinterpret_cast<const uint8_t*>(&nodeType), sizeof(nodeType));
