diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/HandleSet.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/HandleSet.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/HandleSet.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/HandleSet.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2011, 2016 Apple Inc. All rights reserved.
+ * Copyright (C) 2011-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -63,14 +63,14 @@
 class HandleSet {
     friend class HandleBlock;
 public:
     static HandleSet* heapFor(HandleSlot);
 
-    HandleSet(VM*);
+    HandleSet(VM&);
     ~HandleSet();
 
-    VM* vm();
+    VM& vm();
 
     HandleSlot allocate();
     void deallocate(HandleSlot);
 
     void visitStrongHandles(SlotVisitor&);
@@ -90,11 +90,11 @@
 
 #if ENABLE(GC_VALIDATION) || !ASSERT_DISABLED
     bool isLiveNode(Node*);
 #endif
 
-    VM* m_vm;
+    VM& m_vm;
     DoublyLinkedList<HandleBlock> m_blockList;
 
     SentinelLinkedList<Node> m_strongList;
     SentinelLinkedList<Node> m_immediateList;
     SinglyLinkedList<Node> m_freeList;
@@ -103,11 +103,11 @@
 inline HandleSet* HandleSet::heapFor(HandleSlot handle)
 {
     return toNode(handle)->handleSet();
 }
 
-inline VM* HandleSet::vm()
+inline VM& HandleSet::vm()
 {
     return m_vm;
 }
 
 inline HandleSlot HandleSet::toHandle(HandleSet::Node* node)
