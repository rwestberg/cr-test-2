diff a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSDOMWindowProperties.cpp b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSDOMWindowProperties.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSDOMWindowProperties.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSDOMWindowProperties.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2016 Apple Inc. All rights reserved.
+ * Copyright (C) 2016-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -46,11 +46,11 @@
     // Check for child frames by name before built-in properties to match Mozilla. This does
     // not match IE, but some sites end up naming frames things that conflict with window
     // properties that are in Moz but not IE. Since we have some of these, we have to do it
     // the Moz way.
     if (auto* frame = window.frame()) {
-        if (auto* scopedChild = frame->tree().scopedChild(propertyNameToAtomicString(propertyName))) {
+        if (auto* scopedChild = frame->tree().scopedChild(propertyNameToAtomString(propertyName))) {
             slot.setValue(thisObject, JSC::PropertyAttribute::ReadOnly | JSC::PropertyAttribute::DontDelete | JSC::PropertyAttribute::DontEnum, toJS(exec, scopedChild->document()->domWindow()));
             return true;
         }
     }
 
@@ -102,9 +102,10 @@
     return jsDOMWindowPropertiesGetOwnPropertySlotNamedItemGetter(thisObject, window, state, propertyName, slot);
 }
 
 bool JSDOMWindowProperties::getOwnPropertySlotByIndex(JSObject* object, ExecState* state, unsigned index, PropertySlot& slot)
 {
-    return getOwnPropertySlot(object, state, Identifier::from(state, index), slot);
+    VM& vm = state->vm();
+    return getOwnPropertySlot(object, state, Identifier::from(vm, index), slot);
 }
 
 } // namespace WebCore
