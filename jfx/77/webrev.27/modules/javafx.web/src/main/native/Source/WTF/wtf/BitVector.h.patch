diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/BitVector.h b/modules/javafx.web/src/main/native/Source/WTF/wtf/BitVector.h
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/BitVector.h
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/BitVector.h
@@ -58,11 +58,12 @@
 // On the other hand, this BitVector class may not be the fastest around, since
 // it does conditionals on every get/set/clear. But it is great if you need to
 // juggle a lot of variable-length BitVectors and you're worried about wasting
 // space.
 
-class BitVector {
+class BitVector final {
+    WTF_MAKE_FAST_ALLOCATED;
 public:
     BitVector()
         : m_bitsOrPointer(makeInlineBits(0))
     {
     }
@@ -234,10 +235,17 @@
         if (isInline())
             return bitCount(cleanseInlineBits(m_bitsOrPointer));
         return bitCountSlow();
     }
 
+    bool isEmpty() const
+    {
+        if (isInline())
+            return !cleanseInlineBits(m_bitsOrPointer);
+        return isEmptySlow();
+    }
+
     size_t findBit(size_t index, bool value) const
     {
         size_t result = findBitFast(index, value);
         if (!ASSERT_DISABLED) {
             size_t expectedResult = findBitSimple(index, value);
@@ -288,10 +296,11 @@
             value = hashSlowCase();
         return IntHash<uintptr_t>::hash(value);
     }
 
     class iterator {
+        WTF_MAKE_FAST_ALLOCATED;
     public:
         iterator()
             : m_bitVector(nullptr)
             , m_index(0)
         {
@@ -451,10 +460,11 @@
     WTF_EXPORT_PRIVATE void mergeSlow(const BitVector& other);
     WTF_EXPORT_PRIVATE void filterSlow(const BitVector& other);
     WTF_EXPORT_PRIVATE void excludeSlow(const BitVector& other);
 
     WTF_EXPORT_PRIVATE size_t bitCountSlow() const;
+    WTF_EXPORT_PRIVATE bool isEmptySlow() const;
 
     WTF_EXPORT_PRIVATE bool equalsSlowCase(const BitVector& other) const;
     bool equalsSlowCaseFast(const BitVector& other) const;
     bool equalsSlowCaseSimple(const BitVector& other) const;
     WTF_EXPORT_PRIVATE uintptr_t hashSlowCase() const;
