diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediarecorder/BlobEvent.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediarecorder/BlobEvent.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediarecorder/BlobEvent.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediarecorder/BlobEvent.cpp
@@ -30,27 +30,27 @@
 
 #include "Blob.h"
 
 namespace WebCore {
 
-Ref<BlobEvent> BlobEvent::create(const AtomicString& type, Init&& init, IsTrusted isTrusted)
+Ref<BlobEvent> BlobEvent::create(const AtomString& type, Init&& init, IsTrusted isTrusted)
 {
     return adoptRef(*new BlobEvent(type, WTFMove(init), isTrusted));
 }
 
-Ref<BlobEvent> BlobEvent::create(const AtomicString& type, CanBubble canBubble, IsCancelable isCancelable, Ref<Blob>&& data)
+Ref<BlobEvent> BlobEvent::create(const AtomString& type, CanBubble canBubble, IsCancelable isCancelable, Ref<Blob>&& data)
 {
     return adoptRef(*new BlobEvent(type, canBubble, isCancelable, WTFMove(data)));
 }
 
-BlobEvent::BlobEvent(const AtomicString& type, Init&& init, IsTrusted isTrusted)
+BlobEvent::BlobEvent(const AtomString& type, Init&& init, IsTrusted isTrusted)
     : Event(type, init, isTrusted)
     , m_blob(init.data.releaseNonNull())
 {
 }
 
-BlobEvent::BlobEvent(const AtomicString& type, CanBubble canBubble, IsCancelable isCancelable, Ref<Blob>&& data)
+BlobEvent::BlobEvent(const AtomString& type, CanBubble canBubble, IsCancelable isCancelable, Ref<Blob>&& data)
     : Event(type, canBubble, isCancelable)
     , m_blob(WTFMove(data))
 {
 }
 
