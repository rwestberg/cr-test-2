diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/fetch/FetchBody.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/fetch/FetchBody.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/fetch/FetchBody.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/fetch/FetchBody.h
@@ -27,10 +27,11 @@
  */
 
 #pragma once
 
 #include "DOMFormData.h"
+#include "ExceptionOr.h"
 #include "FetchBodyConsumer.h"
 #include "FormData.h"
 #include "JSDOMPromiseDeferred.h"
 #include "ReadableStream.h"
 #include "URLSearchParams.h"
@@ -53,14 +54,14 @@
 #if ENABLE(STREAMS_API)
     void consumeAsStream(FetchBodyOwner&, FetchBodySource&);
 #endif
 
     using Init = Variant<RefPtr<Blob>, RefPtr<ArrayBufferView>, RefPtr<ArrayBuffer>, RefPtr<DOMFormData>, RefPtr<URLSearchParams>, RefPtr<ReadableStream>, String>;
-    static FetchBody extract(ScriptExecutionContext&, Init&&, String&);
+    static ExceptionOr<FetchBody> extract(Init&&, String&);
     FetchBody() = default;
 
-    WEBCORE_EXPORT static Optional<FetchBody> fromFormData(FormData&);
+    WEBCORE_EXPORT static Optional<FetchBody> fromFormData(PAL::SessionID, FormData&);
 
     void loadingFailed(const Exception&);
     void loadingSucceeded();
 
     RefPtr<FormData> bodyAsFormData(ScriptExecutionContext&) const;
