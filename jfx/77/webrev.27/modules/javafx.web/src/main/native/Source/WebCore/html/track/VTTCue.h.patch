diff a/modules/javafx.web/src/main/native/Source/WebCore/html/track/VTTCue.h b/modules/javafx.web/src/main/native/Source/WebCore/html/track/VTTCue.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/track/VTTCue.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/track/VTTCue.h
@@ -33,10 +33,11 @@
 
 #if ENABLE(VIDEO_TRACK)
 
 #include "HTMLElement.h"
 #include "TextTrackCue.h"
+#include <wtf/TypeCasts.h>
 
 namespace WebCore {
 
 class DocumentFragment;
 class HTMLDivElement;
@@ -54,11 +55,11 @@
     static Ref<VTTCueBox> create(Document&, VTTCue&);
 
     VTTCue* getCue() const;
     virtual void applyCSSProperties(const IntSize& videoSize);
 
-    static const AtomicString& vttCueBoxShadowPseudoId();
+    static const AtomString& vttCueBoxShadowPseudoId();
     void setFontSizeFromCaptionUserPrefs(int fontSize) { m_fontSizeFromCaptionUserPrefs = fontSize; }
 
 protected:
     VTTCueBox(Document&, VTTCue&);
 
@@ -72,10 +73,11 @@
 };
 
 // ----------------------------
 
 class VTTCue : public TextTrackCue, public CanMakeWeakPtr<VTTCue> {
+    WTF_MAKE_ISO_ALLOCATED(VTTCue);
 public:
     static Ref<VTTCue> create(ScriptExecutionContext& context, double start, double end, const String& content)
     {
         return create(context, MediaTime::createWithDouble(start), MediaTime::createWithDouble(end), content);
     }
@@ -85,11 +87,11 @@
         return adoptRef(*new VTTCue(context, start, end, content));
     }
 
     static Ref<VTTCue> create(ScriptExecutionContext&, const WebVTTCueData&);
 
-    static const AtomicString& cueBackdropShadowPseudoId();
+    static const AtomString& cueBackdropShadowPseudoId();
 
     virtual ~VTTCue();
 
     enum AutoKeyword {
         Auto
@@ -258,6 +260,10 @@
     }
 };
 
 } // namespace WTF
 
+SPECIALIZE_TYPE_TRAITS_BEGIN(WebCore::VTTCue)
+    static bool isType(const WebCore::TextTrackCue& cue) { return cue.isRenderable(); }
+SPECIALIZE_TYPE_TRAITS_END()
+
 #endif
