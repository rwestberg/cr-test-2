diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/ListHashSet.h b/modules/javafx.web/src/main/native/Source/WTF/wtf/ListHashSet.h
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/ListHashSet.h
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/ListHashSet.h
@@ -43,11 +43,11 @@
 template<typename ValueArg> struct ListHashSetNode;
 
 template<typename HashArg> struct ListHashSetNodeHashFunctions;
 template<typename HashArg> struct ListHashSetTranslator;
 
-template<typename ValueArg, typename HashArg = typename DefaultHash<ValueArg>::Hash> class ListHashSet {
+template<typename ValueArg, typename HashArg = typename DefaultHash<ValueArg>::Hash> class ListHashSet final {
     WTF_MAKE_FAST_ALLOCATED;
 private:
     typedef ListHashSetNode<ValueArg> Node;
 
     typedef HashTraits<Node*> NodeTraits;
@@ -183,10 +183,11 @@
     template<typename T> static bool equal(const T& a, const T& b) { return HashArg::equal(a->m_value, b->m_value); }
     static const bool safeToCompareToEmptyOrDeleted = false;
 };
 
 template<typename ValueArg, typename HashArg> class ListHashSetIterator {
+    WTF_MAKE_FAST_ALLOCATED;
 private:
     typedef ListHashSet<ValueArg, HashArg> ListHashSetType;
     typedef ListHashSetIterator<ValueArg, HashArg> iterator;
     typedef ListHashSetConstIterator<ValueArg, HashArg> const_iterator;
     typedef ListHashSetNode<ValueArg> Node;
@@ -230,10 +231,11 @@
 
     const_iterator m_iterator;
 };
 
 template<typename ValueArg, typename HashArg> class ListHashSetConstIterator {
+    WTF_MAKE_FAST_ALLOCATED;
 private:
     typedef ListHashSet<ValueArg, HashArg> ListHashSetType;
     typedef ListHashSetIterator<ValueArg, HashArg> iterator;
     typedef ListHashSetConstIterator<ValueArg, HashArg> const_iterator;
     typedef ListHashSetNode<ValueArg> Node;
