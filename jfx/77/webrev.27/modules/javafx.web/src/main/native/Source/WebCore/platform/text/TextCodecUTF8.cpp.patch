diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/text/TextCodecUTF8.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/text/TextCodecUTF8.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/text/TextCodecUTF8.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/text/TextCodecUTF8.cpp
@@ -55,11 +55,11 @@
 }
 
 void TextCodecUTF8::registerCodecs(TextCodecRegistrar registrar)
 {
     registrar("UTF-8", [] {
-        return std::make_unique<TextCodecUTF8>();
+        return makeUnique<TextCodecUTF8>();
     });
 }
 
 static inline int nonASCIISequenceLength(uint8_t firstByte)
 {
@@ -206,11 +206,11 @@
             memcpy(m_partialSequence + m_partialSequenceSize, source, count - m_partialSequenceSize);
             source += count - m_partialSequenceSize;
             m_partialSequenceSize = count;
         }
         int character = decodeNonASCIISequence(m_partialSequence, count);
-        if (character == nonCharacter || character > 0xFF)
+        if (!isLatin1(character))
             return true;
 
         m_partialSequenceSize -= count;
         *destination++ = character;
     } while (m_partialSequenceSize);
@@ -343,11 +343,11 @@
                 if (stopOnError)
                     break;
 
                 goto upConvertTo16Bit;
             }
-            if (character > 0xFF)
+            if (!isLatin1(character))
                 goto upConvertTo16Bit;
 
             source += count;
             *destination++ = character;
         }
