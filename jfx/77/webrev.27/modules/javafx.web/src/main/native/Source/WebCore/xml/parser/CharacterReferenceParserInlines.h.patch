diff a/modules/javafx.web/src/main/native/Source/WebCore/xml/parser/CharacterReferenceParserInlines.h b/modules/javafx.web/src/main/native/Source/WebCore/xml/parser/CharacterReferenceParserInlines.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/xml/parser/CharacterReferenceParserInlines.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/xml/parser/CharacterReferenceParserInlines.h
@@ -109,15 +109,15 @@
                     overflow = true;
                 break;
             }
             if (character == ';') {
                 source.advancePastNonNewline();
-                decodedCharacter.append(ParserFunctions::legalEntityFor(overflow ? 0 : result));
+                decodedCharacter.appendCharacter(ParserFunctions::legalEntityFor(overflow ? 0 : result));
                 return true;
             }
             if (ParserFunctions::acceptMalformed()) {
-                decodedCharacter.append(ParserFunctions::legalEntityFor(overflow ? 0 : result));
+                decodedCharacter.appendCharacter(ParserFunctions::legalEntityFor(overflow ? 0 : result));
                 return true;
             }
             unconsumeCharacters(source, consumedCharacters);
             return false;
         case Decimal:
@@ -128,15 +128,15 @@
                     overflow = true;
                 break;
             }
             if (character == ';') {
                 source.advancePastNonNewline();
-                decodedCharacter.append(ParserFunctions::legalEntityFor(overflow ? 0 : result));
+                decodedCharacter.appendCharacter(ParserFunctions::legalEntityFor(overflow ? 0 : result));
                 return true;
             }
             if (ParserFunctions::acceptMalformed()) {
-                decodedCharacter.append(ParserFunctions::legalEntityFor(overflow ? 0 : result));
+                decodedCharacter.appendCharacter(ParserFunctions::legalEntityFor(overflow ? 0 : result));
                 return true;
             }
             unconsumeCharacters(source, consumedCharacters);
             return false;
         case Named:
