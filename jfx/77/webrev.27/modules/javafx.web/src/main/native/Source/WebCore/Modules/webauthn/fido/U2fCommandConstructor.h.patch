diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/fido/U2fCommandConstructor.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/fido/U2fCommandConstructor.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/fido/U2fCommandConstructor.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/fido/U2fCommandConstructor.h
@@ -30,11 +30,10 @@
 #pragma once
 
 #if ENABLE(WEB_AUTHN)
 
 #include <wtf/Forward.h>
-#include <wtf/Optional.h>
 
 namespace WebCore {
 struct PublicKeyCredentialCreationOptions;
 struct PublicKeyCredentialDescriptor;
 struct PublicKeyCredentialRequestOptions;
@@ -61,11 +60,11 @@
 // PublicKeyCredentialCreationOptions. Invoked when U2F register operation includes key
 // handles in exclude list.
 WEBCORE_EXPORT Optional<Vector<uint8_t>> convertToU2fCheckOnlySignCommand(const Vector<uint8_t>& clientDataHash, const WebCore::PublicKeyCredentialCreationOptions&, const WebCore::PublicKeyCredentialDescriptor&);
 
 // Extracts APDU encoded U2F sign command from PublicKeyCredentialRequestOptions.
-WEBCORE_EXPORT Optional<Vector<uint8_t>> convertToU2fSignCommand(const Vector<uint8_t>& clientDataHash, const WebCore::PublicKeyCredentialRequestOptions&, const Vector<uint8_t>& keyHandle, bool checkOnly = false);
+WEBCORE_EXPORT Optional<Vector<uint8_t>> convertToU2fSignCommand(const Vector<uint8_t>& clientDataHash, const WebCore::PublicKeyCredentialRequestOptions&, const Vector<uint8_t>& keyHandle, bool isAppId = false);
 
 WEBCORE_EXPORT Vector<uint8_t> constructBogusU2fRegistrationCommand();
 
 } // namespace fido
 
