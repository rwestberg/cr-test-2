diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/displaylists/DisplayListRecorder.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/displaylists/DisplayListRecorder.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/displaylists/DisplayListRecorder.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/displaylists/DisplayListRecorder.cpp
@@ -124,21 +124,21 @@
     DrawingItem& newItem = downcast<DrawingItem>(appendItem(DrawTiledScaledImage::create(image, destination, source, tileScaleFactor, hRule, vRule, imagePaintingOptions)));
     updateItemExtent(newItem);
     return ImageDrawResult::DidRecord;
 }
 
-#if USE(CG) || USE(CAIRO)
-void Recorder::drawNativeImage(const NativeImagePtr& image, const FloatSize& imageSize, const FloatRect& destRect, const FloatRect& srcRect, CompositeOperator op, BlendMode blendMode, ImageOrientation orientation)
+#if USE(CG) || USE(CAIRO) || USE(DIRECT2D)
+void Recorder::drawNativeImage(const NativeImagePtr& image, const FloatSize& imageSize, const FloatRect& destRect, const FloatRect& srcRect, const ImagePaintingOptions& options)
 {
-    DrawingItem& newItem = downcast<DrawingItem>(appendItem(DrawNativeImage::create(image, imageSize, destRect, srcRect, op, blendMode, orientation)));
+    DrawingItem& newItem = downcast<DrawingItem>(appendItem(DrawNativeImage::create(image, imageSize, destRect, srcRect, options)));
     updateItemExtent(newItem);
 }
 #endif
 
-void Recorder::drawPattern(Image& image, const FloatRect& destRect, const FloatRect& tileRect, const AffineTransform& patternTransform, const FloatPoint& phase, const FloatSize& spacing, CompositeOperator op, BlendMode blendMode)
+void Recorder::drawPattern(Image& image, const FloatRect& destRect, const FloatRect& tileRect, const AffineTransform& patternTransform, const FloatPoint& phase, const FloatSize& spacing, const ImagePaintingOptions& options)
 {
-    DrawingItem& newItem = downcast<DrawingItem>(appendItem(DrawPattern::create(image, destRect, tileRect, patternTransform, phase, spacing, op, blendMode)));
+    DrawingItem& newItem = downcast<DrawingItem>(appendItem(DrawPattern::create(image, destRect, tileRect, patternTransform, phase, spacing, options)));
     updateItemExtent(newItem);
 }
 
 void Recorder::save()
 {
