diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/gpu/GPUQueue.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/gpu/GPUQueue.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/gpu/GPUQueue.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/gpu/GPUQueue.h
@@ -25,14 +25,16 @@
 
 #pragma once
 
 #if ENABLE(WEBGPU)
 
+#include "DeferrableTask.h"
 #include <wtf/RefCounted.h>
 #include <wtf/RefPtr.h>
 #include <wtf/RetainPtr.h>
 #include <wtf/Vector.h>
+#include <wtf/WeakPtr.h>
 
 OBJC_PROTOCOL(MTLCommandQueue);
 
 namespace WebCore {
 
@@ -42,23 +44,25 @@
 class GPUCommandBuffer;
 class GPUDevice;
 
 class GPUQueue : public RefCounted<GPUQueue> {
 public:
-    static RefPtr<GPUQueue> create(const GPUDevice&);
+    static RefPtr<GPUQueue> tryCreate(const GPUDevice&);
 
     PlatformQueue* platformQueue() const { return m_platformQueue.get(); }
 
-    void submit(Vector<Ref<const GPUCommandBuffer>>&&);
+    void submit(Vector<Ref<GPUCommandBuffer>>&&);
 
     String label() const;
     void setLabel(const String&) const;
 
 private:
-    GPUQueue(PlatformQueueSmartPtr&&);
+    GPUQueue(PlatformQueueSmartPtr&&, const GPUDevice&);
 
     PlatformQueueSmartPtr m_platformQueue;
+    WeakPtr<const GPUDevice> m_device;
+    DeferrableTask<Timer> m_presentTask;
 };
 
 } // namespace WebCore
 
 #endif // ENABLE(WEBGPU)
