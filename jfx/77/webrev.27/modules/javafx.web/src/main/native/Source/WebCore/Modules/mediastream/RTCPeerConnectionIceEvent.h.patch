diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCPeerConnectionIceEvent.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCPeerConnectionIceEvent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCPeerConnectionIceEvent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCPeerConnectionIceEvent.h
@@ -25,11 +25,11 @@
 #pragma once
 
 #if ENABLE(WEB_RTC)
 
 #include "Event.h"
-#include <wtf/text/AtomicString.h>
+#include <wtf/text/AtomString.h>
 
 namespace WebCore {
 class RTCIceCandidate;
 
 class RTCPeerConnectionIceEvent : public Event {
@@ -39,20 +39,20 @@
     struct Init : EventInit {
         RefPtr<RTCIceCandidate> candidate;
         String url;
     };
 
-    static Ref<RTCPeerConnectionIceEvent> create(const AtomicString& type, Init&&);
+    static Ref<RTCPeerConnectionIceEvent> create(const AtomString& type, Init&&);
     static Ref<RTCPeerConnectionIceEvent> create(CanBubble, IsCancelable, RefPtr<RTCIceCandidate>&&, String&& serverURL);
 
     RTCIceCandidate* candidate() const;
     const String& url() const { return m_url; }
 
     virtual EventInterface eventInterface() const;
 
 private:
-    RTCPeerConnectionIceEvent(const AtomicString& type, CanBubble, IsCancelable, RefPtr<RTCIceCandidate>&&, String&& serverURL);
+    RTCPeerConnectionIceEvent(const AtomString& type, CanBubble, IsCancelable, RefPtr<RTCIceCandidate>&&, String&& serverURL);
 
     RefPtr<RTCIceCandidate> m_candidate;
     String m_url;
 };
 
