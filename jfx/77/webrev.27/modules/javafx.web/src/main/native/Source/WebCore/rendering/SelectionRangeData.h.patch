diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/SelectionRangeData.h b/modules/javafx.web/src/main/native/Source/WebCore/rendering/SelectionRangeData.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/SelectionRangeData.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/SelectionRangeData.h
@@ -76,12 +76,13 @@
     void set(const Context&, RepaintMode = RepaintMode::NewXOROld);
     const Context& get() const { return m_selectionContext; }
 
     RenderObject* start() const { return m_selectionContext.start(); }
     RenderObject* end() const { return m_selectionContext.end(); }
-    unsigned startPosition() const { ASSERT(m_selectionContext.startPosition()); return m_selectionContext.startPosition().value(); }
-    unsigned endPosition() const { ASSERT(m_selectionContext.endPosition()); return m_selectionContext.endPosition().value(); }
+
+    unsigned startPosition() const { ASSERT(m_selectionContext.startPosition()); return m_selectionContext.startPosition().valueOr(0); }
+    unsigned endPosition() const { ASSERT(m_selectionContext.endPosition()); return m_selectionContext.endPosition().valueOr(0); }
 
     void clear();
     IntRect bounds() const { return collectBounds(ClipToVisibleContent::No); }
     IntRect boundsClippedToVisibleContent() const { return collectBounds(ClipToVisibleContent::Yes); }
     void repaint() const;
