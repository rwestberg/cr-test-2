diff a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGFEMergeNodeElement.cpp b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGFEMergeNodeElement.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGFEMergeNodeElement.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGFEMergeNodeElement.cpp
@@ -1,9 +1,9 @@
 /*
  * Copyright (C) 2004, 2005 Nikolas Zimmermann <zimmermann@kde.org>
  * Copyright (C) 2004, 2005, 2006 Rob Buis <buis@kde.org>
- * Copyright (C) 2018 Apple Inc. All rights reserved.
+ * Copyright (C) 2018-2019 Apple Inc. All rights reserved.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Library General Public
  * License as published by the Free Software Foundation; either
  * version 2 of the License, or (at your option) any later version.
@@ -34,30 +34,26 @@
 
 inline SVGFEMergeNodeElement::SVGFEMergeNodeElement(const QualifiedName& tagName, Document& document)
     : SVGElement(tagName, document)
 {
     ASSERT(hasTagName(SVGNames::feMergeNodeTag));
-    registerAttributes();
+
+    static std::once_flag onceFlag;
+    std::call_once(onceFlag, [] {
+        PropertyRegistry::registerProperty<SVGNames::inAttr, &SVGFEMergeNodeElement::m_in1>();
+    });
 }
 
 Ref<SVGFEMergeNodeElement> SVGFEMergeNodeElement::create(const QualifiedName& tagName, Document& document)
 {
     return adoptRef(*new SVGFEMergeNodeElement(tagName, document));
 }
 
-void SVGFEMergeNodeElement::registerAttributes()
-{
-    auto& registry = attributeRegistry();
-    if (!registry.isEmpty())
-        return;
-    registry.registerAttribute<SVGNames::inAttr, &SVGFEMergeNodeElement::m_in1>();
-}
-
-void SVGFEMergeNodeElement::parseAttribute(const QualifiedName& name, const AtomicString& value)
+void SVGFEMergeNodeElement::parseAttribute(const QualifiedName& name, const AtomString& value)
 {
     if (name == SVGNames::inAttr) {
-        m_in1.setValue(value);
+        m_in1->setBaseValInternal(value);
         return;
     }
 
     SVGElement::parseAttribute(name, value);
 }
