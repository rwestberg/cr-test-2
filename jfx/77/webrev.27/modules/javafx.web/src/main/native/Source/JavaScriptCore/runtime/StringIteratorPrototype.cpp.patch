diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/StringIteratorPrototype.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/StringIteratorPrototype.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/StringIteratorPrototype.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/StringIteratorPrototype.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2013 Apple, Inc. All rights reserved.
+ * Copyright (C) 2013-2019 Apple, Inc. All rights reserved.
  * Copyright (C) 2015 Yusuke Suzuki <utatane.tea@gmail.com>.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
@@ -25,31 +25,24 @@
  */
 
 #include "config.h"
 #include "StringIteratorPrototype.h"
 
+#include "JSCBuiltins.h"
 #include "JSCInlines.h"
 #include "JSGlobalObject.h"
 #include "JSStringIterator.h"
 #include "ObjectConstructor.h"
 
-#include "StringIteratorPrototype.lut.h"
-
 namespace JSC {
 
-const ClassInfo StringIteratorPrototype::s_info = { "String Iterator", &Base::s_info, &stringIteratorPrototypeTable, nullptr, CREATE_METHOD_TABLE(StringIteratorPrototype) };
-
-/* Source for StringIteratorPrototype.lut.h
-@begin stringIteratorPrototypeTable
-  next      JSBuiltin    DontEnum|Function 0
-@end
-*/
+const ClassInfo StringIteratorPrototype::s_info = { "String Iterator", &Base::s_info, nullptr, nullptr, CREATE_METHOD_TABLE(StringIteratorPrototype) };
 
-void StringIteratorPrototype::finishCreation(VM& vm, JSGlobalObject*)
+void StringIteratorPrototype::finishCreation(VM& vm, JSGlobalObject* globalObject)
 {
     Base::finishCreation(vm);
     ASSERT(inherits(vm, info()));
-    putDirectWithoutTransition(vm, vm.propertyNames->toStringTagSymbol, jsString(&vm, "String Iterator"), PropertyAttribute::DontEnum | PropertyAttribute::ReadOnly);
-    didBecomePrototype();
+    putDirectWithoutTransition(vm, vm.propertyNames->toStringTagSymbol, jsString(vm, "String Iterator"), PropertyAttribute::DontEnum | PropertyAttribute::ReadOnly);
+    JSC_BUILTIN_FUNCTION_WITHOUT_TRANSITION(vm.propertyNames->next, stringIteratorPrototypeNextCodeGenerator, static_cast<unsigned>(PropertyAttribute::DontEnum));
 }
 
 } // namespace JSC
