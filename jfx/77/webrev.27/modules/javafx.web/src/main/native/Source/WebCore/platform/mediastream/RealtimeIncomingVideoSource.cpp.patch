diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/RealtimeIncomingVideoSource.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/RealtimeIncomingVideoSource.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/RealtimeIncomingVideoSource.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/RealtimeIncomingVideoSource.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2017 Apple Inc. All rights reserved.
+ * Copyright (C) 2017-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  *
@@ -31,21 +31,15 @@
 #include "config.h"
 #include "RealtimeIncomingVideoSource.h"
 
 #if USE(LIBWEBRTC)
 
-#include "Logging.h"
-#include <wtf/CryptographicallyRandomNumber.h>
-
 namespace WebCore {
 
 RealtimeIncomingVideoSource::RealtimeIncomingVideoSource(rtc::scoped_refptr<webrtc::VideoTrackInterface>&& videoTrack, String&& videoTrackId)
     : RealtimeMediaSource(Type::Video, "remote video"_s, WTFMove(videoTrackId))
     , m_videoTrack(WTFMove(videoTrack))
-#if !RELEASE_LOG_DISABLED
-    , m_logIdentifier(reinterpret_cast<const void*>(cryptographicallyRandomNumber()))
-#endif
 {
     notifyMutedChange(!m_videoTrack);
 
     RealtimeMediaSourceSupportedConstraints constraints;
     constraints.setSupportsWidth(true);
@@ -106,22 +100,8 @@
 {
     if (settings.containsAny({ RealtimeMediaSourceSettings::Flag::Width, RealtimeMediaSourceSettings::Flag::Height }))
         m_currentSettings = WTF::nullopt;
 }
 
-#if !RELEASE_LOG_DISABLED
-WTFLogChannel& RealtimeIncomingVideoSource::logChannel() const
-{
-    return LogWebRTC;
-}
-
-const Logger& RealtimeIncomingVideoSource::logger() const
-{
-    if (!m_logger)
-        m_logger = Logger::create(this);
-    return *m_logger;
-}
-#endif
-
 } // namespace WebCore
 
 #endif // USE(LIBWEBRTC)
