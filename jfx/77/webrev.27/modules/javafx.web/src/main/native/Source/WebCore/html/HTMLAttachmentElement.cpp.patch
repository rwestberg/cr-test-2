diff a/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLAttachmentElement.cpp b/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLAttachmentElement.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLAttachmentElement.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLAttachmentElement.cpp
@@ -154,11 +154,11 @@
 bool HTMLAttachmentElement::hasEnclosingImage() const
 {
     return is<HTMLImageElement>(shadowHost());
 }
 
-void HTMLAttachmentElement::parseAttribute(const QualifiedName& name, const AtomicString& value)
+void HTMLAttachmentElement::parseAttribute(const QualifiedName& name, const AtomString& value)
 {
     if (name == progressAttr || name == subtitleAttr || name == titleAttr || name == typeAttr) {
         if (auto* renderer = this->renderer())
             renderer->invalidate();
     }
@@ -244,11 +244,11 @@
 #endif
 
     if (!mimeTypeIsSuitableForInlineImageAttachment(mimeType))
         return;
 
-    hostElement->setAttributeWithoutSynchronization(HTMLNames::srcAttr, DOMURL::createObjectURL(document(), Blob::create(WTFMove(data), mimeType)));
+    hostElement->setAttributeWithoutSynchronization(HTMLNames::srcAttr, DOMURL::createObjectURL(document(), Blob::create(document().sessionID(), WTFMove(data), mimeType)));
 }
 
 } // namespace WebCore
 
 #endif // ENABLE(ATTACHMENT_ELEMENT)
