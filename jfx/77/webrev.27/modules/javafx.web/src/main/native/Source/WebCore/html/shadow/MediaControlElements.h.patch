diff a/modules/javafx.web/src/main/native/Source/WebCore/html/shadow/MediaControlElements.h b/modules/javafx.web/src/main/native/Source/WebCore/html/shadow/MediaControlElements.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/shadow/MediaControlElements.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/shadow/MediaControlElements.h
@@ -31,10 +31,11 @@
 
 #if ENABLE(VIDEO)
 
 #include "MediaControlElementTypes.h"
 #include "TextTrackRepresentation.h"
+#include <wtf/LoggerHelper.h>
 
 namespace WebCore {
 
 // ----------------------------
 
@@ -464,11 +465,17 @@
 
 // ----------------------------
 
 #if ENABLE(VIDEO_TRACK)
 
-class MediaControlTextTrackContainerElement final : public MediaControlDivElement, public TextTrackRepresentationClient {
+class MediaControlTextTrackContainerElement final
+    : public MediaControlDivElement
+    , public TextTrackRepresentationClient
+#if !RELEASE_LOG_DISABLED
+    , private LoggerHelper
+#endif
+{
     WTF_MAKE_ISO_ALLOCATED(MediaControlTextTrackContainerElement);
 public:
     static Ref<MediaControlTextTrackContainerElement> create(Document&);
 
     void updateDisplay();
@@ -479,10 +486,17 @@
 private:
     void updateTimerFired();
     void updateActiveCuesFontSize();
     void updateTextStrokeStyle();
 
+#if !RELEASE_LOG_DISABLED
+    const Logger& logger() const final;
+    const void* logIdentifier() const final;
+    WTFLogChannel& logChannel() const final;
+    const char* logClassName() const final { return "MediaControlTextTrackContainerElement"; }
+#endif
+
     explicit MediaControlTextTrackContainerElement(Document&);
 
     RenderPtr<RenderElement> createElementRenderer(RenderStyle&&, const RenderTreePosition&) override;
 
     RefPtr<Image> createTextTrackRepresentationImage() override;
