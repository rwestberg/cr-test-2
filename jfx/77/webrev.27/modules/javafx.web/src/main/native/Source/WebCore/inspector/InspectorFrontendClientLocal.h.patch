diff a/modules/javafx.web/src/main/native/Source/WebCore/inspector/InspectorFrontendClientLocal.h b/modules/javafx.web/src/main/native/Source/WebCore/inspector/InspectorFrontendClientLocal.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/inspector/InspectorFrontendClientLocal.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/inspector/InspectorFrontendClientLocal.h
@@ -36,10 +36,11 @@
 #include <wtf/Noncopyable.h>
 #include <wtf/text/WTFString.h>
 
 namespace WebCore {
 
+class FloatRect;
 class Frame;
 class InspectorController;
 class InspectorBackendDispatchTask;
 class InspectorFrontendHost;
 class Page;
@@ -47,20 +48,24 @@
 class InspectorFrontendClientLocal : public InspectorFrontendClient {
     WTF_MAKE_NONCOPYABLE(InspectorFrontendClientLocal);
     WTF_MAKE_FAST_ALLOCATED;
 public:
     class WEBCORE_EXPORT Settings {
+        WTF_MAKE_FAST_ALLOCATED;
     public:
         Settings() = default;
         virtual ~Settings() = default;
         virtual String getProperty(const String& name);
         virtual void setProperty(const String& name, const String& value);
+        virtual void deleteProperty(const String& name);
     };
 
     WEBCORE_EXPORT InspectorFrontendClientLocal(InspectorController* inspectedPageController, Page* frontendPage, std::unique_ptr<Settings>);
     WEBCORE_EXPORT virtual ~InspectorFrontendClientLocal();
 
+    WEBCORE_EXPORT void resetState() override;
+
     WEBCORE_EXPORT void windowObjectCleared() final;
     WEBCORE_EXPORT void frontendLoaded() override;
 
     void startWindowDrag() override { }
     WEBCORE_EXPORT void moveWindowBy(float x, float y) final;
@@ -68,10 +73,11 @@
     WEBCORE_EXPORT UserInterfaceLayoutDirection userInterfaceLayoutDirection() const final;
 
     WEBCORE_EXPORT void requestSetDockSide(DockSide) final;
     WEBCORE_EXPORT void changeAttachedWindowHeight(unsigned) final;
     WEBCORE_EXPORT void changeAttachedWindowWidth(unsigned) final;
+    WEBCORE_EXPORT void changeSheetRect(const FloatRect&) final;
     WEBCORE_EXPORT void openInNewTab(const String& url) final;
     bool canSave()  override { return false; }
     void save(const String&, const String&, bool, bool) override { }
     void append(const String&, const String&) override { }
 
@@ -109,15 +115,22 @@
 
     WEBCORE_EXPORT void setAttachedWindow(DockSide);
 
     WEBCORE_EXPORT Page* inspectedPage() const;
     Page* frontendPage() const { return m_frontendPage; }
+
+    WEBCORE_EXPORT void dispatch(const String& signature);
+    WEBCORE_EXPORT void dispatchMessage(const String& messageObject);
+    WEBCORE_EXPORT void dispatchMessageAsync(const String& messageObject);
+
 protected:
     virtual void setAttachedWindowHeight(unsigned) = 0;
     virtual void setAttachedWindowWidth(unsigned) = 0;
     WEBCORE_EXPORT void restoreAttachedWindowHeight();
 
+    virtual void setSheetRect(const WebCore::FloatRect&) = 0;
+
 private:
     bool evaluateAsBoolean(const String& expression);
     void evaluateOnLoad(const String& expression);
 
     friend class FrontendMenuProvider;
