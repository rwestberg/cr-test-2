diff a/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/WebHeapAgent.h b/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/WebHeapAgent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/WebHeapAgent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/WebHeapAgent.h
@@ -23,10 +23,11 @@
  * THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 #pragma once
 
+#include "InspectorWebAgentBase.h"
 #include <JavaScriptCore/InspectorHeapAgent.h>
 #include <wtf/Forward.h>
 
 namespace WebCore {
 
@@ -37,19 +38,22 @@
 class WebHeapAgent : public Inspector::InspectorHeapAgent {
     WTF_MAKE_NONCOPYABLE(WebHeapAgent);
     WTF_MAKE_FAST_ALLOCATED;
     friend class SendGarbageCollectionEventsTask;
 public:
-    WebHeapAgent(Inspector::AgentContext&);
+    WebHeapAgent(WebAgentContext&);
     virtual ~WebHeapAgent();
 
-protected:
+    // HeapBackendDispatcherHandler
+    void enable(ErrorString&) override;
     void disable(ErrorString&) override;
 
-    void dispatchGarbageCollectedEvent(Inspector::Protocol::Heap::GarbageCollection::Type, Seconds startTime, Seconds endTime) override;
-
+protected:
+    void dispatchGarbageCollectedEvent(Inspector::Protocol::Heap::GarbageCollection::Type, Seconds startTime, Seconds endTime) final;
     void dispatchGarbageCollectionEventsAfterDelay(Vector<GarbageCollectionData>&& collections);
 
+    InstrumentingAgents& m_instrumentingAgents;
+
     std::unique_ptr<SendGarbageCollectionEventsTask> m_sendGarbageCollectionEventsTask;
 };
 
 } // namespace WebCore
