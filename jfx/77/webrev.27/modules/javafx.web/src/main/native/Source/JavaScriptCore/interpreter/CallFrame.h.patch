diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/interpreter/CallFrame.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/interpreter/CallFrame.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/interpreter/CallFrame.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/interpreter/CallFrame.h
@@ -269,12 +269,12 @@
         {
             return callerFrameAndPC().callerFrame == noCaller() && callerFrameAndPC().returnPC == nullptr;
         }
 
         void convertToStackOverflowFrame(VM&, CodeBlock* codeBlockToKeepAliveUntilFrameIsUnwound);
-        inline bool isStackOverflowFrame() const;
-        inline bool isWasmFrame() const;
+        bool isStackOverflowFrame() const;
+        bool isWasmFrame() const;
 
         void setArgumentCountIncludingThis(int count) { static_cast<Register*>(this)[CallFrameSlot::argumentCount].payload() = count; }
         void setCallee(JSObject* callee) { static_cast<Register*>(this)[CallFrameSlot::callee] = callee; }
         void setCodeBlock(CodeBlock* codeBlock) { static_cast<Register*>(this)[CallFrameSlot::codeBlock] = codeBlock; }
         void setReturnPC(void* value) { callerFrameAndPC().returnPC = reinterpret_cast<const Instruction*>(value); }
