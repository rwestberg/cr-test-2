diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/network/CookieRequestHeaderFieldProxy.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/network/CookieRequestHeaderFieldProxy.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/network/CookieRequestHeaderFieldProxy.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/network/CookieRequestHeaderFieldProxy.h
@@ -24,10 +24,12 @@
  */
 
 #pragma once
 
 #include "CookieJar.h"
+#include "FrameIdentifier.h"
+#include "PageIdentifier.h"
 #include "SameSiteInfo.h"
 #include <pal/SessionID.h>
 #include <wtf/URL.h>
 
 namespace WebCore {
@@ -35,12 +37,12 @@
 struct CookieRequestHeaderFieldProxy {
     PAL::SessionID sessionID;
     URL firstParty;
     SameSiteInfo sameSiteInfo;
     URL url;
-    Optional<uint64_t> frameID;
-    Optional<uint64_t> pageID;
+    Optional<FrameIdentifier> frameID;
+    Optional<PageIdentifier> pageID;
     IncludeSecureCookies includeSecureCookies { IncludeSecureCookies::No };
 
     template<class Encoder> void encode(Encoder&) const;
     template<class Decoder> static Optional<CookieRequestHeaderFieldProxy> decode(Decoder&);
 };
@@ -58,24 +60,40 @@
 }
 
 template<class Decoder>
 Optional<CookieRequestHeaderFieldProxy> CookieRequestHeaderFieldProxy::decode(Decoder& decoder)
 {
-    CookieRequestHeaderFieldProxy result;
-    if (!decoder.decode(result.sessionID))
-        return WTF::nullopt;
-    if (!decoder.decode(result.firstParty))
+    Optional<PAL::SessionID> sessionID;
+    decoder >> sessionID;
+    if (!sessionID)
+        return { };
+
+    URL firstParty;
+    if (!decoder.decode(firstParty))
         return WTF::nullopt;
-    if (!decoder.decode(result.sameSiteInfo))
+
+    SameSiteInfo sameSiteInfo;
+    if (!decoder.decode(sameSiteInfo))
         return WTF::nullopt;
-    if (!decoder.decode(result.url))
+
+    URL url;
+    if (!decoder.decode(url))
         return WTF::nullopt;
-    if (!decoder.decode(result.frameID))
+
+    Optional<Optional<FrameIdentifier>> frameID;
+    decoder >> frameID;
+    if (!frameID)
         return WTF::nullopt;
-    if (!decoder.decode(result.pageID))
+
+    Optional<Optional<PageIdentifier>> pageID;
+    decoder >> pageID;
+    if (!pageID)
         return WTF::nullopt;
-    if (!decoder.decode(result.includeSecureCookies))
+
+    IncludeSecureCookies includeSecureCookies;
+    if (!decoder.decode(includeSecureCookies))
         return WTF::nullopt;
-    return WTFMove(result);
+
+    return CookieRequestHeaderFieldProxy { *sessionID, WTFMove(firstParty), WTFMove(sameSiteInfo), WTFMove(url), *frameID, *pageID, includeSecureCookies };
 }
 
 } // namespace WebCore
