diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBKeyRange.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBKeyRange.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBKeyRange.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBKeyRange.cpp
@@ -31,14 +31,17 @@
 #include "IDBBindingUtilities.h"
 #include "IDBKey.h"
 #include "IDBKeyData.h"
 #include "ScriptExecutionContext.h"
 #include <JavaScriptCore/JSCJSValue.h>
+#include <wtf/IsoMallocInlines.h>
 
 namespace WebCore {
 using namespace JSC;
 
+WTF_MAKE_ISO_ALLOCATED_IMPL(IDBKeyRange);
+
 Ref<IDBKeyRange> IDBKeyRange::create(RefPtr<IDBKey>&& lower, RefPtr<IDBKey>&& upper, bool isLowerOpen, bool isUpperOpen)
 {
     return adoptRef(*new IDBKeyRange(WTFMove(lower), WTFMove(upper), isLowerOpen, isUpperOpen));
 }
 
@@ -90,13 +93,14 @@
 }
 
 ExceptionOr<Ref<IDBKeyRange>> IDBKeyRange::bound(ExecState& state, JSValue lowerValue, JSValue upperValue, bool lowerOpen, bool upperOpen)
 {
     auto lower = scriptValueToIDBKey(state, lowerValue);
+    if (!lower->isValid())
+        return Exception { DataError };
     auto upper = scriptValueToIDBKey(state, upperValue);
-
-    if (!lower->isValid() || !upper->isValid())
+    if (!upper->isValid())
         return Exception { DataError };
     if (upper->isLessThan(lower.get()))
         return Exception { DataError };
     if (upper->isEqual(lower.get()) && (lowerOpen || upperOpen))
         return Exception { DataError };
