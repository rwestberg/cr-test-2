diff a/modules/javafx.web/src/main/native/Source/WebCore/mathml/MathMLElement.h b/modules/javafx.web/src/main/native/Source/WebCore/mathml/MathMLElement.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/mathml/MathMLElement.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/mathml/MathMLElement.h
@@ -91,28 +91,25 @@
     virtual void updateSelectedChild() { }
 
 protected:
     MathMLElement(const QualifiedName& tagName, Document&);
 
-    static StringView stripLeadingAndTrailingWhitespace(const StringView&);
-
-    void parseAttribute(const QualifiedName&, const AtomicString&) override;
+    void parseAttribute(const QualifiedName&, const AtomString&) override;
     bool childShouldCreateRenderer(const Node&) const override;
 
     bool isPresentationAttribute(const QualifiedName&) const override;
-    void collectStyleForPresentationAttribute(const QualifiedName&, const AtomicString&, MutableStyleProperties&) override;
+    void collectStyleForPresentationAttribute(const QualifiedName&, const AtomString&, MutableStyleProperties&) override;
 
     bool willRespondToMouseClickEvents() override;
     void defaultEventHandler(Event&) override;
 
 private:
     bool canStartSelection() const final;
     bool isKeyboardFocusable(KeyboardEvent*) const final;
     bool isMouseFocusable() const final;
     bool isURLAttribute(const Attribute&) const final;
     bool supportsFocus() const final;
-    int tabIndex() const final;
 };
 
 inline bool Node::hasTagName(const MathMLQualifiedName& name) const
 {
     return isMathMLElement() && downcast<MathMLElement>(*this).hasTagName(name);
