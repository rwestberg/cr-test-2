diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/FastBitVector.h b/modules/javafx.web/src/main/native/Source/WTF/wtf/FastBitVector.h
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/FastBitVector.h
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/FastBitVector.h
@@ -36,10 +36,11 @@
 class PrintStream;
 
 inline size_t fastBitVectorArrayLength(size_t numBits) { return (numBits + 31) / 32; }
 
 class FastBitVectorWordView {
+    WTF_MAKE_FAST_ALLOCATED;
 public:
     typedef FastBitVectorWordView ViewType;
 
     FastBitVectorWordView() { }
 
@@ -64,10 +65,11 @@
     const uint32_t* m_words { nullptr };
     size_t m_numBits { 0 };
 };
 
 class FastBitVectorWordOwner {
+    WTF_MAKE_FAST_ALLOCATED;
 public:
     typedef FastBitVectorWordView ViewType;
 
     FastBitVectorWordOwner() = default;
 
@@ -164,10 +166,11 @@
     size_t m_numBits { 0 };
 };
 
 template<typename Left, typename Right>
 class FastBitVectorAndWords {
+    WTF_MAKE_FAST_ALLOCATED;
 public:
     typedef FastBitVectorAndWords ViewType;
 
     FastBitVectorAndWords(const Left& left, const Right& right)
         : m_left(left)
@@ -193,10 +196,11 @@
     Right m_right;
 };
 
 template<typename Left, typename Right>
 class FastBitVectorOrWords {
+    WTF_MAKE_FAST_ALLOCATED;
 public:
     typedef FastBitVectorOrWords ViewType;
 
     FastBitVectorOrWords(const Left& left, const Right& right)
         : m_left(left)
@@ -222,10 +226,11 @@
     Right m_right;
 };
 
 template<typename View>
 class FastBitVectorNotWords {
+    WTF_MAKE_FAST_ALLOCATED;
 public:
     typedef FastBitVectorNotWords ViewType;
 
     FastBitVectorNotWords(const View& view)
         : m_view(view)
@@ -250,10 +255,11 @@
 
 class FastBitVector;
 
 template<typename Words>
 class FastBitVectorImpl {
+    WTF_MAKE_FAST_ALLOCATED;
 public:
     FastBitVectorImpl()
         : m_words()
     {
     }
