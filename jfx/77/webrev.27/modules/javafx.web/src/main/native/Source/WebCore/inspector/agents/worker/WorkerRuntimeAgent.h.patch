diff a/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/worker/WorkerRuntimeAgent.h b/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/worker/WorkerRuntimeAgent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/worker/WorkerRuntimeAgent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/worker/WorkerRuntimeAgent.h
@@ -42,21 +42,18 @@
 class WorkerRuntimeAgent final : public Inspector::InspectorRuntimeAgent {
     WTF_MAKE_NONCOPYABLE(WorkerRuntimeAgent);
     WTF_MAKE_FAST_ALLOCATED;
 public:
     WorkerRuntimeAgent(WorkerAgentContext&);
-    ~WorkerRuntimeAgent() = default;
-
-    void didCreateFrontendAndBackend(Inspector::FrontendRouter*, Inspector::BackendDispatcher*) override;
-    void willDestroyFrontendAndBackend(Inspector::DisconnectReason) override;
+    virtual ~WorkerRuntimeAgent();
 
 private:
-    Inspector::InjectedScript injectedScriptForEval(ErrorString&, const int* executionContextId) override;
+    Inspector::InjectedScript injectedScriptForEval(ErrorString&, const int* executionContextId);
 
     // We don't need to mute console for workers.
-    void muteConsole() override { }
-    void unmuteConsole() override { }
+    void muteConsole() { }
+    void unmuteConsole() { }
 
     RefPtr<Inspector::RuntimeBackendDispatcher> m_backendDispatcher;
     WorkerGlobalScope& m_workerGlobalScope;
 };
 
