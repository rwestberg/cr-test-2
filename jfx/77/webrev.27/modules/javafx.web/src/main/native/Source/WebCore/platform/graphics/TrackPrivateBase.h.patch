diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/TrackPrivateBase.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/TrackPrivateBase.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/TrackPrivateBase.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/TrackPrivateBase.h
@@ -30,20 +30,20 @@
 #if ENABLE(VIDEO_TRACK)
 
 #include <wtf/LoggerHelper.h>
 #include <wtf/MediaTime.h>
 #include <wtf/ThreadSafeRefCounted.h>
-#include <wtf/text/AtomicString.h>
+#include <wtf/text/AtomString.h>
 
 namespace WebCore {
 
 class TrackPrivateBaseClient {
 public:
     virtual ~TrackPrivateBaseClient() = default;
-    virtual void idChanged(const AtomicString&) = 0;
-    virtual void labelChanged(const AtomicString&) = 0;
-    virtual void languageChanged(const AtomicString&) = 0;
+    virtual void idChanged(const AtomString&) = 0;
+    virtual void labelChanged(const AtomString&) = 0;
+    virtual void languageChanged(const AtomString&) = 0;
     virtual void willRemove() = 0;
 };
 
 class TrackPrivateBase
     : public ThreadSafeRefCounted<TrackPrivateBase, WTF::DestructionThread::Main>
@@ -56,13 +56,13 @@
 public:
     virtual ~TrackPrivateBase() = default;
 
     virtual TrackPrivateBaseClient* client() const = 0;
 
-    virtual AtomicString id() const { return emptyAtom(); }
-    virtual AtomicString label() const { return emptyAtom(); }
-    virtual AtomicString language() const { return emptyAtom(); }
+    virtual AtomString id() const { return emptyAtom(); }
+    virtual AtomString label() const { return emptyAtom(); }
+    virtual AtomString language() const { return emptyAtom(); }
 
     virtual int trackIndex() const { return 0; }
 
     virtual MediaTime startTimeVariance() const { return MediaTime::zeroTime(); }
 
