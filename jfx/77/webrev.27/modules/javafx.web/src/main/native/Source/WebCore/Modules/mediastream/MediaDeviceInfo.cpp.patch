diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/MediaDeviceInfo.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/MediaDeviceInfo.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/MediaDeviceInfo.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/MediaDeviceInfo.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2015 Apple Inc. All rights reserved.
+ * Copyright (C) 2015-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -26,24 +26,27 @@
 #include "config.h"
 #include "MediaDeviceInfo.h"
 
 #if ENABLE(MEDIA_STREAM)
 
+#include <wtf/IsoMallocInlines.h>
+
 namespace WebCore {
 
-inline MediaDeviceInfo::MediaDeviceInfo(ScriptExecutionContext* context, const String& label, const String& deviceId, const String& groupId, Kind kind)
-    : ContextDestructionObserver(context)
-    , m_label(label)
-    , m_deviceId(deviceId)
-    , m_groupId(groupId)
-    , m_kind(kind)
+WTF_MAKE_ISO_ALLOCATED_IMPL(MediaDeviceInfo);
+
+Ref<MediaDeviceInfo> MediaDeviceInfo::create(const String& label, const String& deviceId, const String& groupId, Kind kind)
 {
+    return adoptRef(*new MediaDeviceInfo(label, deviceId, groupId, kind));
 }
 
-Ref<MediaDeviceInfo> MediaDeviceInfo::create(ScriptExecutionContext* context, const String& label, const String& deviceId, const String& groupId, Kind kind)
+MediaDeviceInfo::MediaDeviceInfo(const String& label, const String& deviceId, const String& groupId, Kind kind)
+    : m_label(label)
+    , m_deviceId(deviceId)
+    , m_groupId(groupId)
+    , m_kind(kind)
 {
-    return adoptRef(*new MediaDeviceInfo(context, label, deviceId, groupId, kind));
 }
 
 } // namespace WebCore
 
 #endif
