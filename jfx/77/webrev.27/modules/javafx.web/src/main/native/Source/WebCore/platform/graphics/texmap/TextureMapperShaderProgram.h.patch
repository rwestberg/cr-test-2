diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/texmap/TextureMapperShaderProgram.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/texmap/TextureMapperShaderProgram.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/texmap/TextureMapperShaderProgram.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/texmap/TextureMapperShaderProgram.h
@@ -26,17 +26,17 @@
 #include "TextureMapperGLHeaders.h"
 #include "TransformationMatrix.h"
 #include <wtf/HashMap.h>
 #include <wtf/NeverDestroyed.h>
 #include <wtf/Ref.h>
-#include <wtf/text/AtomicStringHash.h>
+#include <wtf/text/AtomStringHash.h>
 
 namespace WebCore {
 
 #define TEXMAP_DECLARE_VARIABLE(Accessor, Name, Type) \
     GLuint Accessor##Location() { \
-        static NeverDestroyed<const AtomicString> name(Name, AtomicString::ConstructFromLiteral); \
+        static NeverDestroyed<const AtomString> name(Name, AtomString::ConstructFromLiteral); \
         return getLocation(name.get(), Type); \
     }
 
 #define TEXMAP_DECLARE_UNIFORM(Accessor) TEXMAP_DECLARE_VARIABLE(Accessor, "u_"#Accessor, UniformVariable)
 #define TEXMAP_DECLARE_ATTRIBUTE(Accessor) TEXMAP_DECLARE_VARIABLE(Accessor, "a_"#Accessor, AttribVariable)
@@ -96,14 +96,14 @@
 
     GLuint m_vertexShader;
     GLuint m_fragmentShader;
 
     enum VariableType { UniformVariable, AttribVariable };
-    GLuint getLocation(const AtomicString&, VariableType);
+    GLuint getLocation(const AtomString&, VariableType);
 
     GLuint m_id;
-    HashMap<AtomicString, GLuint> m_variables;
+    HashMap<AtomString, GLuint> m_variables;
 };
 
 }
 #endif // USE(TEXTURE_MAPPER_GL)
 
