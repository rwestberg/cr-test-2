diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/assembler/LinkBuffer.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/assembler/LinkBuffer.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/assembler/LinkBuffer.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/assembler/LinkBuffer.h
@@ -91,14 +91,14 @@
 
     template<PtrTag tag>
     LinkBuffer(MacroAssembler& macroAssembler, MacroAssemblerCodePtr<tag> code, size_t size, JITCompilationEffort effort = JITCompilationMustSucceed, bool shouldPerformBranchCompaction = true)
         : m_size(size)
         , m_didAllocate(false)
-        , m_code(code.template retagged<LinkBufferPtrTag>())
 #ifndef NDEBUG
         , m_completed(false)
 #endif
+        , m_code(code.template retagged<LinkBufferPtrTag>())
     {
 #if ENABLE(BRANCH_COMPACTION)
         m_shouldPerformBranchCompaction = shouldPerformBranchCompaction;
 #else
         UNUSED_PARAM(shouldPerformBranchCompaction);
@@ -340,15 +340,15 @@
 #if ENABLE(BRANCH_COMPACTION)
     AssemblerData m_assemblerStorage;
     bool m_shouldPerformBranchCompaction { true };
 #endif
     bool m_didAllocate;
-    MacroAssemblerCodePtr<LinkBufferPtrTag> m_code;
 #ifndef NDEBUG
     bool m_completed;
 #endif
     bool m_alreadyDisassembled { false };
+    MacroAssemblerCodePtr<LinkBufferPtrTag> m_code;
     Vector<RefPtr<SharedTask<void(LinkBuffer&)>>> m_linkTasks;
 };
 
 #if OS(LINUX)
 #define FINALIZE_CODE_IF(condition, linkBufferReference, resultPtrTag, ...)  \
