diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/RoundedRect.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/RoundedRect.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/RoundedRect.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/RoundedRect.h
@@ -33,10 +33,11 @@
 
 namespace WebCore {
 
 class FloatRoundedRect;
 class LayoutUnit;
+class Region;
 
 class RoundedRect {
 public:
     class Radii {
     public:
@@ -76,11 +77,11 @@
         LayoutSize m_topRight;
         LayoutSize m_bottomLeft;
         LayoutSize m_bottomRight;
     };
 
-    explicit RoundedRect(const LayoutRect&, const Radii& = Radii());
+    WEBCORE_EXPORT explicit RoundedRect(const LayoutRect&, const Radii& = Radii());
     RoundedRect(const LayoutUnit&, const LayoutUnit&, const LayoutUnit& width, const LayoutUnit& height);
     WEBCORE_EXPORT RoundedRect(const LayoutRect&, const LayoutSize& topLeft, const LayoutSize& topRight, const LayoutSize& bottomLeft, const LayoutSize& bottomRight);
 
     const LayoutRect& rect() const { return m_rect; }
     const Radii& radii() const { return m_radii; }
@@ -125,9 +126,11 @@
 inline bool operator==(const RoundedRect& a, const RoundedRect& b)
 {
     return a.rect() == b.rect() && a.radii() == b.radii();
 }
 
+// Snip away rectangles from corners, roughly one per step length of arc.
+WEBCORE_EXPORT Region approximateAsRegion(const RoundedRect&, unsigned stepLength = 20);
 
 } // namespace WebCore
 
 #endif // RoundedRect_h
