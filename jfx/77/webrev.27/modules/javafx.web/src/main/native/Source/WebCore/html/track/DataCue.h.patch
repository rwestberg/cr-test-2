diff a/modules/javafx.web/src/main/native/Source/WebCore/html/track/DataCue.h b/modules/javafx.web/src/main/native/Source/WebCore/html/track/DataCue.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/track/DataCue.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/track/DataCue.h
@@ -31,16 +31,18 @@
 #include "SerializedPlatformRepresentation.h"
 #include "TextTrackCue.h"
 #include <JavaScriptCore/ArrayBuffer.h>
 #include <JavaScriptCore/JSCJSValue.h>
 #include <wtf/MediaTime.h>
+#include <wtf/TypeCasts.h>
 
 namespace WebCore {
 
 class ScriptExecutionContext;
 
 class DataCue final : public TextTrackCue {
+    WTF_MAKE_ISO_ALLOCATED(DataCue);
 public:
     static Ref<DataCue> create(ScriptExecutionContext& context, const MediaTime& start, const MediaTime& end, ArrayBuffer& data)
     {
         return adoptRef(*new DataCue(context, start, end, data, emptyString()));
     }
@@ -98,11 +100,14 @@
     JSC::JSValue valueOrNull() const;
 
     RefPtr<ArrayBuffer> m_data;
     String m_type;
     RefPtr<SerializedPlatformRepresentation> m_platformValue;
-    JSC::JSValue m_value;
+    // FIXME: The following use of JSC::Strong is incorrect and can lead to storage leaks
+    // due to reference cycles; we should use JSValueInWrappedObject instead.
+    // https://bugs.webkit.org/show_bug.cgi?id=201173
+    JSC::Strong<JSC::Unknown> m_value;
 };
 
 DataCue* toDataCue(TextTrackCue*);
 const DataCue* toDataCue(const TextTrackCue*);
 
@@ -121,6 +126,10 @@
     }
 };
 
 }
 
+SPECIALIZE_TYPE_TRAITS_BEGIN(WebCore::DataCue)
+static bool isType(const WebCore::TextTrackCue& cue) { return cue.cueType() == WebCore::TextTrackCue::Data; }
+SPECIALIZE_TYPE_TRAITS_END()
+
 #endif
