diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/audio/AudioResampler.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/audio/AudioResampler.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/audio/AudioResampler.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/audio/AudioResampler.cpp
@@ -37,19 +37,19 @@
 const double AudioResampler::MaxRate = 8.0;
 
 AudioResampler::AudioResampler()
     : m_rate(1.0)
 {
-    m_kernels.append(std::make_unique<AudioResamplerKernel>(this));
+    m_kernels.append(makeUnique<AudioResamplerKernel>(this));
     m_sourceBus = AudioBus::create(1, 0, false);
 }
 
 AudioResampler::AudioResampler(unsigned numberOfChannels)
     : m_rate(1.0)
 {
     for (unsigned i = 0; i < numberOfChannels; ++i)
-        m_kernels.append(std::make_unique<AudioResamplerKernel>(this));
+        m_kernels.append(makeUnique<AudioResamplerKernel>(this));
 
     m_sourceBus = AudioBus::create(numberOfChannels, 0, false);
 }
 
 void AudioResampler::configureChannels(unsigned numberOfChannels)
@@ -59,11 +59,11 @@
         return; // already setup
 
     // First deal with adding or removing kernels.
     if (numberOfChannels > currentSize) {
         for (unsigned i = currentSize; i < numberOfChannels; ++i)
-            m_kernels.append(std::make_unique<AudioResamplerKernel>(this));
+            m_kernels.append(makeUnique<AudioResamplerKernel>(this));
     } else
         m_kernels.resize(numberOfChannels);
 
     // Reconfigure our source bus to the new channel size.
     m_sourceBus = AudioBus::create(numberOfChannels, 0, false);
