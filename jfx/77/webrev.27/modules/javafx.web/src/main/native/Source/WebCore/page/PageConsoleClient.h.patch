diff a/modules/javafx.web/src/main/native/Source/WebCore/page/PageConsoleClient.h b/modules/javafx.web/src/main/native/Source/WebCore/page/PageConsoleClient.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/PageConsoleClient.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/PageConsoleClient.h
@@ -65,19 +65,22 @@
     void addMessage(MessageSource, MessageLevel, const String& message, Ref<Inspector::ScriptCallStack>&&);
     void addMessage(MessageSource, MessageLevel, const String& message, unsigned long requestIdentifier = 0, Document* = nullptr);
 
 protected:
     void messageWithTypeAndLevel(MessageType, MessageLevel, JSC::ExecState*, Ref<Inspector::ScriptArguments>&&) override;
-    void count(JSC::ExecState*, Ref<Inspector::ScriptArguments>&&) override;
+    void count(JSC::ExecState*, const String& label) override;
+    void countReset(JSC::ExecState*, const String& label) override;
     void profile(JSC::ExecState*, const String& title) override;
     void profileEnd(JSC::ExecState*, const String& title) override;
     void takeHeapSnapshot(JSC::ExecState*, const String& title) override;
-    void time(JSC::ExecState*, const String& title) override;
-    void timeEnd(JSC::ExecState*, const String& title) override;
+    void time(JSC::ExecState*, const String& label) override;
+    void timeLog(JSC::ExecState*, const String& label, Ref<Inspector::ScriptArguments>&&) override;
+    void timeEnd(JSC::ExecState*, const String& label) override;
     void timeStamp(JSC::ExecState*, Ref<Inspector::ScriptArguments>&&) override;
     void record(JSC::ExecState*, Ref<Inspector::ScriptArguments>&&) override;
     void recordEnd(JSC::ExecState*, Ref<Inspector::ScriptArguments>&&) override;
+    void screenshot(JSC::ExecState*, Ref<Inspector::ScriptArguments>&&) override;
 
 private:
     Page& m_page;
 };
 
