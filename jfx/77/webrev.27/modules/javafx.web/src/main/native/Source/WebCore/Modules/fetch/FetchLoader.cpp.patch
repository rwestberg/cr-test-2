diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/fetch/FetchLoader.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/fetch/FetchLoader.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/fetch/FetchLoader.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/fetch/FetchLoader.cpp
@@ -46,11 +46,11 @@
 namespace WebCore {
 
 FetchLoader::~FetchLoader()
 {
     if (!m_urlForReading.isEmpty())
-        ThreadableBlobRegistry::unregisterBlobURL(m_urlForReading);
+        ThreadableBlobRegistry::unregisterBlobURL(*m_sessionID, m_urlForReading);
 }
 
 void FetchLoader::start(ScriptExecutionContext& context, const Blob& blob)
 {
     return startLoadingBlobURL(context, blob.url());
@@ -62,11 +62,12 @@
     if (m_urlForReading.isEmpty()) {
         m_client.didFail({ errorDomainWebKitInternal, 0, URL(), "Could not create URL for Blob"_s });
         return;
     }
 
-    ThreadableBlobRegistry::registerBlobURL(context.securityOrigin(), m_urlForReading, blobURL);
+    m_sessionID = context.sessionID();
+    ThreadableBlobRegistry::registerBlobURL(*m_sessionID, context.securityOrigin(), m_urlForReading, blobURL);
 
     ResourceRequest request(m_urlForReading);
     request.setInitiatorIdentifier(context.resourceRequestIdentifier());
     request.setHTTPMethod("GET");
 
