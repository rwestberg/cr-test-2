diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/PutByIdVariant.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/PutByIdVariant.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/PutByIdVariant.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/PutByIdVariant.h
@@ -32,22 +32,23 @@
 namespace JSC {
 
 class CallLinkStatus;
 
 class PutByIdVariant {
+    WTF_MAKE_FAST_ALLOCATED;
 public:
     enum Kind {
         NotSet,
         Replace,
         Transition,
         Setter
     };
 
     PutByIdVariant()
         : m_kind(NotSet)
-        , m_newStructure(nullptr)
         , m_offset(invalidOffset)
+        , m_newStructure(nullptr)
     {
     }
 
     PutByIdVariant(const PutByIdVariant&);
     PutByIdVariant& operator=(const PutByIdVariant&);
@@ -130,22 +131,22 @@
     }
 
     bool attemptToMerge(const PutByIdVariant& other);
 
     void markIfCheap(SlotVisitor&);
-    bool finalize();
+    bool finalize(VM&);
 
     void dump(PrintStream&) const;
     void dumpInContext(PrintStream&, DumpContext*) const;
 
 private:
     bool attemptToMergeTransitionWithReplace(const PutByIdVariant& replace);
 
     Kind m_kind;
+    PropertyOffset m_offset;
     StructureSet m_oldStructure;
     Structure* m_newStructure { nullptr };
     ObjectPropertyConditionSet m_conditionSet;
-    PropertyOffset m_offset;
     std::unique_ptr<CallLinkStatus> m_callLinkStatus;
 };
 
 } // namespace JSC
