diff a/modules/javafx.web/src/main/native/Source/WebCore/page/EventSource.cpp b/modules/javafx.web/src/main/native/Source/WebCore/page/EventSource.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/EventSource.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/EventSource.cpp
@@ -42,13 +42,16 @@
 #include "ResourceResponse.h"
 #include "ScriptExecutionContext.h"
 #include "SecurityOrigin.h"
 #include "TextResourceDecoder.h"
 #include "ThreadableLoader.h"
+#include <wtf/IsoMallocInlines.h>
 
 namespace WebCore {
 
+WTF_MAKE_ISO_ALLOCATED_IMPL(EventSource);
+
 const uint64_t EventSource::defaultReconnectDelay = 3000;
 
 inline EventSource::EventSource(ScriptExecutionContext& context, const URL& url, const Init& eventSourceInit)
     : ActiveDOMObject(&context)
     , m_url(url)
@@ -75,11 +78,11 @@
 
     auto source = adoptRef(*new EventSource(context, fullURL, eventSourceInit));
     source->setPendingActivity(source.get());
     source->scheduleInitialConnect();
     source->suspendIfNeeded();
-    return WTFMove(source);
+    return source;
 }
 
 EventSource::~EventSource()
 {
     ASSERT(m_state == CLOSED);
@@ -344,11 +347,12 @@
         m_data.append('\n');
     } else if (field == "event")
         m_eventName = { &m_receiveBuffer[position], valueLength };
     else if (field == "id") {
         StringView parsedEventId = { &m_receiveBuffer[position], valueLength };
-        if (!parsedEventId.contains('\0'))
+        constexpr UChar nullCharacter = '\0';
+        if (!parsedEventId.contains(nullCharacter))
             m_currentlyParsedEventId = parsedEventId.toString();
     } else if (field == "retry") {
         if (!valueLength)
             m_reconnectDelay = defaultReconnectDelay;
         else {
