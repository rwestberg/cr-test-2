diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/AST/WHLSLNullLiteralType.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/AST/WHLSLNullLiteralType.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/AST/WHLSLNullLiteralType.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/AST/WHLSLNullLiteralType.h
@@ -26,41 +26,45 @@
 #pragma once
 
 #if ENABLE(WEBGPU)
 
 #include "WHLSLResolvableType.h"
+#include <wtf/FastMalloc.h>
 
 namespace WebCore {
 
 namespace WHLSL {
 
 namespace AST {
 
-class NullLiteralType : public ResolvableType {
+class NullLiteralType final : public ResolvableType {
+    WTF_MAKE_FAST_ALLOCATED;
 public:
-    NullLiteralType() = default;
+    NullLiteralType()
+        : ResolvableType(Kind::NullLiteral)
+    { }
 
-    virtual ~NullLiteralType() = default;
+    ~NullLiteralType() = default;
 
     NullLiteralType(const NullLiteralType&) = delete;
     NullLiteralType(NullLiteralType&&) = default;
 
     NullLiteralType& operator=(const NullLiteralType&) = delete;
     NullLiteralType& operator=(NullLiteralType&&) = default;
 
-    bool isNullLiteralType() const override { return true; }
-
-    bool canResolve(const Type&) const override;
-    unsigned conversionCost(const UnnamedType&) const override;
+    bool canResolve(const Type&) const;
+    unsigned conversionCost(const UnnamedType&) const;
 
 private:
 };
 
 } // namespace AST
 
 }
 
 }
 
-SPECIALIZE_TYPE_TRAITS_WHLSL_RESOLVABLE_TYPE(NullLiteralType, isNullLiteralType())
+DEFINE_DEFAULT_DELETE(NullLiteralType)
+
+SPECIALIZE_TYPE_TRAITS_WHLSL_TYPE(NullLiteralType, isNullLiteralType())
 
 #endif
