diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/GridBaselineAlignment.cpp b/modules/javafx.web/src/main/native/Source/WebCore/rendering/GridBaselineAlignment.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/GridBaselineAlignment.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/GridBaselineAlignment.cpp
@@ -29,10 +29,11 @@
  */
 
 #include "config.h"
 #include "GridBaselineAlignment.h"
 
+#include "RenderBox.h"
 #include "RenderStyle.h"
 
 namespace WebCore {
 
 // This function gives the margin 'over' based on the baseline-axis, since in grid we can have 2-dimensional
@@ -131,11 +132,11 @@
     auto& contextsMap = isRowAxisContext ? m_rowAxisAlignmentContext : m_colAxisAlignmentContext;
     auto addResult = contextsMap.add(sharedContext, nullptr);
 
     // Looking for a compatible baseline-sharing group.
     if (addResult.isNewEntry)
-        addResult.iterator->value = std::make_unique<BaselineContext>(child, preference, ascent, descent);
+        addResult.iterator->value = makeUnique<BaselineContext>(child, preference, ascent, descent);
     else {
         auto* context = addResult.iterator->value.get();
         context->updateSharedGroup(child, preference, ascent, descent);
     }
 }
