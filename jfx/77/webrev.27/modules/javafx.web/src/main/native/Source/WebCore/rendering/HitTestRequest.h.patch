diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/HitTestRequest.h b/modules/javafx.web/src/main/native/Source/WebCore/rendering/HitTestRequest.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/HitTestRequest.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/HitTestRequest.h
@@ -37,16 +37,17 @@
         SVGClipContent = 1 << 6,
         TouchEvent = 1 << 7,
         DisallowUserAgentShadowContent = 1 << 8,
         AllowFrameScrollbars = 1 << 9,
         AllowChildFrameContent = 1 << 10,
-        ChildFrameHitTest = 1 << 11,
-        AccessibilityHitTest = 1 << 12,
+        AllowVisibleChildFrameContentOnly = 1 << 11,
+        ChildFrameHitTest = 1 << 12,
+        AccessibilityHitTest = 1 << 13,
         // Collect a list of nodes instead of just one. Used for elementsFromPoint and rect-based tests.
-        CollectMultipleElements = 1 << 13,
+        CollectMultipleElements = 1 << 14,
         // When using list-based testing, continue hit testing even after a hit has been found.
-        IncludeAllElementsUnderPoint = 1 << 14
+        IncludeAllElementsUnderPoint = 1 << 15
     };
 
     typedef unsigned HitTestRequestType;
 
     HitTestRequest(HitTestRequestType requestType = ReadOnly | Active | DisallowUserAgentShadowContent)
@@ -64,10 +65,11 @@
     bool touchEvent() const { return m_requestType & TouchEvent; }
     bool mouseEvent() const { return !touchEvent(); }
     bool disallowsUserAgentShadowContent() const { return m_requestType & DisallowUserAgentShadowContent; }
     bool allowsFrameScrollbars() const { return m_requestType & AllowFrameScrollbars; }
     bool allowsChildFrameContent() const { return m_requestType & AllowChildFrameContent; }
+    bool allowsVisibleChildFrameContent() const { return m_requestType & AllowVisibleChildFrameContentOnly; }
     bool isChildFrameHitTest() const { return m_requestType & ChildFrameHitTest; }
     bool resultIsElementList() const { return m_requestType & CollectMultipleElements; }
     bool includesAllElementsUnderPoint() const { return m_requestType & IncludeAllElementsUnderPoint; }
 
     // Convenience functions
