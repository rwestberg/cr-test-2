diff a/modules/javafx.web/src/main/native/Source/WebCore/css/FontFaceSet.h b/modules/javafx.web/src/main/native/Source/WebCore/css/FontFaceSet.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/css/FontFaceSet.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/css/FontFaceSet.h
@@ -34,10 +34,11 @@
 namespace WebCore {
 
 class DOMException;
 
 class FontFaceSet final : public RefCounted<FontFaceSet>, private CSSFontFaceSetClient, public EventTargetWithInlineData, private  ActiveDOMObject {
+    WTF_MAKE_ISO_ALLOCATED(FontFaceSet);
 public:
     static Ref<FontFaceSet> create(Document&, const Vector<RefPtr<FontFace>>& initialFaces);
     static Ref<FontFaceSet> create(Document&, CSSFontFaceSet& backing);
     virtual ~FontFaceSet();
 
@@ -54,10 +55,11 @@
     enum class LoadStatus { Loading, Loaded };
     LoadStatus status() const;
 
     using ReadyPromise = DOMPromiseProxyWithResolveCallback<IDLInterface<FontFaceSet>>;
     ReadyPromise& ready() { return m_readyPromise; }
+    void didFirstLayout();
 
     CSSFontFaceSet& backing() { return m_backing; }
 
     class Iterator {
     public:
@@ -112,8 +114,9 @@
     FontFaceSet& readyPromiseResolve();
 
     Ref<CSSFontFaceSet> m_backing;
     HashMap<RefPtr<FontFace>, Vector<Ref<PendingPromise>>> m_pendingPromises;
     ReadyPromise m_readyPromise;
+    bool m_isFirstLayoutDone { true };
 };
 
 }
