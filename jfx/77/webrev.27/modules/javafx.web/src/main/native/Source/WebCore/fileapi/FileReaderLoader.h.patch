diff a/modules/javafx.web/src/main/native/Source/WebCore/fileapi/FileReaderLoader.h b/modules/javafx.web/src/main/native/Source/WebCore/fileapi/FileReaderLoader.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/fileapi/FileReaderLoader.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/fileapi/FileReaderLoader.h
@@ -33,10 +33,11 @@
 #include "BlobResourceHandle.h"
 #include "FileError.h"
 #include <wtf/URL.h>
 #include "TextEncoding.h"
 #include "ThreadableLoaderClient.h"
+#include <pal/SessionID.h>
 #include <wtf/Forward.h>
 #include <wtf/text/WTFString.h>
 
 namespace JSC {
 class ArrayBuffer;
@@ -59,24 +60,24 @@
         ReadAsText,
         ReadAsDataURL
     };
 
     // If client is given, do the loading asynchronously. Otherwise, load synchronously.
-    FileReaderLoader(ReadType, FileReaderLoaderClient*);
+    WEBCORE_EXPORT FileReaderLoader(ReadType, FileReaderLoaderClient*);
     ~FileReaderLoader();
 
-    void start(ScriptExecutionContext*, Blob&);
-    void cancel();
+    WEBCORE_EXPORT void start(ScriptExecutionContext*, Blob&);
+    WEBCORE_EXPORT void cancel();
 
     // ThreadableLoaderClient
     void didReceiveResponse(unsigned long, const ResourceResponse&) override;
     void didReceiveData(const char*, int) override;
     void didFinishLoading(unsigned long) override;
     void didFail(const ResourceError&) override;
 
     String stringResult();
-    RefPtr<JSC::ArrayBuffer> arrayBufferResult() const;
+    WEBCORE_EXPORT RefPtr<JSC::ArrayBuffer> arrayBufferResult() const;
     unsigned bytesLoaded() const { return m_bytesLoaded; }
     unsigned totalBytes() const { return m_totalBytes; }
     FileError::ErrorCode errorCode() const { return m_errorCode; }
 
     void setEncoding(const String&);
@@ -100,10 +101,11 @@
     FileReaderLoaderClient* m_client;
     TextEncoding m_encoding;
     String m_dataType;
 
     URL m_urlForReading;
+    Optional<PAL::SessionID> m_sessionID;
     RefPtr<ThreadableLoader> m_loader;
 
     RefPtr<JSC::ArrayBuffer> m_rawData;
     bool m_isRawDataConverted;
 
