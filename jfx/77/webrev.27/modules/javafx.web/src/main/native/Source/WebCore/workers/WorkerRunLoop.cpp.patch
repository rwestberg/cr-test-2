diff a/modules/javafx.web/src/main/native/Source/WebCore/workers/WorkerRunLoop.cpp b/modules/javafx.web/src/main/native/Source/WebCore/workers/WorkerRunLoop.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/workers/WorkerRunLoop.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/workers/WorkerRunLoop.cpp
@@ -84,11 +84,11 @@
     String m_mode;
     bool m_defaultMode;
 };
 
 WorkerRunLoop::WorkerRunLoop()
-    : m_sharedTimer(std::make_unique<WorkerSharedTimer>())
+    : m_sharedTimer(makeUnique<WorkerSharedTimer>())
 {
 }
 
 WorkerRunLoop::~WorkerRunLoop()
 {
@@ -248,16 +248,16 @@
     postTaskForMode(WTFMove(task), defaultMode());
 }
 
 void WorkerRunLoop::postTaskAndTerminate(ScriptExecutionContext::Task&& task)
 {
-    m_messageQueue.appendAndKill(std::make_unique<Task>(WTFMove(task), defaultMode()));
+    m_messageQueue.appendAndKill(makeUnique<Task>(WTFMove(task), defaultMode()));
 }
 
 void WorkerRunLoop::postTaskForMode(ScriptExecutionContext::Task&& task, const String& mode)
 {
-    m_messageQueue.append(std::make_unique<Task>(WTFMove(task), mode));
+    m_messageQueue.append(makeUnique<Task>(WTFMove(task), mode));
 }
 
 void WorkerRunLoop::postDebuggerTask(ScriptExecutionContext::Task&& task)
 {
     postTaskForMode(WTFMove(task), debuggerMode());
