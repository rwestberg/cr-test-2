diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/UserMediaController.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/UserMediaController.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/UserMediaController.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/UserMediaController.h
@@ -27,10 +27,11 @@
 
 #if ENABLE(MEDIA_STREAM)
 
 #include "Page.h"
 #include "UserMediaClient.h"
+#include <wtf/CompletionHandler.h>
 
 namespace WebCore {
 
 class UserMediaRequest;
 
@@ -43,12 +44,11 @@
     UserMediaClient* client() const { return m_client; }
 
     void requestUserMediaAccess(UserMediaRequest&);
     void cancelUserMediaAccessRequest(UserMediaRequest&);
 
-    void enumerateMediaDevices(MediaDevicesEnumerationRequest&);
-    void cancelMediaDevicesEnumerationRequest(MediaDevicesEnumerationRequest&);
+    void enumerateMediaDevices(Document&, CompletionHandler<void(const Vector<CaptureDevice>&, const String&)>&&);
 
     UserMediaClient::DeviceChangeObserverToken addDeviceChangeObserver(WTF::Function<void()>&&);
     void removeDeviceChangeObserver(UserMediaClient::DeviceChangeObserverToken);
 
     enum class GetUserMediaAccess {
@@ -61,11 +61,11 @@
     enum class CaptureType {
         Microphone = 1 << 0,
         Camera = 1 << 1,
         Display = 1 << 3
     };
-    GetUserMediaAccess canCallGetUserMedia(Document&, OptionSet<CaptureType>);
+    GetUserMediaAccess canCallGetUserMedia(const Document&, OptionSet<CaptureType>) const;
 
     enum class BlockedCaller {
         GetUserMedia,
         GetDisplayMedia,
         EnumerateDevices,
@@ -87,19 +87,15 @@
 inline void UserMediaController::cancelUserMediaAccessRequest(UserMediaRequest& request)
 {
     m_client->cancelUserMediaAccessRequest(request);
 }
 
-inline void UserMediaController::enumerateMediaDevices(MediaDevicesEnumerationRequest& request)
+inline void UserMediaController::enumerateMediaDevices(Document& document, CompletionHandler<void(const Vector<CaptureDevice>&, const String&)>&& completionHandler)
 {
-    m_client->enumerateMediaDevices(request);
+    m_client->enumerateMediaDevices(document, WTFMove(completionHandler));
 }
 
-inline void UserMediaController::cancelMediaDevicesEnumerationRequest(MediaDevicesEnumerationRequest& request)
-{
-    m_client->cancelMediaDevicesEnumerationRequest(request);
-}
 
 inline UserMediaClient::DeviceChangeObserverToken UserMediaController::addDeviceChangeObserver(WTF::Function<void()>&& observer)
 {
     return m_client->addDeviceChangeObserver(WTFMove(observer));
 }
