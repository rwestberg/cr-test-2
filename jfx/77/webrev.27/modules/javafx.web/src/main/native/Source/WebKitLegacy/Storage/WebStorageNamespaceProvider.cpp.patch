diff a/modules/javafx.web/src/main/native/Source/WebKitLegacy/Storage/WebStorageNamespaceProvider.cpp b/modules/javafx.web/src/main/native/Source/WebKitLegacy/Storage/WebStorageNamespaceProvider.cpp
--- a/modules/javafx.web/src/main/native/Source/WebKitLegacy/Storage/WebStorageNamespaceProvider.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebKitLegacy/Storage/WebStorageNamespaceProvider.cpp
@@ -24,10 +24,11 @@
  */
 
 #include "WebStorageNamespaceProvider.h"
 
 #include "StorageNamespaceImpl.h"
+#include <WebCore/Page.h>
 #include <wtf/NeverDestroyed.h>
 
 using namespace WebCore;
 
 namespace WebKit {
@@ -94,28 +95,23 @@
         if (auto* localStorageNamespace = storageNamespaceProvider->optionalLocalStorageNamespace())
             static_cast<StorageNamespaceImpl*>(localStorageNamespace)->sync();
     }
 }
 
-Ref<StorageNamespace> WebStorageNamespaceProvider::createSessionStorageNamespace(Page&, unsigned quota)
+Ref<StorageNamespace> WebStorageNamespaceProvider::createSessionStorageNamespace(Page& page, unsigned quota)
 {
-    return StorageNamespaceImpl::createSessionStorageNamespace(quota);
+    return StorageNamespaceImpl::createSessionStorageNamespace(quota, page.sessionID());
 }
 
-Ref<StorageNamespace> WebStorageNamespaceProvider::createEphemeralLocalStorageNamespace(Page&, unsigned quota)
+Ref<StorageNamespace> WebStorageNamespaceProvider::createLocalStorageNamespace(unsigned quota, PAL::SessionID sessionID)
 {
-    return StorageNamespaceImpl::createEphemeralLocalStorageNamespace(quota);
+    return StorageNamespaceImpl::getOrCreateLocalStorageNamespace(m_localStorageDatabasePath, quota, sessionID);
 }
 
-Ref<StorageNamespace> WebStorageNamespaceProvider::createLocalStorageNamespace(unsigned quota)
-{
-    return StorageNamespaceImpl::getOrCreateLocalStorageNamespace(m_localStorageDatabasePath, quota);
-}
-
-Ref<StorageNamespace> WebStorageNamespaceProvider::createTransientLocalStorageNamespace(SecurityOrigin&, unsigned quota)
+Ref<StorageNamespace> WebStorageNamespaceProvider::createTransientLocalStorageNamespace(SecurityOrigin&, unsigned quota, PAL::SessionID sessionID)
 {
     // FIXME: A smarter implementation would create a special namespace type instead of just piggy-backing off
     // SessionStorageNamespace here.
-    return StorageNamespaceImpl::createSessionStorageNamespace(quota);
+    return StorageNamespaceImpl::createSessionStorageNamespace(quota, sessionID);
 }
 
 }
