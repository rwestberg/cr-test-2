diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderEmbeddedObject.cpp b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderEmbeddedObject.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderEmbeddedObject.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderEmbeddedObject.cpp
@@ -156,10 +156,12 @@
         return blockedPluginByContentSecurityPolicyText();
     case RenderEmbeddedObject::InsecurePluginVersion:
         return insecurePluginVersionText();
     case RenderEmbeddedObject::UnsupportedPlugin:
         return unsupportedPluginText();
+    case RenderEmbeddedObject::PluginTooSmall:
+        return pluginTooSmallText();
     }
 
     ASSERT_NOT_REACHED();
     return String();
 }
@@ -220,12 +222,11 @@
     IntRect alignedRect = snappedIntRect(rect);
     if (alignedRect.width() <= 0 || alignedRect.height() <= 0)
         return;
 
     InterpolationQuality interpolation = chooseInterpolationQuality(context, image, &image, alignedRect.size());
-    ImageOrientationDescription orientationDescription(shouldRespectImageOrientation(), style().imageOrientation());
-    context.drawImage(image, alignedRect, ImagePaintingOptions(orientationDescription, interpolation));
+    context.drawImage(image, alignedRect, { imageOrientation(), interpolation });
 }
 
 void RenderEmbeddedObject::paintContents(PaintInfo& paintInfo, const LayoutPoint& paintOffset)
 {
     if (!is<HTMLPlugInElement>(frameOwnerElement()))
