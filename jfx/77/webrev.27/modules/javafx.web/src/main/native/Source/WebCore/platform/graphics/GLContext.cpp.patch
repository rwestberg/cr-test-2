diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GLContext.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GLContext.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GLContext.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GLContext.cpp
@@ -27,11 +27,10 @@
 #endif
 
 #if USE(LIBEPOXY)
 #include <epoxy/gl.h>
 #elif USE(OPENGL_ES)
-#define GL_GLEXT_PROTOTYPES 1
 #include <GLES2/gl2.h>
 #endif
 
 #if USE(GLX)
 #include "GLContextGLX.h"
@@ -83,22 +82,24 @@
 
     PlatformDisplay& display = platformDisplay ? *platformDisplay : PlatformDisplay::sharedDisplay();
 #if PLATFORM(WAYLAND)
     if (display.type() == PlatformDisplay::Type::Wayland) {
         if (auto eglContext = GLContextEGL::createContext(windowHandle, display))
-            return WTFMove(eglContext);
+            return eglContext;
         return nullptr;
     }
 #endif
 
 #if USE(GLX)
-    if (auto glxContext = GLContextGLX::createContext(windowHandle, display))
-        return WTFMove(glxContext);
+    if (display.type() == PlatformDisplay::Type::X11) {
+        if (auto glxContext = GLContextGLX::createContext(windowHandle, display))
+            return glxContext;
+    }
 #endif
 #if USE(EGL)
     if (auto eglContext = GLContextEGL::createContext(windowHandle, display))
-        return WTFMove(eglContext);
+        return eglContext;
 #endif
     return nullptr;
 }
 
 std::unique_ptr<GLContext> GLContext::createOffscreenContext(PlatformDisplay* platformDisplay)
@@ -115,17 +116,17 @@
         return nullptr;
 
 #if USE(GLX)
     if (display.type() == PlatformDisplay::Type::X11) {
         if (auto glxContext = GLContextGLX::createSharingContext(display))
-            return WTFMove(glxContext);
+            return glxContext;
     }
 #endif
 
 #if USE(EGL) || PLATFORM(WAYLAND) || PLATFORM(WPE)
     if (auto eglContext = GLContextEGL::createSharingContext(display))
-        return WTFMove(eglContext);
+        return eglContext;
 #endif
 
     return nullptr;
 }
 
