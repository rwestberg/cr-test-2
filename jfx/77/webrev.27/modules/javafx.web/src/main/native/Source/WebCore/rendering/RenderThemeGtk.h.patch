diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderThemeGtk.h b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderThemeGtk.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderThemeGtk.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderThemeGtk.h
@@ -46,12 +46,10 @@
 private:
     // System fonts.
     void updateCachedSystemFontDescription(CSSValueID, FontCascadeDescription&) const override;
 
 public:
-#ifndef GTK_API_VERSION_2
-
     // A method asking if the theme's controls actually care about redrawing when hovered.
     bool supportsHover(const RenderStyle&) const override { return true; }
 
     // A method asking if the theme is able to draw the focus ring.
     bool supportsFocusRing(const RenderStyle&) const override;
@@ -79,10 +77,12 @@
     Color platformActiveListBoxSelectionBackgroundColor(OptionSet<StyleColor::Options>) const override;
     Color platformActiveListBoxSelectionForegroundColor(OptionSet<StyleColor::Options>) const override;
     Color platformInactiveListBoxSelectionBackgroundColor(OptionSet<StyleColor::Options>) const override;
     Color platformInactiveListBoxSelectionForegroundColor(OptionSet<StyleColor::Options>) const override;
 
+    Color disabledTextColor(const Color&, const Color&) const override;
+
     Seconds caretBlinkInterval() const override;
 
     void platformColorsDidChange() override;
 
     // System colors.
@@ -102,11 +102,10 @@
 #endif
 
     bool shouldHaveCapsLockIndicator(const HTMLInputElement&) const override;
 
 private:
-    RenderThemeGtk();
     virtual ~RenderThemeGtk();
 
     bool paintCheckbox(const RenderObject&, const PaintInfo&, const IntRect&) override;
     void setCheckboxSize(RenderStyle&) const override;
 
@@ -141,10 +140,15 @@
     bool paintSearchFieldResultsButton(const RenderBox&, const PaintInfo&, const IntRect&) override;
 
     void adjustSearchFieldCancelButtonStyle(StyleResolver&, RenderStyle&, const Element*) const override;
     bool paintSearchFieldCancelButton(const RenderBox&, const PaintInfo&, const IntRect&) override;
 
+#if ENABLE(DATALIST_ELEMENT)
+    void paintListButtonForInput(const RenderObject&, const PaintInfo&, const FloatRect&);
+    void adjustListButtonStyle(StyleResolver&, RenderStyle&, const Element*) const override;
+#endif
+
     bool paintSliderTrack(const RenderObject&, const PaintInfo&, const IntRect&) override;
     void adjustSliderTrackStyle(StyleResolver&, RenderStyle&, const Element*) const override;
 
     bool paintSliderThumb(const RenderObject&, const PaintInfo&, const IntRect&) override;
     void adjustSliderThumbStyle(StyleResolver&, RenderStyle&, const Element*) const override;
@@ -166,12 +170,10 @@
 #if ENABLE(VIDEO_TRACK)
     bool paintMediaToggleClosedCaptionsButton(const RenderObject&, const PaintInfo&, const IntRect&) override;
 #endif
 #endif
 
-    bool isControlStyled(const RenderStyle&, const BorderData&, const FillLayer&, const Color&) const override;
-
     Seconds animationRepeatIntervalForProgressBar(RenderProgress&) const override;
     Seconds animationDurationForProgressBar(RenderProgress&) const override;
     void adjustProgressBarStyle(StyleResolver&, RenderStyle&, const Element*) const override;
     IntRect progressBarRectForBounds(const RenderObject&, const IntRect&) const override;
     bool paintProgressBar(const RenderObject&, const PaintInfo&, const IntRect&) override;
@@ -187,9 +189,8 @@
 #if ENABLE(VIDEO)
     bool paintMediaButton(const RenderObject&, GraphicsContext&, const IntRect&, const char* iconName);
 #endif
 
     static IntRect calculateProgressRect(const RenderObject&, const IntRect&);
-#endif // GTK_API_VERSION_2
 };
 
 } // namespace WebCore
