diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webaudio/GainNode.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webaudio/GainNode.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webaudio/GainNode.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webaudio/GainNode.cpp
@@ -29,24 +29,27 @@
 #include "GainNode.h"
 
 #include "AudioBus.h"
 #include "AudioNodeInput.h"
 #include "AudioNodeOutput.h"
+#include <wtf/IsoMallocInlines.h>
 
 namespace WebCore {
 
+WTF_MAKE_ISO_ALLOCATED_IMPL(GainNode);
+
 GainNode::GainNode(AudioContext& context, float sampleRate)
     : AudioNode(context, sampleRate)
     , m_lastGain(1.0)
     , m_sampleAccurateGainValues(AudioNode::ProcessingSizeInFrames) // FIXME: can probably share temp buffer in context
 {
-    m_gain = AudioParam::create(context, "gain", 1.0, 0.0, 1.0);
+    setNodeType(NodeTypeGain);
 
-    addInput(std::make_unique<AudioNodeInput>(this));
-    addOutput(std::make_unique<AudioNodeOutput>(this, 1));
+    m_gain = AudioParam::create(context, "gain", 1.0, 0.0, 1.0);
 
-    setNodeType(NodeTypeGain);
+    addInput(makeUnique<AudioNodeInput>(this));
+    addOutput(makeUnique<AudioNodeOutput>(this, 1));
 
     initialize();
 }
 
 void GainNode::process(size_t framesToProcess)
