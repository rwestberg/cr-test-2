diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ConfigFile.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ConfigFile.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ConfigFile.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ConfigFile.cpp
@@ -312,11 +312,11 @@
                     char* optionNameStart = p;
 
                     while (*p && !isASCIISpace(*p) && *p != '=')
                         p++;
 
-                    builder.append(optionNameStart, p - optionNameStart);
+                    builder.appendCharacters(optionNameStart, p - optionNameStart);
 
                     while (*p && isASCIISpace(*p) && *p != '=')
                         p++;
 
                     if (!*p)
@@ -334,11 +334,11 @@
                     char* optionValueStart = p;
 
                     while (*p && !isASCIISpace(*p))
                         p++;
 
-                    builder.append(optionValueStart, p - optionValueStart);
+                    builder.appendCharacters(optionValueStart, p - optionValueStart);
                     builder.append('\n');
 
                     while (*p && isASCIISpace(*p))
                         p++;
                 } while (*p);
@@ -463,13 +463,12 @@
     if (parseResult == ParseOK) {
         if (strlen(logPathname))
             WTF::setDataFile(logPathname);
 
         if (!jscOptionsBuilder.isEmpty()) {
-            const char* optionsStr = jscOptionsBuilder.toString().utf8().data();
             Options::enableRestrictedOptions(true);
-            Options::setOptions(optionsStr);
+            Options::setOptions(jscOptionsBuilder.toString().utf8().data());
         }
     } else
         WTF::dataLogF("Error in JSC Config file on or near line %u, parsing '%s'\n", scanner.lineNumber(), scanner.currentBuffer());
 }
 
