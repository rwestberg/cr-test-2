diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/shared/IDBTransactionInfo.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/shared/IDBTransactionInfo.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/shared/IDBTransactionInfo.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/shared/IDBTransactionInfo.cpp
@@ -53,11 +53,11 @@
 IDBTransactionInfo IDBTransactionInfo::versionChange(const IDBServer::IDBConnectionToClient& connection, const IDBDatabaseInfo& originalDatabaseInfo, uint64_t newVersion)
 {
     IDBTransactionInfo result((IDBResourceIdentifier(connection)));
     result.m_mode = IDBTransactionMode::Versionchange;
     result.m_newVersion = newVersion;
-    result.m_originalDatabaseInfo = std::make_unique<IDBDatabaseInfo>(originalDatabaseInfo);
+    result.m_originalDatabaseInfo = makeUnique<IDBDatabaseInfo>(originalDatabaseInfo);
 
     return result;
 }
 
 IDBTransactionInfo::IDBTransactionInfo(const IDBTransactionInfo& info)
@@ -65,11 +65,11 @@
     , m_mode(info.m_mode)
     , m_newVersion(info.m_newVersion)
     , m_objectStores(info.m_objectStores)
 {
     if (info.m_originalDatabaseInfo)
-        m_originalDatabaseInfo = std::make_unique<IDBDatabaseInfo>(*info.m_originalDatabaseInfo);
+        m_originalDatabaseInfo = makeUnique<IDBDatabaseInfo>(*info.m_originalDatabaseInfo);
 }
 
 IDBTransactionInfo::IDBTransactionInfo(const IDBTransactionInfo& that, IsolatedCopyTag)
 {
     isolatedCopy(that, *this);
@@ -89,11 +89,11 @@
     destination.m_objectStores.reserveCapacity(source.m_objectStores.size());
     for (auto& objectStore : source.m_objectStores)
         destination.m_objectStores.uncheckedAppend(objectStore.isolatedCopy());
 
     if (source.m_originalDatabaseInfo)
-        destination.m_originalDatabaseInfo = std::make_unique<IDBDatabaseInfo>(*source.m_originalDatabaseInfo, IDBDatabaseInfo::IsolatedCopy);
+        destination.m_originalDatabaseInfo = makeUnique<IDBDatabaseInfo>(*source.m_originalDatabaseInfo, IDBDatabaseInfo::IsolatedCopy);
 }
 
 #if !LOG_DISABLED
 
 String IDBTransactionInfo::loggingString() const
