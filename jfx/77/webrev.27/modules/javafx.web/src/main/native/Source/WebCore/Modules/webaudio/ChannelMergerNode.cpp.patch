diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webaudio/ChannelMergerNode.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webaudio/ChannelMergerNode.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webaudio/ChannelMergerNode.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webaudio/ChannelMergerNode.cpp
@@ -33,15 +33,18 @@
 #include "ChannelMergerNode.h"
 
 #include "AudioContext.h"
 #include "AudioNodeInput.h"
 #include "AudioNodeOutput.h"
+#include <wtf/IsoMallocInlines.h>
 
 const unsigned DefaultNumberOfOutputChannels = 1;
 
 namespace WebCore {
 
+WTF_MAKE_ISO_ALLOCATED_IMPL(ChannelMergerNode);
+
 RefPtr<ChannelMergerNode> ChannelMergerNode::create(AudioContext& context, float sampleRate, unsigned numberOfInputs)
 {
     if (!numberOfInputs || numberOfInputs > AudioContext::maxNumberOfChannels())
         return nullptr;
 
@@ -50,17 +53,17 @@
 
 ChannelMergerNode::ChannelMergerNode(AudioContext& context, float sampleRate, unsigned numberOfInputs)
     : AudioNode(context, sampleRate)
     , m_desiredNumberOfOutputChannels(DefaultNumberOfOutputChannels)
 {
+    setNodeType(NodeTypeChannelMerger);
+
     // Create the requested number of inputs.
     for (unsigned i = 0; i < numberOfInputs; ++i)
-        addInput(std::make_unique<AudioNodeInput>(this));
+        addInput(makeUnique<AudioNodeInput>(this));
 
-    addOutput(std::make_unique<AudioNodeOutput>(this, 1));
-
-    setNodeType(NodeTypeChannelMerger);
+    addOutput(makeUnique<AudioNodeOutput>(this, 1));
 
     initialize();
 }
 
 void ChannelMergerNode::process(size_t framesToProcess)
