diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/PublicKeyCredentialRequestOptions.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/PublicKeyCredentialRequestOptions.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/PublicKeyCredentialRequestOptions.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/PublicKeyCredentialRequestOptions.h
@@ -25,10 +25,11 @@
 
 #pragma once
 
 #if ENABLE(WEB_AUTHN)
 
+#include "AuthenticationExtensionsClientInputs.h"
 #include "BufferSource.h"
 #include "PublicKeyCredentialDescriptor.h"
 #include "UserVerificationRequirement.h"
 #include <wtf/Forward.h>
 
@@ -38,20 +39,21 @@
     BufferSource challenge;
     Optional<unsigned> timeout;
     mutable String rpId;
     Vector<PublicKeyCredentialDescriptor> allowCredentials;
     UserVerificationRequirement userVerification { UserVerificationRequirement::Preferred };
+    mutable Optional<AuthenticationExtensionsClientInputs> extensions;
 
     template<class Encoder> void encode(Encoder&) const;
     template<class Decoder> static Optional<PublicKeyCredentialRequestOptions> decode(Decoder&);
 };
 
 // Not every member is encoded.
 template<class Encoder>
 void PublicKeyCredentialRequestOptions::encode(Encoder& encoder) const
 {
-    encoder << timeout << rpId << allowCredentials << userVerification;
+    encoder << timeout << rpId << allowCredentials << userVerification << extensions;
 }
 
 template<class Decoder>
 Optional<PublicKeyCredentialRequestOptions> PublicKeyCredentialRequestOptions::decode(Decoder& decoder)
 {
@@ -72,10 +74,16 @@
     decoder >> userVerification;
     if (!userVerification)
         return WTF::nullopt;
     result.userVerification = WTFMove(*userVerification);
 
+    Optional<Optional<AuthenticationExtensionsClientInputs>> extensions;
+    decoder >> extensions;
+    if (!extensions)
+        return WTF::nullopt;
+    result.extensions = WTFMove(*extensions);
+
     return result;
 }
 
 } // namespace WebCore
 
