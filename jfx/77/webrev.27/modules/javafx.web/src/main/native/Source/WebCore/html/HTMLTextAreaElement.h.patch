diff a/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLTextAreaElement.h b/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLTextAreaElement.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLTextAreaElement.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLTextAreaElement.h
@@ -72,12 +72,12 @@
 
     enum WrapMethod { NoWrap, SoftWrap, HardWrap };
 
     void didAddUserAgentShadowRoot(ShadowRoot&) final;
 
-    void maxLengthAttributeChanged(const AtomicString& newValue);
-    void minLengthAttributeChanged(const AtomicString& newValue);
+    void maxLengthAttributeChanged(const AtomString& newValue);
+    void minLengthAttributeChanged(const AtomString& newValue);
 
     void handleBeforeTextInsertedEvent(BeforeTextInsertedEvent&) const;
     static String sanitizeUserInputValue(const String&, unsigned maxLength);
     void updateValue() const;
     void setNonDirtyValue(const String&);
@@ -96,25 +96,28 @@
     void subtreeHasChanged() final;
 
     bool isEnumeratable() const final { return true; }
     bool supportLabels() const final { return true; }
 
-    const AtomicString& formControlType() const final;
+    bool isInteractiveContent() const final { return true; }
+
+    const AtomString& formControlType() const final;
 
     FormControlState saveFormControlState() const final;
     void restoreFormControlState(const FormControlState&) final;
 
     bool isTextField() const final { return true; }
 
     void childrenChanged(const ChildChange&) final;
-    void parseAttribute(const QualifiedName&, const AtomicString&) final;
+    void parseAttribute(const QualifiedName&, const AtomString&) final;
     bool isPresentationAttribute(const QualifiedName&) const final;
-    void collectStyleForPresentationAttribute(const QualifiedName&, const AtomicString&, MutableStyleProperties&) final;
+    void collectStyleForPresentationAttribute(const QualifiedName&, const AtomString&, MutableStyleProperties&) final;
     RenderPtr<RenderElement> createElementRenderer(RenderStyle&&, const RenderTreePosition&) final;
     bool appendFormData(DOMFormData&, bool) final;
     void reset() final;
     bool hasCustomFocusLogic() const final;
+    int defaultTabIndex() const final;
     bool isMouseFocusable() const final;
     bool isKeyboardFocusable(KeyboardEvent*) const final;
     void updateFocusAppearance(SelectionRestorationMode, SelectionRevealMode) final;
 
     void accessKeyAction(bool sendMouseEvents) final;
