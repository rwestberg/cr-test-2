diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/DragImage.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/DragImage.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/DragImage.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/DragImage.cpp
@@ -100,24 +100,19 @@
 static DragImageRef createDragImageFromSnapshot(std::unique_ptr<ImageBuffer> snapshot, Node* node)
 {
     if (!snapshot)
         return nullptr;
 
-    ImageOrientationDescription orientation;
-#if ENABLE(CSS_IMAGE_ORIENTATION)
+    ImageOrientation orientation;
     if (node) {
         RenderObject* renderer = node->renderer();
         if (!renderer || !is<RenderElement>(renderer))
             return nullptr;
 
-        auto& renderElement = downcast<RenderElement>(*renderer);
-        orientation.setRespectImageOrientation(renderElement.shouldRespectImageOrientation());
-        orientation.setImageOrientationEnum(renderElement.style().imageOrientation());
+        orientation = downcast<RenderElement>(*renderer).imageOrientation();
     }
-#else
-    UNUSED_PARAM(node);
-#endif
+
     RefPtr<Image> image = ImageBuffer::sinkIntoImage(WTFMove(snapshot), PreserveResolution::Yes);
     if (!image)
         return nullptr;
     return createDragImageFromImage(image.get(), orientation);
 }
@@ -303,11 +298,11 @@
 {
     notImplemented();
     return nullptr;
 }
 
-DragImageRef createDragImageFromImage(Image*, ImageOrientationDescription)
+DragImageRef createDragImageFromImage(Image*, ImageOrientation)
 {
     notImplemented();
     return nullptr;
 }
 
