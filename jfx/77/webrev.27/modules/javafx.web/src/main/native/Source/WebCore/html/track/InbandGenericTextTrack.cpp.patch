diff a/modules/javafx.web/src/main/native/Source/WebCore/html/track/InbandGenericTextTrack.cpp b/modules/javafx.web/src/main/native/Source/WebCore/html/track/InbandGenericTextTrack.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/track/InbandGenericTextTrack.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/track/InbandGenericTextTrack.cpp
@@ -32,14 +32,17 @@
 #include "HTMLMediaElement.h"
 #include "InbandTextTrackPrivate.h"
 #include "Logging.h"
 #include "VTTRegionList.h"
 #include <math.h>
+#include <wtf/IsoMallocInlines.h>
 #include <wtf/text/CString.h>
 
 namespace WebCore {
 
+WTF_MAKE_ISO_ALLOCATED_IMPL(InbandGenericTextTrack);
+
 void GenericTextTrackCueMap::add(GenericCueData& cueData, TextTrackCueGeneric& cue)
 {
     m_dataToCueMap.add(&cueData, &cue);
     m_cueToDataMap.add(&cue, &cueData);
 }
@@ -123,15 +126,15 @@
         return;
 
     auto cue = TextTrackCueGeneric::create(*scriptExecutionContext(), cueData.startTime(), cueData.endTime(), cueData.content());
     updateCueFromCueData(cue.get(), cueData);
     if (hasCue(cue.ptr(), TextTrackCue::IgnoreDuration)) {
-        DEBUG_LOG(LOGIDENTIFIER, "ignoring already added cue: ", cue.get());
+        INFO_LOG(LOGIDENTIFIER, "ignoring already added cue: ", cue.get());
         return;
     }
 
-    DEBUG_LOG(LOGIDENTIFIER, "added cue: ", cue.get());
+    INFO_LOG(LOGIDENTIFIER, "added cue: ", cue.get());
 
     if (cueData.status() != GenericCueData::Complete)
         m_cueMap.add(cueData, cue);
 
     addCue(WTFMove(cue));
@@ -151,14 +154,14 @@
 
 void InbandGenericTextTrack::removeGenericCue(GenericCueData& cueData)
 {
     auto cue = makeRefPtr(m_cueMap.find(cueData));
     if (cue) {
-        DEBUG_LOG(LOGIDENTIFIER, *cue);
+        INFO_LOG(LOGIDENTIFIER, *cue);
         removeCue(*cue);
     } else
-        DEBUG_LOG(LOGIDENTIFIER, "UNABLE to find cue: ", cueData);
+        INFO_LOG(LOGIDENTIFIER, "UNABLE to find cue: ", cueData);
 
 }
 
 ExceptionOr<void> InbandGenericTextTrack::removeCue(TextTrackCue& cue)
 {
@@ -169,11 +172,11 @@
 }
 
 WebVTTParser& InbandGenericTextTrack::parser()
 {
     if (!m_webVTTParser)
-        m_webVTTParser = std::make_unique<WebVTTParser>(static_cast<WebVTTParserClient*>(this), scriptExecutionContext());
+        m_webVTTParser = makeUnique<WebVTTParser>(static_cast<WebVTTParserClient*>(this), scriptExecutionContext());
     return *m_webVTTParser;
 }
 
 void InbandGenericTextTrack::parseWebVTTCueData(const ISOWebVTTCue& cueData)
 {
@@ -192,15 +195,15 @@
 
     for (auto& cueData : cues) {
         auto vttCue = VTTCue::create(*scriptExecutionContext(), *cueData);
 
         if (hasCue(vttCue.ptr(), TextTrackCue::IgnoreDuration)) {
-            DEBUG_LOG(LOGIDENTIFIER, "ignoring already added cue: ", vttCue.get());
+            INFO_LOG(LOGIDENTIFIER, "ignoring already added cue: ", vttCue.get());
             return;
         }
 
-        DEBUG_LOG(LOGIDENTIFIER, vttCue.get());
+        INFO_LOG(LOGIDENTIFIER, vttCue.get());
 
         addCue(WTFMove(vttCue));
     }
 }
 
