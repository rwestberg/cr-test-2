diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GradientImage.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GradientImage.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GradientImage.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GradientImage.cpp
@@ -37,25 +37,25 @@
     setContainerSize(size);
 }
 
 GradientImage::~GradientImage() = default;
 
-ImageDrawResult GradientImage::draw(GraphicsContext& destContext, const FloatRect& destRect, const FloatRect& srcRect, CompositeOperator compositeOp, BlendMode blendMode, DecodingMode, ImageOrientationDescription)
+ImageDrawResult GradientImage::draw(GraphicsContext& destContext, const FloatRect& destRect, const FloatRect& srcRect, const ImagePaintingOptions& options)
 {
     GraphicsContextStateSaver stateSaver(destContext);
-    destContext.setCompositeOperation(compositeOp, blendMode);
+    destContext.setCompositeOperation(options.compositeOperator(), options.blendMode());
     destContext.clip(destRect);
     destContext.translate(destRect.location());
     if (destRect.size() != srcRect.size())
         destContext.scale(destRect.size() / srcRect.size());
     destContext.translate(-srcRect.location());
     destContext.fillRect(FloatRect(FloatPoint(), size()), m_gradient.get());
     return ImageDrawResult::DidDraw;
 }
 
 void GradientImage::drawPattern(GraphicsContext& destContext, const FloatRect& destRect, const FloatRect& srcRect, const AffineTransform& patternTransform,
-    const FloatPoint& phase, const FloatSize& spacing, CompositeOperator compositeOp, BlendMode blendMode)
+    const FloatPoint& phase, const FloatSize& spacing, const ImagePaintingOptions& options)
 {
     // Allow the generator to provide visually-equivalent tiling parameters for better performance.
     FloatSize adjustedSize = size();
     FloatRect adjustedSrcRect = srcRect;
     m_gradient->adjustParametersForTiledDrawing(adjustedSize, adjustedSrcRect, spacing);
@@ -89,11 +89,11 @@
     }
 
     destContext.setDrawLuminanceMask(false);
 
     // Tile the image buffer into the context.
-    m_cachedImage->drawPattern(destContext, destRect, adjustedSrcRect, adjustedPatternCTM, phase, spacing, compositeOp, blendMode);
+    m_cachedImage->drawPattern(destContext, destRect, adjustedSrcRect, adjustedPatternCTM, phase, spacing, options);
 
 }
 
 void GradientImage::dump(WTF::TextStream& ts) const
 {
