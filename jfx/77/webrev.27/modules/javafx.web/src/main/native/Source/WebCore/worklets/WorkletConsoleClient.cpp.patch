diff a/modules/javafx.web/src/main/native/Source/WebCore/worklets/WorkletConsoleClient.cpp b/modules/javafx.web/src/main/native/Source/WebCore/worklets/WorkletConsoleClient.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/worklets/WorkletConsoleClient.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/worklets/WorkletConsoleClient.cpp
@@ -46,17 +46,19 @@
 
 void WorkletConsoleClient::messageWithTypeAndLevel(MessageType type, MessageLevel level, JSC::ExecState* exec, Ref<Inspector::ScriptArguments>&& arguments)
 {
     String messageText;
     arguments->getFirstArgumentAsString(messageText);
-    auto message = std::make_unique<Inspector::ConsoleMessage>(MessageSource::ConsoleAPI, type, level, messageText, WTFMove(arguments), exec);
+    auto message = makeUnique<Inspector::ConsoleMessage>(MessageSource::ConsoleAPI, type, level, messageText, WTFMove(arguments), exec);
     m_workletGlobalScope.addConsoleMessage(WTFMove(message));
 }
 
-void WorkletConsoleClient::count(JSC::ExecState*, Ref<ScriptArguments>&&) { }
+void WorkletConsoleClient::count(JSC::ExecState*, const String&) { }
+void WorkletConsoleClient::countReset(JSC::ExecState*, const String&) { }
 
 void WorkletConsoleClient::time(JSC::ExecState*, const String&) { }
+void WorkletConsoleClient::timeLog(JSC::ExecState*, const String&, Ref<ScriptArguments>&&) { }
 void WorkletConsoleClient::timeEnd(JSC::ExecState*, const String&) { }
 
 void WorkletConsoleClient::profile(JSC::ExecState*, const String&) { }
 void WorkletConsoleClient::profileEnd(JSC::ExecState*, const String&) { }
 
@@ -64,7 +66,9 @@
 void WorkletConsoleClient::timeStamp(JSC::ExecState*, Ref<ScriptArguments>&&) { }
 
 void WorkletConsoleClient::record(JSC::ExecState*, Ref<ScriptArguments>&&) { }
 void WorkletConsoleClient::recordEnd(JSC::ExecState*, Ref<ScriptArguments>&&) { }
 
+void WorkletConsoleClient::screenshot(JSC::ExecState*, Ref<ScriptArguments>&&) { }
+
 } // namespace WebCore
 #endif
