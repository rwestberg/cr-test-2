diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/API/JSValueRef.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/API/JSValueRef.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/API/JSValueRef.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/API/JSValueRef.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2006, 2007, 2016 Apple Inc. All rights reserved.
+ * Copyright (C) 2006-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -34,10 +34,11 @@
 #include "JSCInlines.h"
 #include "JSCJSValue.h"
 #include "JSCallbackObject.h"
 #include "JSGlobalObject.h"
 #include "JSONObject.h"
+#include "JSObjectRefPrivate.h"
 #include "JSString.h"
 #include "LiteralParser.h"
 #include "Protect.h"
 #include <algorithm>
 #include <wtf/Assertions.h>
@@ -343,13 +344,14 @@
     if (!ctx) {
         ASSERT_NOT_REACHED();
         return 0;
     }
     ExecState* exec = toJS(ctx);
-    JSLockHolder locker(exec);
+    VM& vm = exec->vm();
+    JSLockHolder locker(vm);
 
-    return toRef(exec, jsString(exec, string ? string->string() : String()));
+    return toRef(exec, jsString(vm, string ? string->string() : String()));
 }
 
 JSValueRef JSValueMakeFromJSONString(JSContextRef ctx, JSStringRef string)
 {
     if (!ctx) {
