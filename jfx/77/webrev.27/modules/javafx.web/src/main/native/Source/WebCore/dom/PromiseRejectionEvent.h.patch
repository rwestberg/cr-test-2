diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/PromiseRejectionEvent.h b/modules/javafx.web/src/main/native/Source/WebCore/dom/PromiseRejectionEvent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/PromiseRejectionEvent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/PromiseRejectionEvent.h
@@ -37,11 +37,11 @@
     struct Init : EventInit {
         RefPtr<DOMPromise> promise;
         JSC::JSValue reason;
     };
 
-    static Ref<PromiseRejectionEvent> create(const AtomicString& type, const Init& initializer, IsTrusted isTrusted = IsTrusted::No)
+    static Ref<PromiseRejectionEvent> create(const AtomString& type, const Init& initializer, IsTrusted isTrusted = IsTrusted::No)
     {
         return adoptRef(*new PromiseRejectionEvent(type, initializer, isTrusted));
     }
 
     virtual ~PromiseRejectionEvent();
@@ -50,11 +50,11 @@
     const JSValueInWrappedObject& reason() const { return m_reason; }
 
     EventInterface eventInterface() const override { return PromiseRejectionEventInterfaceType; }
 
 private:
-    PromiseRejectionEvent(const AtomicString&, const Init&, IsTrusted);
+    PromiseRejectionEvent(const AtomString&, const Init&, IsTrusted);
 
     Ref<DOMPromise> m_promise;
     JSValueInWrappedObject m_reason;
 };
 
