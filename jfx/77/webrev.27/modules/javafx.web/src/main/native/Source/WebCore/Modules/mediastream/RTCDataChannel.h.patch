diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCDataChannel.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCDataChannel.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCDataChannel.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCDataChannel.h
@@ -45,10 +45,11 @@
 
 class Blob;
 class RTCPeerConnectionHandler;
 
 class RTCDataChannel final : public ActiveDOMObject, public RTCDataChannelHandlerClient, public EventTargetWithInlineData {
+    WTF_MAKE_ISO_ALLOCATED(RTCDataChannel);
 public:
     static Ref<RTCDataChannel> create(ScriptExecutionContext&, std::unique_ptr<RTCDataChannelHandler>&&, String&&, RTCDataChannelInit&&);
 
     bool ordered() const { return *m_options.ordered; }
     Optional<unsigned short> maxPacketLifeTime() const { return m_options.maxPacketLifeTime; }
@@ -61,12 +62,12 @@
     RTCDataChannelState readyState() const {return m_readyState; }
     size_t bufferedAmount() const;
     size_t bufferedAmountLowThreshold() const { return m_bufferedAmountLowThreshold; }
     void setBufferedAmountLowThreshold(size_t value) { m_bufferedAmountLowThreshold = value; }
 
-    const AtomicString& binaryType() const;
-    ExceptionOr<void> setBinaryType(const AtomicString&);
+    const AtomString& binaryType() const;
+    ExceptionOr<void> setBinaryType(const AtomString&);
 
     ExceptionOr<void> send(const String&);
     ExceptionOr<void> send(JSC::ArrayBuffer&);
     ExceptionOr<void> send(JSC::ArrayBufferView&);
     ExceptionOr<void> send(Blob&);
