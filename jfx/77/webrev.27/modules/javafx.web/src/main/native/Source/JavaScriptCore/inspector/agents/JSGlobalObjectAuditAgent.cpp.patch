diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/agents/JSGlobalObjectAuditAgent.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/agents/JSGlobalObjectAuditAgent.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/agents/JSGlobalObjectAuditAgent.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/agents/JSGlobalObjectAuditAgent.cpp
@@ -42,21 +42,23 @@
     : InspectorAuditAgent(context)
     , m_globalObject(context.inspectedGlobalObject)
 {
 }
 
+JSGlobalObjectAuditAgent::~JSGlobalObjectAuditAgent() = default;
+
 InjectedScript JSGlobalObjectAuditAgent::injectedScriptForEval(ErrorString& errorString, const int* executionContextId)
 {
     if (executionContextId) {
-        errorString = "Execution context id is not supported for JSContexts as there is only one execution context."_s;
+        errorString = "executionContextId is not supported for JSContexts as there is only one execution context"_s;
         return InjectedScript();
     }
 
     JSC::ExecState* scriptState = m_globalObject.globalExec();
     InjectedScript injectedScript = injectedScriptManager().injectedScriptFor(scriptState);
     if (injectedScript.hasNoValue())
-        errorString = "Internal error: main world execution context not found."_s;
+        errorString = "Internal error: main world execution context not found"_s;
 
     return injectedScript;
 }
 
 } // namespace Inspector
