diff a/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLPlugInImageElement.h b/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLPlugInImageElement.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLPlugInImageElement.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLPlugInImageElement.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2008-2017 Apple Inc. All rights reserved.
+ * Copyright (C) 2008-2019 Apple Inc. All rights reserved.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Library General Public
  * License as published by the Free Software Foundation; either
  * version 2 of the License, or (at your option) any later version.
@@ -83,23 +83,24 @@
 
     bool isImageType();
     HTMLImageLoader* imageLoader() { return m_imageLoader.get(); }
     void updateImageLoaderWithNewURLSoon();
 
-    bool allowedToLoadFrameURL(const String& url);
-    bool wouldLoadAsPlugIn(const String& url, const String& serviceType);
+    bool canLoadURL(const String& relativeURL) const;
+    bool wouldLoadAsPlugIn(const String& relativeURL, const String& serviceType);
 
     void scheduleUpdateForAfterStyleResolution();
 
     String m_serviceType;
     String m_url;
 
 private:
     bool isPlugInImageElement() const final { return true; }
     bool isRestartedPlugin() const final { return m_isRestartedPlugin; }
 
-    bool allowedToLoadPluginContent(const String& url, const String& mimeType) const;
+    bool canLoadPlugInContent(const String& relativeURL, const String& mimeType) const;
+    bool canLoadURL(const URL&) const;
 
     void didAddUserAgentShadowRoot(ShadowRoot&) final;
 
     RenderPtr<RenderElement> createElementRenderer(RenderStyle&&, const RenderTreePosition&) override;
     bool childShouldCreateRenderer(const Node&) const override;
