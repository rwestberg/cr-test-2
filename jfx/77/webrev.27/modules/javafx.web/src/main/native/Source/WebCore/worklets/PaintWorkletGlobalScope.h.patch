diff a/modules/javafx.web/src/main/native/Source/WebCore/worklets/PaintWorkletGlobalScope.h b/modules/javafx.web/src/main/native/Source/WebCore/worklets/PaintWorkletGlobalScope.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/worklets/PaintWorkletGlobalScope.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/worklets/PaintWorkletGlobalScope.h
@@ -38,21 +38,23 @@
 
 namespace WebCore {
 class JSDOMGlobalObject;
 
 class PaintWorkletGlobalScope : public WorkletGlobalScope {
+    WTF_MAKE_ISO_ALLOCATED(PaintWorkletGlobalScope);
 public:
     static Ref<PaintWorkletGlobalScope> create(Document&, ScriptSourceCode&&);
 
     ExceptionOr<void> registerPaint(JSC::ExecState&, JSDOMGlobalObject&, const String& name, JSC::Strong<JSC::JSObject> paintConstructor);
     double devicePixelRatio() const;
 
     // All paint definitions must be destroyed before the vm is destroyed, because otherwise they will point to freed memory.
     struct PaintDefinition : public CanMakeWeakPtr<PaintDefinition> {
-        PaintDefinition(const AtomicString& name, JSC::JSObject* paintConstructor, Ref<CSSPaintCallback>&&, Vector<String>&& inputProperties, Vector<String>&& inputArguments);
+        WTF_MAKE_STRUCT_FAST_ALLOCATED;
+        PaintDefinition(const AtomString& name, JSC::JSObject* paintConstructor, Ref<CSSPaintCallback>&&, Vector<String>&& inputProperties, Vector<String>&& inputArguments);
 
-        const AtomicString name;
+        const AtomString name;
         const JSC::JSObject* const paintConstructor;
         const Ref<CSSPaintCallback> paintCallback;
         const Vector<String> inputProperties;
         const Vector<String> inputArguments;
     };
