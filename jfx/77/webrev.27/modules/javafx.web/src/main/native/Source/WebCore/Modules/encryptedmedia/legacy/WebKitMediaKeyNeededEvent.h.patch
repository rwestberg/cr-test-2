diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/legacy/WebKitMediaKeyNeededEvent.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/legacy/WebKitMediaKeyNeededEvent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/legacy/WebKitMediaKeyNeededEvent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/legacy/WebKitMediaKeyNeededEvent.h
@@ -34,31 +34,31 @@
 
 class WebKitMediaKeyNeededEvent : public Event {
 public:
     virtual ~WebKitMediaKeyNeededEvent();
 
-    static Ref<WebKitMediaKeyNeededEvent> create(const AtomicString& type, Uint8Array* initData)
+    static Ref<WebKitMediaKeyNeededEvent> create(const AtomString& type, Uint8Array* initData)
     {
         return adoptRef(*new WebKitMediaKeyNeededEvent(type, initData));
     }
 
     struct Init : EventInit {
         RefPtr<Uint8Array> initData;
     };
 
-    static Ref<WebKitMediaKeyNeededEvent> create(const AtomicString& type, const Init& initializer, IsTrusted isTrusted = IsTrusted::No)
+    static Ref<WebKitMediaKeyNeededEvent> create(const AtomString& type, const Init& initializer, IsTrusted isTrusted = IsTrusted::No)
     {
         return adoptRef(*new WebKitMediaKeyNeededEvent(type, initializer, isTrusted));
     }
 
     EventInterface eventInterface() const override;
 
     Uint8Array* initData() const { return m_initData.get(); }
 
 private:
-    WebKitMediaKeyNeededEvent(const AtomicString& type, Uint8Array* initData);
-    WebKitMediaKeyNeededEvent(const AtomicString& type, const Init&, IsTrusted);
+    WebKitMediaKeyNeededEvent(const AtomString& type, Uint8Array* initData);
+    WebKitMediaKeyNeededEvent(const AtomString& type, const Init&, IsTrusted);
 
     RefPtr<Uint8Array> m_initData;
 };
 
 } // namespace WebCore
