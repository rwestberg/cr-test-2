diff a/modules/javafx.web/src/main/native/Source/WebCore/loader/NetscapePlugInStreamLoader.cpp b/modules/javafx.web/src/main/native/Source/WebCore/loader/NetscapePlugInStreamLoader.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/loader/NetscapePlugInStreamLoader.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/loader/NetscapePlugInStreamLoader.cpp
@@ -27,10 +27,11 @@
  */
 
 #include "config.h"
 #include "NetscapePlugInStreamLoader.h"
 
+#include "CustomHeaderFields.h"
 #include "DocumentLoader.h"
 #include "FrameLoader.h"
 #include "FrameLoaderClient.h"
 #include <wtf/CompletionHandler.h>
 #include <wtf/Ref.h>
@@ -41,12 +42,12 @@
 
 namespace WebCore {
 
 // FIXME: Skip Content Security Policy check when associated plugin element is in a user agent shadow tree.
 // See <https://bugs.webkit.org/show_bug.cgi?id=146663>.
-NetscapePlugInStreamLoader::NetscapePlugInStreamLoader(DocumentLoader& documentLoader, NetscapePlugInStreamLoaderClient& client)
-    : ResourceLoader(documentLoader, ResourceLoaderOptions(
+NetscapePlugInStreamLoader::NetscapePlugInStreamLoader(Frame& frame, NetscapePlugInStreamLoaderClient& client)
+    : ResourceLoader(frame, ResourceLoaderOptions(
         SendCallbackPolicy::SendCallbacks,
         ContentSniffingPolicy::SniffContent,
         DataBufferingPolicy::DoNotBufferData,
         StoredCredentialsPolicy::Use,
         ClientCredentialPolicy::MayAskClientForCredentials,
@@ -58,19 +59,19 @@
         DefersLoadingPolicy::AllowDefersLoading,
         CachingPolicy::AllowCaching))
     , m_client(&client)
 {
 #if ENABLE(CONTENT_EXTENSIONS)
-    m_resourceType = ResourceType::PlugInStream;
+    m_resourceType = ContentExtensions::ResourceType::PlugInStream;
 #endif
 }
 
 NetscapePlugInStreamLoader::~NetscapePlugInStreamLoader() = default;
 
-void NetscapePlugInStreamLoader::create(DocumentLoader& documentLoader, NetscapePlugInStreamLoaderClient& client, ResourceRequest&& request, CompletionHandler<void(RefPtr<NetscapePlugInStreamLoader>&&)>&& completionHandler)
+void NetscapePlugInStreamLoader::create(Frame& frame, NetscapePlugInStreamLoaderClient& client, ResourceRequest&& request, CompletionHandler<void(RefPtr<NetscapePlugInStreamLoader>&&)>&& completionHandler)
 {
-    auto loader(adoptRef(*new NetscapePlugInStreamLoader(documentLoader, client)));
+    auto loader(adoptRef(*new NetscapePlugInStreamLoader(frame, client)));
     loader->init(WTFMove(request), [loader = loader.copyRef(), completionHandler = WTFMove(completionHandler)] (bool initialized) mutable {
         if (!initialized)
             return completionHandler(nullptr);
         completionHandler(WTFMove(loader));
     });
