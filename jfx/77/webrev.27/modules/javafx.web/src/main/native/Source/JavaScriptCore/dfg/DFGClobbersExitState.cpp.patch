diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGClobbersExitState.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGClobbersExitState.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGClobbersExitState.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGClobbersExitState.cpp
@@ -85,18 +85,18 @@
         // FIXME: https://bugs.webkit.org/show_bug.cgi?id=148440
         return false;
 
     case CreateActivation:
         // Like above, but with the activation allocation caveat.
-        return node->castOperand<SymbolTable*>()->singletonScope()->isStillValid();
+        return node->castOperand<SymbolTable*>()->singleton().isStillValid();
 
     case NewFunction:
     case NewGeneratorFunction:
     case NewAsyncGeneratorFunction:
     case NewAsyncFunction:
         // Like above, but with the JSFunction allocation caveat.
-        return node->castOperand<FunctionExecutable*>()->singletonFunction()->isStillValid();
+        return node->castOperand<FunctionExecutable*>()->singleton().isStillValid();
 
     default:
         // For all other nodes, we just care about whether they write to something other than SideState.
         bool result = false;
         clobberize(
