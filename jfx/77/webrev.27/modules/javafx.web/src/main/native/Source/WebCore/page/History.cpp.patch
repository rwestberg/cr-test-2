diff a/modules/javafx.web/src/main/native/Source/WebCore/page/History.cpp b/modules/javafx.web/src/main/native/Source/WebCore/page/History.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/History.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/History.cpp
@@ -37,15 +37,18 @@
 #include "NavigationScheduler.h"
 #include "Page.h"
 #include "ScriptController.h"
 #include "SecurityOrigin.h"
 #include <wtf/CheckedArithmetic.h>
+#include <wtf/IsoMallocInlines.h>
 #include <wtf/MainThread.h>
 #include <wtf/text/StringConcatenateNumbers.h>
 
 namespace WebCore {
 
+WTF_MAKE_ISO_ALLOCATED_IMPL(History);
+
 History::History(DOMWindow& window)
     : DOMWindowProperty(&window)
 {
 }
 
@@ -221,12 +224,12 @@
         mainHistory.m_currentStateObjectTimeSpanObjectsAdded = 0;
     }
 
     if (mainHistory.m_currentStateObjectTimeSpanObjectsAdded >= perStateObjectTimeSpanLimit) {
         if (stateObjectType == StateObjectType::Replace)
-            return Exception { SecurityError, makeString("Attempt to use history.replaceState() more than ", perStateObjectTimeSpanLimit, " times per ", FormattedNumber::fixedWidth(stateObjectTimeSpan.seconds(), 6), " seconds") };
-        return Exception { SecurityError, makeString("Attempt to use history.pushState() more than ", perStateObjectTimeSpanLimit, " times per ", FormattedNumber::fixedWidth(stateObjectTimeSpan.seconds(), 6), " seconds") };
+            return Exception { SecurityError, makeString("Attempt to use history.replaceState() more than ", perStateObjectTimeSpanLimit, " times per ", stateObjectTimeSpan.seconds(), " seconds") };
+        return Exception { SecurityError, makeString("Attempt to use history.pushState() more than ", perStateObjectTimeSpanLimit, " times per ", stateObjectTimeSpan.seconds(), " seconds") };
     }
 
     Checked<unsigned> titleSize = title.length();
     titleSize *= 2;
 
