diff a/modules/javafx.web/src/main/native/Source/WebCore/page/PerformanceMonitor.cpp b/modules/javafx.web/src/main/native/Source/WebCore/page/PerformanceMonitor.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/PerformanceMonitor.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/PerformanceMonitor.cpp
@@ -33,11 +33,11 @@
 #include "DiagnosticLoggingKeys.h"
 #include "Frame.h"
 #include "Logging.h"
 #include "Page.h"
 #include "PerformanceLogging.h"
-#include "PublicSuffix.h"
+#include "RegistrableDomain.h"
 
 namespace WebCore {
 
 #define RELEASE_LOG_IF_ALLOWED(channel, fmt, ...) RELEASE_LOG_IF(m_page.isAlwaysOnLoggingAllowed(), channel, "%p - PerformanceMonitor::" fmt, this, ##__VA_ARGS__)
 
@@ -146,20 +146,20 @@
 #if ENABLE(PUBLIC_SUFFIX_LIST)
     auto* document = page.mainFrame().document();
     if (!document)
         return;
 
-    String domain = topPrivatelyControlledDomain(document->url().host().toString());
-    if (domain.isEmpty())
+    RegistrableDomain registrableDomain { document->url() };
+    if (registrableDomain.isEmpty())
         return;
 
     switch (reason) {
     case ReportingReason::HighCPUUsage:
-        page.diagnosticLoggingClient().logDiagnosticMessageWithEnhancedPrivacy(DiagnosticLoggingKeys::domainCausingEnergyDrainKey(), domain, ShouldSample::No);
+        page.diagnosticLoggingClient().logDiagnosticMessageWithEnhancedPrivacy(DiagnosticLoggingKeys::domainCausingEnergyDrainKey(), registrableDomain.string(), ShouldSample::No);
         break;
     case ReportingReason::HighMemoryUsage:
-        page.diagnosticLoggingClient().logDiagnosticMessageWithEnhancedPrivacy(DiagnosticLoggingKeys::domainCausingJetsamKey(), domain, ShouldSample::No);
+        page.diagnosticLoggingClient().logDiagnosticMessageWithEnhancedPrivacy(DiagnosticLoggingKeys::domainCausingJetsamKey(), registrableDomain.string(), ShouldSample::No);
         break;
     }
 #else
     UNUSED_PARAM(page);
     UNUSED_PARAM(reason);
