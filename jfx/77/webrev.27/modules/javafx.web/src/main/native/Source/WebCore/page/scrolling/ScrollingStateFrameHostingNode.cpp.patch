diff a/modules/javafx.web/src/main/native/Source/WebCore/page/scrolling/ScrollingStateFrameHostingNode.cpp b/modules/javafx.web/src/main/native/Source/WebCore/page/scrolling/ScrollingStateFrameHostingNode.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/scrolling/ScrollingStateFrameHostingNode.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/scrolling/ScrollingStateFrameHostingNode.cpp
@@ -24,11 +24,11 @@
  */
 
 #include "config.h"
 #include "ScrollingStateFrameHostingNode.h"
 
-#if ENABLE(ASYNC_SCROLLING) || USE(COORDINATED_GRAPHICS)
+#if ENABLE(ASYNC_SCROLLING)
 
 #include "ScrollingStateTree.h"
 #include <wtf/text/TextStream.h>
 
 namespace WebCore {
@@ -55,15 +55,15 @@
 Ref<ScrollingStateNode> ScrollingStateFrameHostingNode::clone(ScrollingStateTree& adoptiveTree)
 {
     return adoptRef(*new ScrollingStateFrameHostingNode(*this, adoptiveTree));
 }
 
-void ScrollingStateFrameHostingNode::setAllPropertiesChanged()
+void ScrollingStateFrameHostingNode::setPropertyChangedBitsAfterReattach()
 {
     setPropertyChangedBit(ParentRelativeScrollableRect);
 
-    ScrollingStateNode::setAllPropertiesChanged();
+    ScrollingStateNode::setPropertyChangedBitsAfterReattach();
 }
 
 void ScrollingStateFrameHostingNode::setParentRelativeScrollableRect(const LayoutRect& parentRelativeScrollableRect)
 {
     if (m_parentRelativeScrollableRect == parentRelativeScrollableRect)
@@ -82,6 +82,6 @@
         ts.dumpProperty("parent relative scrollable rect", m_parentRelativeScrollableRect);
 }
 
 } // namespace WebCore
 
-#endif // ENABLE(ASYNC_SCROLLING) || USE(COORDINATED_GRAPHICS)
+#endif // ENABLE(ASYNC_SCROLLING)
