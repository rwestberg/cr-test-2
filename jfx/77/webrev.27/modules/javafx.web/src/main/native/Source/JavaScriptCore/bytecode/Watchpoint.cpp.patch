diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/Watchpoint.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/Watchpoint.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/Watchpoint.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/Watchpoint.cpp
@@ -24,11 +24,18 @@
  */
 
 #include "config.h"
 #include "Watchpoint.h"
 
+#include "AdaptiveInferredPropertyValueWatchpointBase.h"
+#include "CodeBlockJettisoningWatchpoint.h"
+#include "DFGAdaptiveStructureWatchpoint.h"
+#include "FunctionRareData.h"
 #include "HeapInlines.h"
+#include "LLIntPrototypeLoadAdaptiveStructureWatchpoint.h"
+#include "ObjectToStringAdaptiveStructureWatchpoint.h"
+#include "StructureStubClearingWatchpoint.h"
 #include "VM.h"
 #include <wtf/CompilationThread.h>
 
 namespace JSC {
 
@@ -50,11 +57,18 @@
 }
 
 void Watchpoint::fire(VM& vm, const FireDetail& detail)
 {
     RELEASE_ASSERT(!isOnList());
-    fireInternal(vm, detail);
+    switch (m_type) {
+#define JSC_DEFINE_WATCHPOINT_DISPATCH(type, cast) \
+    case Type::type: \
+        static_cast<cast*>(this)->fireInternal(vm, detail); \
+        break;
+    JSC_WATCHPOINT_TYPES(JSC_DEFINE_WATCHPOINT_DISPATCH)
+#undef JSC_DEFINE_WATCHPOINT_DISPATCH
+    }
 }
 
 WatchpointSet::WatchpointSet(WatchpointState state)
     : m_state(state)
     , m_setIsNotEmpty(false)
