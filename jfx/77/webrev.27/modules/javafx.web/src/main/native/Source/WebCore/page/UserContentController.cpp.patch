diff a/modules/javafx.web/src/main/native/Source/WebCore/page/UserContentController.cpp b/modules/javafx.web/src/main/native/Source/WebCore/page/UserContentController.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/UserContentController.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/UserContentController.cpp
@@ -71,11 +71,11 @@
 }
 #endif
 
 void UserContentController::addUserScript(DOMWrapperWorld& world, std::unique_ptr<UserScript> userScript)
 {
-    auto& scriptsInWorld = m_userScripts.ensure(&world, [&] { return std::make_unique<UserScriptVector>(); }).iterator->value;
+    auto& scriptsInWorld = m_userScripts.ensure(&world, [&] { return makeUnique<UserScriptVector>(); }).iterator->value;
     scriptsInWorld->append(WTFMove(userScript));
 }
 
 void UserContentController::removeUserScript(DOMWrapperWorld& world, const URL& url)
 {
@@ -98,11 +98,11 @@
     m_userScripts.remove(&world);
 }
 
 void UserContentController::addUserStyleSheet(DOMWrapperWorld& world, std::unique_ptr<UserStyleSheet> userStyleSheet, UserStyleInjectionTime injectionTime)
 {
-    auto& styleSheetsInWorld = m_userStyleSheets.ensure(&world, [&] { return std::make_unique<UserStyleSheetVector>(); }).iterator->value;
+    auto& styleSheetsInWorld = m_userStyleSheets.ensure(&world, [&] { return makeUnique<UserStyleSheetVector>(); }).iterator->value;
     styleSheetsInWorld->append(WTFMove(userStyleSheet));
 
     if (injectionTime == InjectInExistingDocuments)
         invalidateInjectedStyleSheetCacheInAllFramesInAllPages();
 }
