diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/cv/PixelBufferConformerCV.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/cv/PixelBufferConformerCV.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/cv/PixelBufferConformerCV.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/cv/PixelBufferConformerCV.cpp
@@ -74,12 +74,14 @@
         return nullptr;
     }
 
     ++info->lockCount;
     void* address = CVPixelBufferGetBaseAddress(info->pixelBuffer.get());
-    verifyImageBufferIsBigEnough(address, CVPixelBufferGetDataSize(info->pixelBuffer.get()));
-    RELEASE_LOG_INFO(Media, "CVPixelBufferGetBytePointerCallback() returning bytePointer: %p, size: %zu", address, CVPixelBufferGetDataSize(info->pixelBuffer.get()));
+    size_t byteLength = CVPixelBufferGetBytesPerRow(info->pixelBuffer.get()) * CVPixelBufferGetHeight(info->pixelBuffer.get());
+
+    verifyImageBufferIsBigEnough(address, byteLength);
+    RELEASE_LOG_INFO(Media, "CVPixelBufferGetBytePointerCallback() returning bytePointer: %p, size: %zu", address, byteLength);
     return address;
 }
 
 static void CVPixelBufferReleaseBytePointerCallback(void* refcon, const void*)
 {
@@ -168,11 +170,11 @@
     }
 #endif
 
     CGBitmapInfo bitmapInfo = kCGBitmapByteOrder32Little | kCGImageAlphaFirst;
     size_t bytesPerRow = CVPixelBufferGetBytesPerRow(buffer.get());
-    size_t byteLength = CVPixelBufferGetDataSize(buffer.get());
+    size_t byteLength = bytesPerRow * height;
 
     ASSERT(byteLength);
     if (!byteLength)
         return nullptr;
 
