diff a/modules/javafx.web/src/main/native/Source/WebCore/loader/LinkHeader.cpp b/modules/javafx.web/src/main/native/Source/WebCore/loader/LinkHeader.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/loader/LinkHeader.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/loader/LinkHeader.cpp
@@ -163,10 +163,14 @@
         return LinkHeader::LinkParameterRev;
     if (equalLettersIgnoringASCIICase(name, "hreflang"))
         return LinkHeader::LinkParameterHreflang;
     if (equalLettersIgnoringASCIICase(name, "as"))
         return LinkHeader::LinkParameterAs;
+    if (equalLettersIgnoringASCIICase(name, "imagesrcset"))
+        return LinkHeader::LinkParameterImageSrcSet;
+    if (equalLettersIgnoringASCIICase(name, "imagesizes"))
+        return LinkHeader::LinkParameterImageSizes;
     return LinkHeader::LinkParameterUnknown;
 }
 
 // Before:
 //
@@ -262,31 +266,37 @@
     ASSERT(valueEnd >= valueStart);
     value = String(valueStart, valueEnd - valueStart);
     return !hasQuotes || completeQuotes;
 }
 
-void LinkHeader::setValue(LinkParameterName name, String value)
+void LinkHeader::setValue(LinkParameterName name, String&& value)
 {
     switch (name) {
     case LinkParameterRel:
         if (!m_rel)
-            m_rel = value;
+            m_rel = WTFMove(value);
         break;
     case LinkParameterAnchor:
         m_isValid = false;
         break;
     case LinkParameterCrossOrigin:
-        m_crossOrigin = value;
+        m_crossOrigin = WTFMove(value);
         break;
     case LinkParameterAs:
-        m_as = value;
+        m_as = WTFMove(value);
         break;
     case LinkParameterType:
-        m_mimeType = value;
+        m_mimeType = WTFMove(value);
         break;
     case LinkParameterMedia:
-        m_media = value;
+        m_media = WTFMove(value);
+        break;
+    case LinkParameterImageSrcSet:
+        m_imageSrcSet = WTFMove(value);
+        break;
+    case LinkParameterImageSizes:
+        m_imageSizes = WTFMove(value);
         break;
     case LinkParameterTitle:
     case LinkParameterRev:
     case LinkParameterHreflang:
     case LinkParameterUnknown:
@@ -334,11 +344,11 @@
             findNextHeader(position, end);
             m_isValid = false;
             return;
         }
 
-        setValue(parameterName, parameterValue);
+        setValue(parameterName, WTFMove(parameterValue));
     }
     findNextHeader(position, end);
 }
 
 LinkHeaderSet::LinkHeaderSet(const String& header)
