diff a/modules/javafx.web/src/main/native/Source/WebCore/layout/layouttree/LayoutContainer.h b/modules/javafx.web/src/main/native/Source/WebCore/layout/layouttree/LayoutContainer.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/layout/layouttree/LayoutContainer.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/layout/layouttree/LayoutContainer.h
@@ -27,22 +27,21 @@
 
 #if ENABLE(LAYOUT_FORMATTING_CONTEXT)
 
 #include "LayoutBox.h"
 #include <wtf/IsoMalloc.h>
-#include <wtf/WeakPtr.h>
 
 namespace WebCore {
 
 class RenderStyle;
 
 namespace Layout {
 
-class Container : public Box {
+class Container final : public Box {
     WTF_MAKE_ISO_ALLOCATED(Container);
 public:
-    Container(Optional<ElementAttributes>, RenderStyle&&, BaseTypeFlags);
+    Container(Optional<ElementAttributes>, RenderStyle&&, BaseTypeFlags = ContainerFlag);
 
     const Box* firstChild() const { return m_firstChild; }
     const Box* firstInFlowChild() const;
     const Box* firstInFlowOrFloatingChild() const;
     const Box* lastChild() const { return m_lastChild; }
@@ -51,20 +50,16 @@
 
     bool hasChild() const { return firstChild(); }
     bool hasInFlowChild() const { return firstInFlowChild(); }
     bool hasInFlowOrFloatingChild() const { return firstInFlowOrFloatingChild(); }
 
-    const Vector<WeakPtr<const Box>>& outOfFlowDescendants() const { return m_outOfFlowDescendants; }
-
     void setFirstChild(Box&);
     void setLastChild(Box&);
-    void addOutOfFlowDescendant(const Box&);
 
 private:
     Box* m_firstChild { nullptr };
     Box* m_lastChild { nullptr };
-    Vector<WeakPtr<const Box>> m_outOfFlowDescendants;
 };
 
 }
 }
 
