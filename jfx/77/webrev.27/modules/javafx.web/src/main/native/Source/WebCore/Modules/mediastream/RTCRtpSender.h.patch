diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCRtpSender.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCRtpSender.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCRtpSender.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCRtpSender.h
@@ -33,21 +33,26 @@
 #if ENABLE(WEB_RTC)
 
 #include "MediaStreamTrack.h"
 #include "PeerConnectionBackend.h"
 #include "RTCRtpSenderBackend.h"
+#include "RTCRtpTransceiverDirection.h"
 #include "ScriptWrappable.h"
+#include <wtf/WeakPtr.h>
 
 namespace WebCore {
 
 class PeerConnectionBackend;
+class RTCDTMFSender;
 struct RTCRtpCapabilities;
 
-class RTCRtpSender : public RefCounted<RTCRtpSender>, public ScriptWrappable {
+class RTCRtpSender final : public RefCounted<RTCRtpSender>, public ScriptWrappable, public CanMakeWeakPtr<RTCRtpSender> {
+    WTF_MAKE_ISO_ALLOCATED(RTCRtpSender);
 public:
     static Ref<RTCRtpSender> create(PeerConnectionBackend&, Ref<MediaStreamTrack>&&, Vector<String>&& mediaStreamIds, std::unique_ptr<RTCRtpSenderBackend>&&);
     static Ref<RTCRtpSender> create(PeerConnectionBackend&, String&& trackKind, Vector<String>&& mediaStreamIds, std::unique_ptr<RTCRtpSenderBackend>&&);
+    ~RTCRtpSender();
 
     static Optional<RTCRtpCapabilities> getCapabilities(ScriptExecutionContext&, const String& kind);
 
     MediaStreamTrack* track() { return m_track.get(); }
 
@@ -71,19 +76,23 @@
 
     void getStats(Ref<DeferredPromise>&&);
 
     bool isCreatedBy(const PeerConnectionBackend&) const;
 
+    RTCDTMFSender* dtmf();
+    Optional<RTCRtpTransceiverDirection> currentTransceiverDirection() const;
+
 private:
     RTCRtpSender(PeerConnectionBackend&, String&& trackKind, Vector<String>&& mediaStreamIds, std::unique_ptr<RTCRtpSenderBackend>&&);
 
     RefPtr<MediaStreamTrack> m_track;
     String m_trackId;
     String m_trackKind;
     Vector<String> m_mediaStreamIds;
     std::unique_ptr<RTCRtpSenderBackend> m_backend;
     WeakPtr<PeerConnectionBackend> m_connection;
+    RefPtr<RTCDTMFSender> m_dtmfSender;
 };
 
 } // namespace WebCore
 
 #endif // ENABLE(WEB_RTC)
