diff a/modules/javafx.web/src/main/native/Source/WebCore/html/parser/HTMLTokenizer.cpp b/modules/javafx.web/src/main/native/Source/WebCore/html/parser/HTMLTokenizer.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/parser/HTMLTokenizer.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/parser/HTMLTokenizer.cpp
@@ -1399,26 +1399,26 @@
     // FIXME: Add an assert about m_state.
     StringBuilder characters;
     characters.reserveCapacity(numberOfBufferedCharacters());
     characters.append('<');
     characters.append('/');
-    characters.append(m_temporaryBuffer.data(), m_temporaryBuffer.size());
+    characters.appendCharacters(m_temporaryBuffer.data(), m_temporaryBuffer.size());
     return characters.toString();
 }
 
-void HTMLTokenizer::updateStateFor(const AtomicString& tagName)
+void HTMLTokenizer::updateStateFor(const AtomString& tagName)
 {
     if (tagName == textareaTag || tagName == titleTag)
         m_state = RCDATAState;
     else if (tagName == plaintextTag)
         m_state = PLAINTEXTState;
     else if (tagName == scriptTag)
         m_state = ScriptDataState;
     else if (tagName == styleTag
         || tagName == iframeTag
         || tagName == xmpTag
-        || (tagName == noembedTag && m_options.pluginsEnabled)
+        || (tagName == noembedTag)
         || tagName == noframesTag
         || (tagName == noscriptTag && m_options.scriptEnabled))
         m_state = RAWTEXTState;
 }
 
