diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/sql/SQLiteFileSystem.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/sql/SQLiteFileSystem.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/sql/SQLiteFileSystem.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/sql/SQLiteFileSystem.h
@@ -42,20 +42,10 @@
 
 // A class that abstracts the file system related operations required
 // by the WebKit database code.
 class SQLiteFileSystem {
 public:
-    // Opens a database file.
-    //
-    // filemame - The name of the database file.
-    // database - The SQLite structure that represents the database stored
-    //            in the given file.
-    // forWebSQLDatabase - True, if and only if we're opening a Web SQL Database file.
-    //                     Used by Chromium to determine if the DB file needs to be opened
-    //                     using a custom VFS.
-    static int openDatabase(const String& filename, sqlite3** database, bool forWebSQLDatabase);
-
     // Creates an absolute file path given a directory and a file name.
     //
     // path - The directory.
     // fileName - The file name.
     WEBCORE_EXPORT static String appendDatabaseFileNameToPath(const String& path, const String& fileName);
@@ -88,10 +78,12 @@
     // Deletes a database file.
     //
     // fileName - The file name.
     WEBCORE_EXPORT static bool deleteDatabaseFile(const String& fileName);
 
+    WEBCORE_EXPORT static String computeHashForFileName(const String& fileName);
+
 #if PLATFORM(IOS_FAMILY)
     // Truncates a database file. Used when MobileSafariSettings deletes a database file,
     // since deleting the file nukes the POSIX file locks which would potentially cause Safari
     // to corrupt the new db if it's running in the background.
     static bool truncateDatabaseFile(sqlite3* database);
