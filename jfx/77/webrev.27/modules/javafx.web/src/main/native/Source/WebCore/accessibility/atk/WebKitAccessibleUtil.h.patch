diff a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/atk/WebKitAccessibleUtil.h b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/atk/WebKitAccessibleUtil.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/atk/WebKitAccessibleUtil.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/atk/WebKitAccessibleUtil.h
@@ -19,11 +19,11 @@
  * Boston, MA 02110-1301, USA.
  */
 
 #pragma once
 
-#if HAVE(ACCESSIBILITY)
+#if ENABLE(ACCESSIBILITY)
 
 #include <atk/atk.h>
 #include <wtf/text/WTFString.h>
 
 namespace WebCore {
@@ -37,25 +37,25 @@
 #define returnIfWebKitAccessibleIsInvalid(webkitAccessible) G_STMT_START { \
     if (!webkitAccessible || webkitAccessibleIsDetached(webkitAccessible)) \
         return; \
     auto& coreObject = webkitAccessibleGetAccessibilityObject(webkitAccessible); \
     if (!coreObject.document())                                         \
-            return; \
+        return;                                                         \
     coreObject.updateBackingStore();                                    \
-        if (webkitAccessibleIsDetached(webkitAccessible)) \
-            return; \
+    if (webkitAccessibleIsDetached(webkitAccessible))                   \
+        return;                                                         \
     ; } G_STMT_END
 
 #define returnValIfWebKitAccessibleIsInvalid(webkitAccessible, val) G_STMT_START { \
     if (!webkitAccessible || webkitAccessibleIsDetached(webkitAccessible)) \
-        return (val); \
+        return (val);                                                   \
     auto& coreObject = webkitAccessibleGetAccessibilityObject(webkitAccessible); \
     if (!coreObject.document())                                         \
-            return (val); \
+        return (val);                                                   \
     coreObject.updateBackingStore();                                    \
-        if (webkitAccessibleIsDetached(webkitAccessible)) \
-            return (val); \
+    if (webkitAccessibleIsDetached(webkitAccessible))                   \
+        return (val);                                                   \
     ; } G_STMT_END
 
 AtkAttributeSet* addToAtkAttributeSet(AtkAttributeSet*, const char* name, const char* value);
 
 void contentsRelativeToAtkCoordinateType(WebCore::AccessibilityObject*, AtkCoordType, WebCore::IntRect, gint* x, gint* y, gint* width = nullptr, gint* height = nullptr);
@@ -66,6 +66,6 @@
 
 bool selectionBelongsToObject(WebCore::AccessibilityObject*, WebCore::VisibleSelection&);
 
 WebCore::AccessibilityObject* objectFocusedAndCaretOffsetUnignored(WebCore::AccessibilityObject*, int& offset);
 
-#endif // HAVE(ACCESSIBILITY)
+#endif // ENABLE(ACCESSIBILITY)
