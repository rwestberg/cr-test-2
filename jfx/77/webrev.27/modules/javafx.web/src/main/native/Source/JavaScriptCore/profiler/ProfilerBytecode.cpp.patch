diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/profiler/ProfilerBytecode.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/profiler/ProfilerBytecode.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/profiler/ProfilerBytecode.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/profiler/ProfilerBytecode.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2012 Apple Inc. All rights reserved.
+ * Copyright (C) 2012-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -36,12 +36,12 @@
 JSValue Bytecode::toJS(ExecState* exec) const
 {
     VM& vm = exec->vm();
     JSObject* result = constructEmptyObject(exec);
     result->putDirect(vm, vm.propertyNames->bytecodeIndex, jsNumber(m_bytecodeIndex));
-    result->putDirect(vm, vm.propertyNames->opcode, jsString(exec, String::fromUTF8(opcodeNames[m_opcodeID])));
-    result->putDirect(vm, vm.propertyNames->description, jsString(exec, String::fromUTF8(m_description)));
+    result->putDirect(vm, vm.propertyNames->opcode, jsString(vm, String::fromUTF8(opcodeNames[m_opcodeID])));
+    result->putDirect(vm, vm.propertyNames->description, jsString(vm, String::fromUTF8(m_description)));
     return result;
 }
 
 } } // namespace JSC::Profiler
 
