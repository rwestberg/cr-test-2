diff a/modules/javafx.web/src/main/native/Source/WebKitLegacy/Storage/StorageThread.cpp b/modules/javafx.web/src/main/native/Source/WebKitLegacy/Storage/StorageThread.cpp
--- a/modules/javafx.web/src/main/native/Source/WebKitLegacy/Storage/StorageThread.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebKitLegacy/Storage/StorageThread.cpp
@@ -80,11 +80,11 @@
 
 void StorageThread::dispatch(Function<void ()>&& function)
 {
     ASSERT(isMainThread());
     ASSERT(!m_queue.killed() && m_thread);
-    m_queue.append(std::make_unique<Function<void ()>>(WTFMove(function)));
+    m_queue.append(makeUnique<Function<void ()>>(WTFMove(function)));
 }
 
 void StorageThread::terminate()
 {
     ASSERT(isMainThread());
@@ -92,11 +92,11 @@
     activeStorageThreads().remove(this);
     // Even in weird, exceptional cases, don't wait on a nonexistent thread to terminate.
     if (!m_thread)
         return;
 
-    m_queue.append(std::make_unique<Function<void ()>>([this] {
+    m_queue.append(makeUnique<Function<void ()>>([this] {
         performTerminate();
     }));
     m_thread->waitForCompletion();
     ASSERT(m_queue.killed());
     m_thread = nullptr;
