diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/ExecutionCounter.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/ExecutionCounter.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/ExecutionCounter.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/ExecutionCounter.cpp
@@ -73,19 +73,18 @@
     m_counter = std::numeric_limits<int32_t>::min();
 }
 
 double applyMemoryUsageHeuristics(int32_t value, CodeBlock* codeBlock)
 {
-#if ENABLE(JIT)
-    double multiplier =
-        ExecutableAllocator::memoryPressureMultiplier(
-            codeBlock->baselineAlternative()->predictedMachineCodeSize());
-#else
-    // This code path will probably not be taken, but if it is, we fake it.
     double multiplier = 1.0;
-    UNUSED_PARAM(codeBlock);
+    if (codeBlock) {
+#if ENABLE(JIT)
+        multiplier =
+            ExecutableAllocator::memoryPressureMultiplier(
+                codeBlock->baselineAlternative()->predictedMachineCodeSize());
 #endif
+    }
     ASSERT(multiplier >= 1.0);
     return multiplier * value;
 }
 
 int32_t applyMemoryUsageHeuristicsAndConvertToInt(int32_t value, CodeBlock* codeBlock)
@@ -159,11 +158,11 @@
         m_counter = 0;
         m_totalCount = trueTotalCount;
         return true;
     }
 
-    threshold = clippedThreshold(codeBlock->globalObject(), threshold);
+    threshold = clippedThreshold(codeBlock ? codeBlock->globalObject() : nullptr, threshold);
 
     m_counter = static_cast<int32_t>(-threshold);
 
     m_totalCount = trueTotalCount + threshold;
 
