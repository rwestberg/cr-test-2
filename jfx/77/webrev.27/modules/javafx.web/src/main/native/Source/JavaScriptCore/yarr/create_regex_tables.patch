diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/yarr/create_regex_tables b/modules/javafx.web/src/main/native/Source/JavaScriptCore/yarr/create_regex_tables
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/yarr/create_regex_tables
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/yarr/create_regex_tables
@@ -93,30 +93,33 @@
     function = "";
     function += ("std::unique_ptr<CharacterClass> %sCreate()\n" % name)
     function += ("{\n")
     if emitTables and classes["UseTable"]:
         if "Inverse" in classes:
-            function += ("    auto characterClass = std::make_unique<CharacterClass>(_%sData, true);\n" % (classes["Inverse"]))
+            function += ("    auto characterClass = makeUnique<CharacterClass>(_%sData, true);\n" % (classes["Inverse"]))
         else:
-            function += ("    auto characterClass = std::make_unique<CharacterClass>(_%sData, false);\n" % (name))
+            function += ("    auto characterClass = makeUnique<CharacterClass>(_%sData, false);\n" % (name))
     else:
-        function += ("    auto characterClass = std::make_unique<CharacterClass>();\n")
+        function += ("    auto characterClass = makeUnique<CharacterClass>();\n")
+    hasBMPCharacters = False
     hasNonBMPCharacters = False
     for (min, max) in ranges:
+        if min < 0x10000:
+            hasBMPCharacters = True
+        if max >= 0x10000:
+            hasNonBMPCharacters = True
         if (min == max):
             if (min > 127):
                 function += ("    characterClass->m_matchesUnicode.append(0x%04x);\n" % min)
             else:
                 function += ("    characterClass->m_matches.append(0x%02x);\n" % min)
             continue
         if (min > 127) or (max > 127):
             function += ("    characterClass->m_rangesUnicode.append(CharacterRange(0x%04x, 0x%04x));\n" % (min, max))
         else:
             function += ("    characterClass->m_ranges.append(CharacterRange(0x%02x, 0x%02x));\n" % (min, max))
-        if max >= 0x10000:
-            hasNonBMPCharacters = True
-    function += ("    characterClass->m_hasNonBMPCharacters = %s;\n" % ("true" if hasNonBMPCharacters else "false"))
+    function += ("    characterClass->m_characterWidths = CharacterClassWidths::%s;\n" % (("Unknown", "HasBMPChars", "HasNonBMPChars", "HasBothBMPAndNonBMP")[int(hasNonBMPCharacters) * 2 + int(hasBMPCharacters)]))
     function += ("    return characterClass;\n")
     function += ("}\n\n")
     functions += function
 
 if (len(sys.argv) > 1):
