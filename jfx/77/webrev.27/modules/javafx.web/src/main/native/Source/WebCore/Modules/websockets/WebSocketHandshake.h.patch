diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/websockets/WebSocketHandshake.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/websockets/WebSocketHandshake.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/websockets/WebSocketHandshake.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/websockets/WebSocketHandshake.h
@@ -33,24 +33,24 @@
 #include "CookieRequestHeaderFieldProxy.h"
 #include <wtf/URL.h>
 #include "ResourceResponse.h"
 #include "WebSocketExtensionDispatcher.h"
 #include "WebSocketExtensionProcessor.h"
+#include <wtf/WeakPtr.h>
 #include <wtf/text/WTFString.h>
 
 namespace WebCore {
 
-class Document;
 class ResourceRequest;
 
 class WebSocketHandshake {
     WTF_MAKE_NONCOPYABLE(WebSocketHandshake); WTF_MAKE_FAST_ALLOCATED;
 public:
     enum Mode {
         Incomplete, Normal, Failed, Connected
     };
-    WebSocketHandshake(const URL&, const String& protocol, Document*, bool allowCookies);
+    WebSocketHandshake(const URL&, const String& protocol, const String& userAgent, const String& clientOrigin, bool allowCookies);
     ~WebSocketHandshake();
 
     const URL& url() const;
     void setURL(const URL&);
     URL httpURLForAuthenticationAndCookies() const;
@@ -59,19 +59,16 @@
     const String& clientProtocol() const;
     void setClientProtocol(const String&);
 
     bool secure() const;
 
-    String clientOrigin() const;
     String clientLocation() const;
 
     CString clientHandshakeMessage() const;
-    ResourceRequest clientHandshakeRequest() const;
-    Optional<CookieRequestHeaderFieldProxy> clientHandshakeCookieRequestHeaderFieldProxy() const;
+    ResourceRequest clientHandshakeRequest(Function<String(const URL&)>&& cookieRequestHeaderFieldValue) const;
 
     void reset();
-    void clearDocument();
 
     int readServerHandshake(const char* header, size_t len);
     Mode mode() const;
     String failureReason() const; // Returns a string indicating the reason of failure if mode() == Failed.
 
@@ -98,13 +95,14 @@
     bool checkResponseHeaders();
 
     URL m_url;
     String m_clientProtocol;
     bool m_secure;
-    Document* m_document;
 
     Mode m_mode;
+    String m_userAgent;
+    String m_clientOrigin;
     bool m_allowCookies;
 
     ResourceResponse m_serverHandshakeResponse;
 
     String m_failureReason;
