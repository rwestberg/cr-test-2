diff a/modules/javafx.web/src/main/native/Source/WebCore/page/Navigator.h b/modules/javafx.web/src/main/native/Source/WebCore/page/Navigator.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/Navigator.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/Navigator.h
@@ -23,38 +23,48 @@
 #include "JSDOMPromiseDeferred.h"
 #include "NavigatorBase.h"
 #include "ScriptWrappable.h"
 #include "ShareData.h"
 #include "Supplementable.h"
+#include <wtf/IsoMalloc.h>
 
 namespace WebCore {
 
 class DOMMimeTypeArray;
 class DOMPluginArray;
 
 class Navigator final : public NavigatorBase, public ScriptWrappable, public DOMWindowProperty, public Supplementable<Navigator> {
+    WTF_MAKE_ISO_ALLOCATED(Navigator);
 public:
     static Ref<Navigator> create(ScriptExecutionContext* context, DOMWindow& window) { return adoptRef(*new Navigator(context, window)); }
     virtual ~Navigator();
 
     String appVersion() const;
     DOMPluginArray& plugins();
     DOMMimeTypeArray& mimeTypes();
     bool cookieEnabled() const;
     bool javaEnabled() const;
     const String& userAgent() const final;
-    const String& platform() const final;
+    String platform() const final;
     void userAgentChanged();
     bool onLine() const final;
     void share(ScriptExecutionContext&, ShareData, Ref<DeferredPromise>&&);
 
 #if PLATFORM(IOS_FAMILY)
     bool standalone() const;
 #endif
 
     void getStorageUpdates();
 
+#if ENABLE(POINTER_EVENTS)
+#if ENABLE(IOS_TOUCH_EVENTS) && !PLATFORM(MACCATALYST)
+    int maxTouchPoints() const { return 5; }
+#else
+    int maxTouchPoints() const { return 0; }
+#endif
+#endif
+
 private:
     explicit Navigator(ScriptExecutionContext*, DOMWindow&);
 
     mutable RefPtr<DOMPluginArray> m_plugins;
     mutable RefPtr<DOMMimeTypeArray> m_mimeTypes;
