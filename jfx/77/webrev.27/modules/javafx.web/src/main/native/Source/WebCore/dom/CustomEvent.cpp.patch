diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/CustomEvent.cpp b/modules/javafx.web/src/main/native/Source/WebCore/dom/CustomEvent.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/CustomEvent.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/CustomEvent.cpp
@@ -34,11 +34,11 @@
 inline CustomEvent::CustomEvent(IsTrusted isTrusted)
     : Event(isTrusted)
 {
 }
 
-inline CustomEvent::CustomEvent(const AtomicString& type, const Init& initializer, IsTrusted isTrusted)
+inline CustomEvent::CustomEvent(const AtomString& type, const Init& initializer, IsTrusted isTrusted)
     : Event(type, initializer, isTrusted)
     , m_detail(initializer.detail)
 {
 }
 
@@ -47,16 +47,16 @@
 Ref<CustomEvent> CustomEvent::create(IsTrusted isTrusted)
 {
     return adoptRef(*new CustomEvent(isTrusted));
 }
 
-Ref<CustomEvent> CustomEvent::create(const AtomicString& type, const Init& initializer, IsTrusted isTrusted)
+Ref<CustomEvent> CustomEvent::create(const AtomString& type, const Init& initializer, IsTrusted isTrusted)
 {
     return adoptRef(*new CustomEvent(type, initializer, isTrusted));
 }
 
-void CustomEvent::initCustomEvent(const AtomicString& type, bool canBubble, bool cancelable, JSC::JSValue detail)
+void CustomEvent::initCustomEvent(const AtomString& type, bool canBubble, bool cancelable, JSC::JSValue detail)
 {
     if (isBeingDispatched())
         return;
 
     initEvent(type, canBubble, cancelable);
