diff a/modules/javafx.web/src/main/native/Source/WebCore/html/InputType.h b/modules/javafx.web/src/main/native/Source/WebCore/html/InputType.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/InputType.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/InputType.h
@@ -30,10 +30,11 @@
  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 #pragma once
 
+#include "HTMLInputElement.h"
 #include "HTMLTextFormControlElement.h"
 #include "RenderPtr.h"
 #include "StepRange.h"
 #include <wtf/FastMalloc.h>
 #include <wtf/Forward.h>
@@ -53,11 +54,10 @@
 class DragData;
 class Event;
 class FileList;
 class HTMLElement;
 class HTMLFormElement;
-class HTMLInputElement;
 class Icon;
 class KeyboardEvent;
 class MouseEvent;
 class Node;
 class RenderStyle;
@@ -71,19 +71,19 @@
 // other than HTMLInputElement.
 class InputType : public RefCounted<InputType> {
     WTF_MAKE_FAST_ALLOCATED;
 
 public:
-    static Ref<InputType> create(HTMLInputElement&, const AtomicString&);
+    static Ref<InputType> create(HTMLInputElement&, const AtomString&);
     static Ref<InputType> createText(HTMLInputElement&);
     virtual ~InputType();
 
     void detachFromElement() { m_element = nullptr; }
 
     static bool themeSupportsDataListUI(InputType*);
 
-    virtual const AtomicString& formControlType() const = 0;
+    virtual const AtomString& formControlType() const = 0;
 
     // Type query functions.
 
     // Any time we are using one of these functions it's best to refactor
     // to add a virtual function to allow the input type object to do the
@@ -99,10 +99,11 @@
     virtual bool isDateTimeLocalField() const;
     virtual bool isEmailField() const;
     virtual bool isFileUpload() const;
     virtual bool isHiddenType() const;
     virtual bool isImageButton() const;
+    virtual bool isInteractiveContent() const;
     virtual bool supportLabels() const;
     virtual bool isMonthField() const;
     virtual bool isNumberField() const;
     virtual bool isPasswordField() const;
     virtual bool isRadioButton() const;
@@ -180,11 +181,14 @@
     virtual void handleClickEvent(MouseEvent&);
     virtual void handleMouseDownEvent(MouseEvent&);
     virtual void willDispatchClick(InputElementClickState&);
     virtual void didDispatchClick(Event&, const InputElementClickState&);
     virtual void handleDOMActivateEvent(Event&);
-    virtual void handleKeydownEvent(KeyboardEvent&);
+
+    enum ShouldCallBaseEventHandler { No, Yes };
+    virtual ShouldCallBaseEventHandler handleKeydownEvent(KeyboardEvent&);
+
     virtual void handleKeypressEvent(KeyboardEvent&);
     virtual void handleKeyupEvent(KeyboardEvent&);
     virtual void handleBeforeTextInsertedEvent(BeforeTextInsertedEvent&);
     virtual void forwardEvent(Event&);
 
