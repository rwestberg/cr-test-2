diff a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSEventTargetCustom.cpp b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSEventTargetCustom.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSEventTargetCustom.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSEventTargetCustom.cpp
@@ -54,15 +54,15 @@
 }
 
 std::unique_ptr<JSEventTargetWrapper> jsEventTargetCast(VM& vm, JSValue thisValue)
 {
     if (auto* target = jsDynamicCast<JSEventTarget*>(vm, thisValue))
-        return std::make_unique<JSEventTargetWrapper>(target->wrapped(), *target);
+        return makeUnique<JSEventTargetWrapper>(target->wrapped(), *target);
     if (auto* window = toJSDOMWindow(vm, thisValue))
-        return std::make_unique<JSEventTargetWrapper>(window->wrapped(), *window);
+        return makeUnique<JSEventTargetWrapper>(window->wrapped(), *window);
     if (auto* scope = toJSWorkerGlobalScope(vm, thisValue))
-        return std::make_unique<JSEventTargetWrapper>(scope->wrapped(), *scope);
+        return makeUnique<JSEventTargetWrapper>(scope->wrapped(), *scope);
     return nullptr;
 }
 
 void JSEventTarget::visitAdditionalChildren(SlotVisitor& visitor)
 {
