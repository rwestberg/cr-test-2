diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/BreakLines.h b/modules/javafx.web/src/main/native/Source/WebCore/rendering/BreakLines.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/BreakLines.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/BreakLines.h
@@ -185,16 +185,29 @@
     if (stringView.is8Bit())
         return nextBreakablePosition<LChar, NonBreakingSpaceBehavior::IgnoreNonBreakingSpace, CanUseShortcut::No>(lazyBreakIterator, stringView.characters8(), stringView.length(), startPosition);
     return nextBreakablePosition<UChar, NonBreakingSpaceBehavior::IgnoreNonBreakingSpace, CanUseShortcut::No>(lazyBreakIterator, stringView.characters16(), stringView.length(), startPosition);
 }
 
-inline bool isBreakable(LazyLineBreakIterator& lazyBreakIterator, unsigned startPosition, Optional<unsigned>& nextBreakable, bool breakNBSP, bool canUseShortcut, bool keepAllWords)
+inline unsigned nextBreakablePositionBreakCharacter(LazyLineBreakIterator& lazyBreakIterator, unsigned startPosition)
+{
+    auto stringView = lazyBreakIterator.stringView();
+    ASSERT(startPosition <= stringView.length());
+    // FIXME: Can/Should we implement this using a Shared Iterator (performance issue)
+    // https://bugs.webkit.org/show_bug.cgi?id=197876
+    NonSharedCharacterBreakIterator iterator(stringView);
+    Optional<unsigned> next = ubrk_following(iterator, startPosition);
+    return next.valueOr(stringView.length());
+}
+
+inline bool isBreakable(LazyLineBreakIterator& lazyBreakIterator, unsigned startPosition, Optional<unsigned>& nextBreakable, bool breakNBSP, bool canUseShortcut, bool keepAllWords, bool breakAnywhere)
 {
     if (nextBreakable && nextBreakable.value() >= startPosition)
         return startPosition == nextBreakable;
 
-    if (keepAllWords) {
+    if (breakAnywhere)
+        nextBreakable = nextBreakablePositionBreakCharacter(lazyBreakIterator, startPosition);
+    else if (keepAllWords) {
         if (breakNBSP)
             nextBreakable = nextBreakablePositionKeepingAllWords(lazyBreakIterator, startPosition);
         else
             nextBreakable = nextBreakablePositionKeepingAllWordsIgnoringNBSP(lazyBreakIterator, startPosition);
     } else if (!canUseShortcut) {
