diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/debugger/DebuggerParseData.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/debugger/DebuggerParseData.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/debugger/DebuggerParseData.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/debugger/DebuggerParseData.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2016 Apple Inc. All rights reserved.
+ * Copyright (C) 2016-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -25,10 +25,11 @@
 
 #include "config.h"
 #include "DebuggerParseData.h"
 
 #include "Parser.h"
+#include <wtf/Optional.h>
 
 namespace JSC {
 
 Optional<JSTextPosition> DebuggerPausePositions::breakpointLocationForLineColumn(int line, int column)
 {
@@ -151,11 +152,11 @@
     SourceParseMode parseMode = DebuggerParseInfo<T>::parseMode;
     JSParserStrictMode strictMode = DebuggerParseInfo<T>::strictMode;
     JSParserScriptMode scriptMode = DebuggerParseInfo<T>::scriptMode;
 
     ParserError error;
-    std::unique_ptr<RootNode> rootNode = parse<RootNode>(&vm, source, Identifier(),
+    std::unique_ptr<RootNode> rootNode = parse<RootNode>(vm, source, Identifier(),
         JSParserBuiltinMode::NotBuiltin, strictMode, scriptMode, parseMode, SuperBinding::NotNeeded,
         error, nullptr, ConstructorKind::None, DerivedContextType::None, EvalContextType::None,
         &debuggerParseData);
     if (!rootNode)
         return false;
