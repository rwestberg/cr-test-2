diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/PriorityQueue.h b/modules/javafx.web/src/main/native/Source/WTF/wtf/PriorityQueue.h
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/PriorityQueue.h
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/PriorityQueue.h
@@ -36,11 +36,12 @@
 // 1) The backing vector is fastMalloced.
 // 2) You can iterate the elements.
 // 3) It has in-place decrease/increaseKey methods, although they are still O(n) rather than O(log(n)).
 
 template<typename T, bool (*isHigherPriority)(const T&, const T&) = &isLessThan<T>, size_t inlineCapacity = 0>
-class PriorityQueue {
+class PriorityQueue final {
+    WTF_MAKE_FAST_ALLOCATED;
     using BufferType = Vector<T, inlineCapacity>;
     using const_iterator = typename BufferType::const_iterator;
 public:
     size_t size() const { return m_buffer.size(); }
     bool isEmpty() const { return m_buffer.isEmpty(); }
