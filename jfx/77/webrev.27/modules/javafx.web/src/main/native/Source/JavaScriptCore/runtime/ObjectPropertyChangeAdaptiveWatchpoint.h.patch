diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ObjectPropertyChangeAdaptiveWatchpoint.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ObjectPropertyChangeAdaptiveWatchpoint.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ObjectPropertyChangeAdaptiveWatchpoint.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ObjectPropertyChangeAdaptiveWatchpoint.h
@@ -28,25 +28,32 @@
 #include "AdaptiveInferredPropertyValueWatchpointBase.h"
 
 namespace JSC {
 
 template<typename Watchpoint>
-class ObjectPropertyChangeAdaptiveWatchpoint : public AdaptiveInferredPropertyValueWatchpointBase {
+class ObjectPropertyChangeAdaptiveWatchpoint final : public AdaptiveInferredPropertyValueWatchpointBase {
 public:
     using Base = AdaptiveInferredPropertyValueWatchpointBase;
-    ObjectPropertyChangeAdaptiveWatchpoint(const ObjectPropertyCondition& condition, Watchpoint& watchpoint)
+    ObjectPropertyChangeAdaptiveWatchpoint(JSCell* owner, const ObjectPropertyCondition& condition, Watchpoint& watchpoint)
         : Base(condition)
+        , m_owner(owner)
         , m_watchpoint(watchpoint)
     {
         RELEASE_ASSERT(watchpoint.stateOnJSThread() == IsWatched);
     }
 
 private:
+    bool isValid() const override
+    {
+        return m_owner->isLive();
+    }
+
     void handleFire(VM& vm, const FireDetail&) override
     {
         m_watchpoint.fireAll(vm, StringFireDetail("Object Property is changed."));
     }
 
+    JSCell* m_owner;
     Watchpoint& m_watchpoint;
 };
 
 } // namespace JSC
