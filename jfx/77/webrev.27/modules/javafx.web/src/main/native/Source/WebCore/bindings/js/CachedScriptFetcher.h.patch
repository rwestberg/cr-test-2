diff a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/CachedScriptFetcher.h b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/CachedScriptFetcher.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/CachedScriptFetcher.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/CachedScriptFetcher.h
@@ -24,10 +24,11 @@
  */
 
 #pragma once
 
 #include "CachedResourceHandle.h"
+#include "ReferrerPolicy.h"
 #include <JavaScriptCore/ScriptFetcher.h>
 #include <wtf/text/WTFString.h>
 
 namespace WebCore {
 
@@ -39,15 +40,16 @@
     virtual CachedResourceHandle<CachedScript> requestModuleScript(Document&, const URL& sourceURL, String&& integrity) const;
 
     static Ref<CachedScriptFetcher> create(const String& charset);
 
 protected:
-    CachedScriptFetcher(const String& nonce, const String& charset, const AtomicString& initiatorName, bool isInUserAgentShadowTree)
+    CachedScriptFetcher(const String& nonce, ReferrerPolicy referrerPolicy, const String& charset, const AtomString& initiatorName, bool isInUserAgentShadowTree)
         : m_nonce(nonce)
         , m_charset(charset)
         , m_initiatorName(initiatorName)
         , m_isInUserAgentShadowTree(isInUserAgentShadowTree)
+        , m_referrerPolicy(referrerPolicy)
     {
     }
 
     CachedScriptFetcher(const String& charset)
         : m_charset(charset)
@@ -57,10 +59,11 @@
     CachedResourceHandle<CachedScript> requestScriptWithCache(Document&, const URL& sourceURL, const String& crossOriginMode, String&& integrity) const;
 
 private:
     String m_nonce;
     String m_charset;
-    AtomicString m_initiatorName;
+    AtomString m_initiatorName;
     bool m_isInUserAgentShadowTree { false };
+    ReferrerPolicy m_referrerPolicy { ReferrerPolicy::EmptyString };
 };
 
 } // namespace WebCore
