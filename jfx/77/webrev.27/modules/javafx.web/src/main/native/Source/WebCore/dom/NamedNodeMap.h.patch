diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/NamedNodeMap.h b/modules/javafx.web/src/main/native/Source/WebCore/dom/NamedNodeMap.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/NamedNodeMap.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/NamedNodeMap.h
@@ -30,12 +30,12 @@
 namespace WebCore {
 
 class Attr;
 class Element;
 
-class NamedNodeMap : public ScriptWrappable {
-    WTF_MAKE_FAST_ALLOCATED;
+class NamedNodeMap final : public ScriptWrappable {
+    WTF_MAKE_ISO_ALLOCATED(NamedNodeMap);
 public:
     explicit NamedNodeMap(Element& element)
         : m_element(element)
     {
     }
@@ -43,15 +43,15 @@
     WEBCORE_EXPORT void ref();
     WEBCORE_EXPORT void deref();
 
     WEBCORE_EXPORT unsigned length() const;
     WEBCORE_EXPORT RefPtr<Attr> item(unsigned index) const;
-    WEBCORE_EXPORT RefPtr<Attr> getNamedItem(const AtomicString&) const;
-    WEBCORE_EXPORT RefPtr<Attr> getNamedItemNS(const AtomicString& namespaceURI, const AtomicString& localName) const;
+    WEBCORE_EXPORT RefPtr<Attr> getNamedItem(const AtomString&) const;
+    WEBCORE_EXPORT RefPtr<Attr> getNamedItemNS(const AtomString& namespaceURI, const AtomString& localName) const;
     WEBCORE_EXPORT ExceptionOr<RefPtr<Attr>> setNamedItem(Attr&);
-    WEBCORE_EXPORT ExceptionOr<Ref<Attr>> removeNamedItem(const AtomicString& name);
-    WEBCORE_EXPORT ExceptionOr<Ref<Attr>> removeNamedItemNS(const AtomicString& namespaceURI, const AtomicString& localName);
+    WEBCORE_EXPORT ExceptionOr<Ref<Attr>> removeNamedItem(const AtomString& name);
+    WEBCORE_EXPORT ExceptionOr<Ref<Attr>> removeNamedItemNS(const AtomString& namespaceURI, const AtomString& localName);
 
     Vector<String> supportedPropertyNames() const;
 
     Element& element() { return m_element; }
 
