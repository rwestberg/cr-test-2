diff a/modules/javafx.web/src/main/native/Source/WebCore/page/animation/KeyframeAnimation.cpp b/modules/javafx.web/src/main/native/Source/WebCore/page/animation/KeyframeAnimation.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/animation/KeyframeAnimation.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/animation/KeyframeAnimation.cpp
@@ -289,21 +289,21 @@
     return m_keyframes.containsProperty(property);
 }
 
 bool KeyframeAnimation::startAnimation(double timeOffset)
 {
-    if (auto* renderer = compositedRenderer())
-        return renderer->startAnimation(timeOffset, m_animation.ptr(), m_keyframes);
+    if (auto* renderer = this->renderer())
+        return renderer->startAnimation(timeOffset, m_animation, m_keyframes);
     return false;
 }
 
 void KeyframeAnimation::pauseAnimation(double timeOffset)
 {
     if (!element())
         return;
 
-    if (auto* renderer = compositedRenderer())
+    if (auto* renderer = this->renderer())
         renderer->animationPaused(timeOffset, m_keyframes.animationName());
 
     // Restore the original (unanimated) style
     if (!paused())
         setNeedsStyleRecalc(element());
@@ -312,11 +312,11 @@
 void KeyframeAnimation::endAnimation(bool fillingForwards)
 {
     if (!element())
         return;
 
-    if (auto* renderer = compositedRenderer())
+    if (auto* renderer = this->renderer())
         renderer->animationFinished(m_keyframes.animationName());
 
     // Restore the original (unanimated) style
     if (!fillingForwards && !paused())
         setNeedsStyleRecalc(element());
@@ -341,11 +341,11 @@
 {
     sendAnimationEvent(eventNames().animationendEvent, elapsedTime);
     endAnimation(m_animation->fillsForwards());
 }
 
-bool KeyframeAnimation::sendAnimationEvent(const AtomicString& eventType, double elapsedTime)
+bool KeyframeAnimation::sendAnimationEvent(const AtomString& eventType, double elapsedTime)
 {
     Document::ListenerType listenerType;
     if (eventType == eventNames().webkitAnimationIterationEvent || eventType == eventNames().animationiterationEvent)
         listenerType = Document::ANIMATIONITERATION_LISTENER;
     else if (eventType == eventNames().webkitAnimationEndEvent || eventType == eventNames().animationendEvent)
