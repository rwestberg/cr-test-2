diff a/modules/javafx.web/src/main/native/Source/WebCore/workers/service/ExtendableMessageEvent.cpp b/modules/javafx.web/src/main/native/Source/WebCore/workers/service/ExtendableMessageEvent.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/workers/service/ExtendableMessageEvent.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/workers/service/ExtendableMessageEvent.cpp
@@ -35,11 +35,11 @@
 Ref<ExtendableMessageEvent> ExtendableMessageEvent::create(Vector<RefPtr<MessagePort>>&& ports, RefPtr<SerializedScriptValue>&& data, const String& origin, const String& lastEventId, Optional<ExtendableMessageEventSource>&& source)
 {
     return adoptRef(*new ExtendableMessageEvent(WTFMove(data), origin, lastEventId, WTFMove(source), WTFMove(ports)));
 }
 
-ExtendableMessageEvent::ExtendableMessageEvent(JSC::ExecState& state, const AtomicString& type, const Init& init, IsTrusted isTrusted)
+ExtendableMessageEvent::ExtendableMessageEvent(JSC::ExecState& state, const AtomString& type, const Init& init, IsTrusted isTrusted)
     : ExtendableEvent(type, init, isTrusted)
     , m_data(SerializedScriptValue::create(state, init.data, SerializationErrorMode::NonThrowing))
     , m_origin(init.origin)
     , m_lastEventId(init.lastEventId)
     , m_source(init.source)
