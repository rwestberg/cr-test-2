diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webaudio/WaveShaperNode.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webaudio/WaveShaperNode.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webaudio/WaveShaperNode.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webaudio/WaveShaperNode.cpp
@@ -26,26 +26,30 @@
 #include "WaveShaperNode.h"
 
 #if ENABLE(WEB_AUDIO)
 
 #include "AudioContext.h"
+#include <wtf/IsoMallocInlines.h>
 #include <wtf/MainThread.h>
 
 namespace WebCore {
 
+WTF_MAKE_ISO_ALLOCATED_IMPL(WaveShaperNode);
+
 WaveShaperNode::WaveShaperNode(AudioContext& context)
     : AudioBasicProcessorNode(context, context.sampleRate())
 {
-    m_processor = std::make_unique<WaveShaperProcessor>(context.sampleRate(), 1);
     setNodeType(NodeTypeWaveShaper);
+    m_processor = makeUnique<WaveShaperProcessor>(context.sampleRate(), 1);
 
     initialize();
 }
 
 void WaveShaperNode::setCurve(Float32Array& curve)
 {
     ASSERT(isMainThread());
+    DEBUG_LOG(LOGIDENTIFIER);
     waveShaperProcessor()->setCurve(&curve);
 }
 
 Float32Array* WaveShaperNode::curve()
 {
@@ -67,10 +71,11 @@
 }
 
 void WaveShaperNode::setOversample(OverSampleType type)
 {
     ASSERT(isMainThread());
+    INFO_LOG(LOGIDENTIFIER, type);
 
     // Synchronize with any graph changes or changes to channel configuration.
     AudioContext::AutoLocker contextLocker(context());
     waveShaperProcessor()->setOversample(processorType(type));
 }
