diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/builtins/MapPrototype.js b/modules/javafx.web/src/main/native/Source/JavaScriptCore/builtins/MapPrototype.js
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/builtins/MapPrototype.js
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/builtins/MapPrototype.js
@@ -23,11 +23,11 @@
  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 @constructor
 @globalPrivate
-function createMapIterator(iteratedObject, kind)
+function MapIterator(iteratedObject, kind)
 {
     "use strict";
 
     @assert(@isMap(iteratedObject));
     @putByIdDirectPrivate(this, "iteratedObject", iteratedObject);
@@ -40,31 +40,31 @@
     "use strict";
 
     if (!@isMap(this))
         @throwTypeError("Map.prototype.values requires that |this| be Map");
 
-    return new @createMapIterator(this, @iterationKindValue);
+    return new @MapIterator(this, @iterationKindValue);
 }
 
 function keys()
 {
     "use strict";
 
     if (!@isMap(this))
         @throwTypeError("Map.prototype.keys requires that |this| be Map");
 
-    return new @createMapIterator(this, @iterationKindKey);
+    return new @MapIterator(this, @iterationKindKey);
 }
 
 function entries()
 {
     "use strict";
 
     if (!@isMap(this))
         @throwTypeError("Map.prototype.entries requires that |this| be Map");
 
-    return new @createMapIterator(this, @iterationKindKeyValue);
+    return new @MapIterator(this, @iterationKindKeyValue);
 }
 
 function forEach(callback /*, thisArg */)
 {
     "use strict";
