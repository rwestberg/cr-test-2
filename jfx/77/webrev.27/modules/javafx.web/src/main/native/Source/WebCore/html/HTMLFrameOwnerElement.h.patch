diff a/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLFrameOwnerElement.h b/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLFrameOwnerElement.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLFrameOwnerElement.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLFrameOwnerElement.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2006, 2007, 2009 Apple Inc. All rights reserved.
+ * Copyright (C) 2006-2019 Apple Inc. All rights reserved.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Library General Public
  * License as published by the Free Software Foundation; either
  * version 2 of the License, or (at your option) any later version.
@@ -19,16 +19,16 @@
  */
 
 #pragma once
 
 #include "HTMLElement.h"
+#include "ReferrerPolicy.h"
 #include <wtf/HashCountedSet.h>
 #include <wtf/NeverDestroyed.h>
 
 namespace WebCore {
 
-class DOMWindow;
 class Frame;
 class RenderWidget;
 class SVGDocument;
 
 class HTMLFrameOwnerElement : public HTMLElement {
@@ -56,22 +56,25 @@
 
     SandboxFlags sandboxFlags() const { return m_sandboxFlags; }
 
     void scheduleInvalidateStyleAndLayerComposition();
 
-    virtual bool isURLAllowed(const URL&) const { return true; }
+    virtual bool canLoadScriptURL(const URL&) const = 0;
+
+    virtual ReferrerPolicy referrerPolicy() const { return ReferrerPolicy::EmptyString; }
 
 protected:
     HTMLFrameOwnerElement(const QualifiedName& tagName, Document&);
     void setSandboxFlags(SandboxFlags);
+    bool isProhibitedSelfReference(const URL&) const;
 
 private:
     bool isKeyboardFocusable(KeyboardEvent*) const override;
     bool isFrameOwnerElement() const final { return true; }
 
-    Frame* m_contentFrame;
-    SandboxFlags m_sandboxFlags;
+    Frame* m_contentFrame { nullptr };
+    SandboxFlags m_sandboxFlags { SandboxNone };
 };
 
 class SubframeLoadingDisabler {
 public:
     explicit SubframeLoadingDisabler(ContainerNode* root)
