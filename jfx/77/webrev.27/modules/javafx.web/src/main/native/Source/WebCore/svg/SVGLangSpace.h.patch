diff a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGLangSpace.h b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGLangSpace.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGLangSpace.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGLangSpace.h
@@ -1,9 +1,9 @@
 /*
  * Copyright (C) 2004, 2005, 2007, 2008 Nikolas Zimmermann <zimmermann@kde.org>
  * Copyright (C) 2004, 2005, 2006 Rob Buis <buis@kde.org>
- * Copyright (C) 2018 Apple Inc. All rights reserved.
+ * Copyright (C) 2018-2019 Apple Inc. All rights reserved.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Library General Public
  * License as published by the Free Software Foundation; either
  * version 2 of the License, or (at your option) any later version.
@@ -20,43 +20,35 @@
  */
 
 #pragma once
 
 #include "QualifiedName.h"
-#include "SVGAttributeOwnerProxyImpl.h"
 #include <wtf/HashSet.h>
 
 namespace WebCore {
 
 class SVGElement;
 
 class SVGLangSpace {
 public:
-    const String& xmllang() const { return m_lang.value(); }
-    void setXmllang(const AtomicString& xmlLang) { m_lang.setValue(xmlLang); }
+    const AtomString& xmllang() const { return m_lang; }
+    void setXmllang(const AtomString& xmlLang) { m_lang = xmlLang; }
 
-    const String& xmlspace() const;
-    void setXmlspace(const AtomicString& xmlSpace) { m_space.setValue(xmlSpace); }
+    const AtomString& xmlspace() const;
+    void setXmlspace(const AtomString& xmlSpace) { m_space = xmlSpace; }
 
-    void parseAttribute(const QualifiedName&, const AtomicString&);
+    void parseAttribute(const QualifiedName&, const AtomString&);
 
     void svgAttributeChanged(const QualifiedName&);
 
-    using AttributeOwnerProxy = SVGAttributeOwnerProxyImpl<SVGLangSpace>;
-    using AttributeRegistry = SVGAttributeRegistry<SVGLangSpace>;
-    static auto& attributeRegistry() { return AttributeOwnerProxy::attributeRegistry(); }
-    static bool isKnownAttribute(const QualifiedName& attributeName) { return attributeRegistry().isKnownAttribute(attributeName); }
+    static bool isKnownAttribute(const QualifiedName&);
 
 protected:
     SVGLangSpace(SVGElement* contextElement);
 
 private:
-    using SVGStringAttribute = SVGPropertyAttribute<String>;
-    using SVGStringAttributeAccessor = SVGPropertyAttributeAccessor<SVGLangSpace, SVGStringAttribute>;
-    static void registerAttributes();
-
     SVGElement& m_contextElement;
-    SVGStringAttribute m_lang;
-    SVGStringAttribute m_space;
+    AtomString m_lang;
+    AtomString m_space;
 };
 
 } // namespace WebCore
