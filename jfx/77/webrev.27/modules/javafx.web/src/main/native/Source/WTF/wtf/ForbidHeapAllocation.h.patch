diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/ForbidHeapAllocation.h b/modules/javafx.web/src/main/native/Source/WTF/wtf/ForbidHeapAllocation.h
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/ForbidHeapAllocation.h
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/ForbidHeapAllocation.h
@@ -23,15 +23,22 @@
  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 #pragma once
 
+// We do not delete "delete" operators to allow classes to have a virtual destructor. The following code raises a compile error like "error: attempt to use a deleted function".
+//
+//     class A {
+//     public:
+//         virtual ~A();
+//         void operator delete(void*) = delete;
+//         void operator delete[](void*) = delete;
+//     };
+//
 #define WTF_FORBID_HEAP_ALLOCATION \
 private: \
     void* operator new(size_t, void*) = delete; \
     void* operator new[](size_t, void*) = delete; \
     void* operator new(size_t) = delete; \
-    void operator delete(void*) = delete; \
     void* operator new[](size_t size) = delete; \
-    void operator delete[](void*) = delete; \
     void* operator new(size_t, NotNullTag, void* location) = delete; \
     typedef int __thisIsHereToForceASemicolonAfterThisForbidHeapAllocationMacro
