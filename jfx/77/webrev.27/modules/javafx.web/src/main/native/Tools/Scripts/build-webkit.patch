diff a/modules/javafx.web/src/main/native/Tools/Scripts/build-webkit b/modules/javafx.web/src/main/native/Tools/Scripts/build-webkit
--- a/modules/javafx.web/src/main/native/Tools/Scripts/build-webkit
+++ b/modules/javafx.web/src/main/native/Tools/Scripts/build-webkit
@@ -1,8 +1,8 @@
 #!/usr/bin/env perl
 
-# Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014 Apple Inc. All rights reserved.
+# Copyright (C) 2005-2019 Apple Inc. All rights reserved.
 # Copyright (C) 2009 Google Inc. All rights reserved.
 # Copyright (C) 2010 moiji-mobile.com All rights reserved.
 # Copyright (C) 2011 Research In Motion Limited. All rights reserved.
 # Copyright (C) 2013 Nokia Corporation and/or its subsidiary(-ies).
 #
@@ -71,10 +71,11 @@
 my $onlyWebKitProject = 0;
 my $coverageSupport = 0;
 my $shouldRunStaticAnalyzer = 0;
 my $noExperimentalFeatures = 0;
 my $ltoMode = "default";
+my $xcbuild = undef;
 my $startTime = time();
 my $archs32bit = 0;
 my $skipLibraryUpdate = 0;
 my $useCCache = -1;
 
@@ -112,11 +113,12 @@
   --device                          DEPRECATED alias of --ios-device
   --ios-simulator                   Use "iphonesimulator.internal" SDK if installed, else "iphonesimulator" SDK (iOS only)
   --simulator                       DEPRECATED alias of --ios-simulator
   --coverage                        Enable code coverage support (Mac only)
   --analyze                         Enable static anaylsis (iOS and Mac only)
-  --lto-mode=<mode>                 Set Link Time Optimization mode (full, thin, or none) (Xcode only)
+  --lto-mode=<mode>                 Set Link Time Optimization mode (full, thin, or none) (LLVM only)
+  --[no-]xcbuild                    Force the use of XCBuild or not
 
   --java                            Build the Open JavaFX port
   --gtk                             Build the GTK+ port
   --wpe                             Build the WPE port
   --wincairo                        Build using Cairo (rather than CoreGraphics) on Windows
@@ -152,10 +154,11 @@
     'only-webkit' => \$onlyWebKitProject,
     'coverage' => \$coverageSupport,
     'analyze' => \$shouldRunStaticAnalyzer,
     'no-experimental-features' => \$noExperimentalFeatures,
     'lto-mode=s' => \$ltoMode,
+    'xcbuild!' => \$xcbuild,
     'skip-library-update' => \$skipLibraryUpdate,
     'use-ccache!' => \$useCCache,
 );
 
 # Build usage text and options list from features
@@ -206,10 +209,22 @@
 
 my @options = ();
 
 if (isAppleCocoaWebKit()) {
     push @options, XcodeOptions();
+
+    if (not defined $xcbuild) {
+        $xcbuild = canUseXCBuild();
+    }
+
+    if ($xcbuild) {
+        push @options, "-UseNewBuildSystem=YES";
+        push @options, "USE_NEW_BUILD_SYSTEM=YES";
+    } else {
+        push @options, "-UseNewBuildSystem=NO";
+    }
+
     sub option($$)
     {
         my ($feature, $isEnabled) = @_;
         return "" if not defined $isEnabled;
         return $feature . "=" . ($isEnabled ? $feature : "");
@@ -258,14 +273,10 @@
     (system("perl Tools/Scripts/update-webkit-support-libs") == 0) or die;
     (system("perl Tools/Scripts/update-webkit-auxiliary-libs") == 0) or die;
     setupAppleWinEnv()
 }
 
-if (isAnyWindows()) {
-    system("python Tools/Scripts/update-vswhere.py");
-}
-
 # If asked to build just the WebKit project, overwrite the projects
 # list after all of the port specific tweaks have been made to
 # build options, etc.
 @projects = ("Source/WebKitLegacy") if $onlyWebKitProject;
 
