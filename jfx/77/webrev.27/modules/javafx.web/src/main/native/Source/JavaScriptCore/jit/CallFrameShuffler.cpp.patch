diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/CallFrameShuffler.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/CallFrameShuffler.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/CallFrameShuffler.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/CallFrameShuffler.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2015-2018 Apple Inc. All rights reserved.
+ * Copyright (C) 2015-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -452,13 +452,13 @@
 
     // We load the link register manually for architectures that have one
 #if CPU(ARM_THUMB2) || CPU(ARM64)
     m_jit.loadPtr(MacroAssembler::Address(MacroAssembler::framePointerRegister, CallFrame::returnPCOffset()),
         MacroAssembler::linkRegister);
-#if USE(POINTER_PROFILING)
+#if CPU(ARM64E)
     m_jit.addPtr(MacroAssembler::TrustedImm32(sizeof(CallerFrameAndPC)), MacroAssembler::framePointerRegister);
-    m_jit.untagPtr(MacroAssembler::linkRegister, MacroAssembler::framePointerRegister);
+    m_jit.untagPtr(MacroAssembler::framePointerRegister, MacroAssembler::linkRegister);
     m_jit.subPtr(MacroAssembler::TrustedImm32(sizeof(CallerFrameAndPC)), MacroAssembler::framePointerRegister);
 #endif
 
 #elif CPU(MIPS)
     m_jit.loadPtr(MacroAssembler::Address(MacroAssembler::framePointerRegister, sizeof(void*)),
