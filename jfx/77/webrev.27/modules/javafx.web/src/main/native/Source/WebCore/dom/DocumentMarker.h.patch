diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/DocumentMarker.h b/modules/javafx.web/src/main/native/Source/WebCore/dom/DocumentMarker.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/DocumentMarker.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/DocumentMarker.h
@@ -77,11 +77,15 @@
         DictationResult = 1 << 12,
 #endif
         // This marker indicates that the user has selected a text candidate.
         AcceptedCandidate = 1 << 13,
         // This marker indicates that the user has initiated a drag with this content.
-        DraggedContent = 1 << 14
+        DraggedContent = 1 << 14,
+#if ENABLE(PLATFORM_DRIVEN_TEXT_CHECKING)
+        // This marker maintains state for the platform text checker.
+        PlatformTextChecking = 1 << 15,
+#endif
     };
 
     static constexpr OptionSet<MarkerType> allMarkers();
 
     using IsActiveMatchData = bool;
@@ -97,11 +101,21 @@
 #endif
     };
     struct DraggedContentData {
         RefPtr<Node> targetNode;
     };
-    using Data = Variant<IsActiveMatchData, DescriptionData, DictationData, DictationAlternativesData, DraggedContentData>;
+#if ENABLE(PLATFORM_DRIVEN_TEXT_CHECKING)
+    struct PlatformTextCheckingData {
+        String key;
+        String value;
+    };
+#endif
+    using Data = Variant<IsActiveMatchData, DescriptionData, DictationData, DictationAlternativesData, DraggedContentData
+#if ENABLE(PLATFORM_DRIVEN_TEXT_CHECKING)
+    , PlatformTextCheckingData
+#endif
+    >;
 
     DocumentMarker(unsigned startOffset, unsigned endOffset, bool isActiveMatch);
     DocumentMarker(MarkerType, unsigned startOffset, unsigned endOffset, const String& description = String());
     DocumentMarker(MarkerType, unsigned startOffset, unsigned endOffset, Data&&);
 #if PLATFORM(IOS_FAMILY)
@@ -160,10 +174,13 @@
         TelephoneNumber,
 #endif
 #if PLATFORM(IOS_FAMILY)
         DictationPhraseWithAlternatives,
         DictationResult,
+#endif
+#if ENABLE(PLATFORM_DRIVEN_TEXT_CHECKING)
+        PlatformTextChecking
 #endif
     };
 }
 
 inline DocumentMarker::DocumentMarker(unsigned startOffset, unsigned endOffset, bool isActiveMatch)
