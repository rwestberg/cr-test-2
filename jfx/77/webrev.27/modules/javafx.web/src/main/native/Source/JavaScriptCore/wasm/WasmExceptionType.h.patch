diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/wasm/WasmExceptionType.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/wasm/WasmExceptionType.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/wasm/WasmExceptionType.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/wasm/WasmExceptionType.h
@@ -31,20 +31,22 @@
 
 namespace Wasm {
 
 #define FOR_EACH_EXCEPTION(macro) \
     macro(OutOfBoundsMemoryAccess,  "Out of bounds memory access") \
+    macro(OutOfBoundsTableAccess, "Out of bounds table access") \
     macro(OutOfBoundsCallIndirect, "Out of bounds call_indirect") \
     macro(NullTableEntry,  "call_indirect to a null table entry") \
     macro(BadSignature, "call_indirect to a signature that does not match") \
     macro(OutOfBoundsTrunc, "Out of bounds Trunc operation") \
     macro(Unreachable, "Unreachable code should not be executed") \
     macro(DivisionByZero, "Division by zero") \
     macro(IntegerOverflow, "Integer overflow") \
     macro(StackOverflow, "Stack overflow") \
     macro(I64ArgumentType, "WebAssembly function with an i64 argument can't be called from JavaScript") \
-    macro(I64ReturnType, "WebAssembly function that returns i64 can't be called from JavaScript")
+    macro(I64ReturnType, "WebAssembly function that returns i64 can't be called from JavaScript") \
+    macro(FuncrefNotWasm, "Funcref must be an exported wasm function")
 
 enum class ExceptionType : uint32_t {
 #define MAKE_ENUM(enumName, error) enumName,
     FOR_EACH_EXCEPTION(MAKE_ENUM)
 #undef MAKE_ENUM
