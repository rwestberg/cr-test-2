diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderSearchField.cpp b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderSearchField.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderSearchField.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderSearchField.cpp
@@ -103,11 +103,11 @@
     RecentSearch recentSearch = { value, WallTime::now() };
     m_recentSearches.insert(0, recentSearch);
     while (static_cast<int>(m_recentSearches.size()) > inputElement().maxResults())
         m_recentSearches.removeLast();
 
-    const AtomicString& name = autosaveName();
+    const AtomString& name = autosaveName();
     if (!m_searchPopup)
         m_searchPopup = page().chrome().createSearchPopupMenu(*this);
 
     m_searchPopup->saveRecentSearches(name, m_recentSearches);
 }
@@ -123,11 +123,11 @@
     if (!m_searchPopup->enabled())
         return;
 
     m_searchPopupIsVisible = true;
 
-    const AtomicString& name = autosaveName();
+    const AtomString& name = autosaveName();
     m_searchPopup->loadRecentSearches(name, m_recentSearches);
 
     // Trim the recent searches list if the maximum size has changed since we last saved.
     if (static_cast<int>(m_recentSearches.size()) > inputElement().maxResults()) {
         do {
@@ -197,11 +197,11 @@
 Visibility RenderSearchField::visibilityForCancelButton() const
 {
     return (style().visibility() == Visibility::Hidden || inputElement().value().isEmpty()) ? Visibility::Hidden : Visibility::Visible;
 }
 
-const AtomicString& RenderSearchField::autosaveName() const
+const AtomString& RenderSearchField::autosaveName() const
 {
     return inputElement().attributeWithoutSynchronization(autosaveAttr);
 }
 
 // PopupMenuClient methods
@@ -209,11 +209,11 @@
 {
     ASSERT(static_cast<int>(listIndex) < listSize());
     if (static_cast<int>(listIndex) == (listSize() - 1)) {
         if (fireEvents) {
             m_recentSearches.clear();
-            const AtomicString& name = autosaveName();
+            const AtomString& name = autosaveName();
             if (!name.isEmpty()) {
                 if (!m_searchPopup)
                     m_searchPopup = page().chrome().createSearchPopupMenu(*this);
                 m_searchPopup->saveRecentSearches(name, m_recentSearches);
             }
