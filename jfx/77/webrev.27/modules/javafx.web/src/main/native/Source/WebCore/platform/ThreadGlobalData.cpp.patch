diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/ThreadGlobalData.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/ThreadGlobalData.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/ThreadGlobalData.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/ThreadGlobalData.cpp
@@ -38,18 +38,18 @@
 #include <wtf/text/StringImpl.h>
 
 namespace WebCore {
 
 ThreadGlobalData::ThreadGlobalData()
-    : m_cachedResourceRequestInitiators(std::make_unique<CachedResourceRequestInitiators>())
+    : m_cachedResourceRequestInitiators(makeUnique<CachedResourceRequestInitiators>())
     , m_eventNames(EventNames::create())
-    , m_threadTimers(std::make_unique<ThreadTimers>())
-    , m_qualifiedNameCache(std::make_unique<QualifiedNameCache>())
+    , m_threadTimers(makeUnique<ThreadTimers>())
+    , m_qualifiedNameCache(makeUnique<QualifiedNameCache>())
 #ifndef NDEBUG
     , m_isMainThread(isMainThread())
 #endif
-    , m_cachedConverterICU(std::make_unique<ICUConverterWrapper>())
+    , m_cachedConverterICU(makeUnique<ICUConverterWrapper>())
 {
     // This constructor will have been called on the main thread before being called on
     // any other thread, and is only called once per thread - this makes this a convenient
     // point to call methods that internally perform a one-time initialization that is not
     // threadsafe.
