diff a/modules/javafx.web/src/main/native/Source/WebCore/css/CSSPrimitiveValue.h b/modules/javafx.web/src/main/native/Source/WebCore/css/CSSPrimitiveValue.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/css/CSSPrimitiveValue.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/css/CSSPrimitiveValue.h
@@ -35,11 +35,10 @@
 
 class CSSBasicShape;
 class CSSCalcValue;
 class CSSToLengthConversionData;
 class Counter;
-class DashboardRegion;
 class DeprecatedCSSOMPrimitiveValue;
 class Pair;
 class Quad;
 class RGBColor;
 class Rect;
@@ -110,13 +109,10 @@
         CSS_DPPX = 30,
         CSS_DPI = 31,
         CSS_DPCM = 32,
         CSS_FR = 33,
         CSS_PAIR = 100, // We envision this being exposed as a means of getting computed style values for pairs (border-spacing/radius, background-position, etc.)
-#if ENABLE(DASHBOARD_SUPPORT)
-        CSS_DASHBOARD_REGION = 101, // FIXME: Dashboard region should not be a primitive value.
-#endif
         CSS_UNICODE_RANGE = 102,
 
         // These are from CSS3 Values and Units, but that isn't a finished standard yet
         CSS_TURN = 107,
         CSS_REMS = 108,
@@ -266,14 +262,10 @@
     Quad* quadValue() const { return m_primitiveUnitType != CSS_QUAD ? nullptr : m_value.quad; }
     Rect* rectValue() const { return m_primitiveUnitType != CSS_RECT ? nullptr : m_value.rect; }
     CSSBasicShape* shapeValue() const { return m_primitiveUnitType != CSS_SHAPE ? nullptr : m_value.shape; }
     CSSValueID valueID() const { return m_primitiveUnitType == CSS_VALUE_ID ? m_value.valueID : CSSValueInvalid; }
 
-#if ENABLE(DASHBOARD_SUPPORT)
-    DashboardRegion* dashboardRegionValue() const { return m_primitiveUnitType != CSS_DASHBOARD_REGION ? nullptr : m_value.region; }
-#endif
-
     template<typename T> inline operator T() const; // Defined in CSSPrimitiveValueMappings.h
 
     String customCSSText() const;
 
     // FIXME-NEWPARSER: Can ditch the boolean and just use the unit type once old parser is gone.
@@ -319,14 +311,10 @@
     void init(Ref<Counter>&&);
     void init(Ref<Pair>&&);
     void init(Ref<Quad>&&);
     void init(Ref<Rect>&&);
 
-#if ENABLE(DASHBOARD_SUPPORT)
-    void init(RefPtr<DashboardRegion>&&); // FIXME: Dashboard region should not be a primitive value.
-#endif
-
     Optional<double> doubleValueInternal(UnitType targetUnitType) const;
 
     double computeLengthDouble(const CSSToLengthConversionData&) const;
 
     ALWAYS_INLINE String formatNumberForCustomCSSText() const;
@@ -340,11 +328,10 @@
         Counter* counter;
         Rect* rect;
         Quad* quad;
         const Color* color;
         Pair* pair;
-        DashboardRegion* region;
         CSSBasicShape* shape;
         CSSCalcValue* calc;
         const CSSFontFamily* fontFamily;
     } m_value;
 };
