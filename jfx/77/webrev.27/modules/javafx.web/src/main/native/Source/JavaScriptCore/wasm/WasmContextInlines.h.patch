diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/wasm/WasmContextInlines.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/wasm/WasmContextInlines.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/wasm/WasmContextInlines.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/wasm/WasmContextInlines.h
@@ -53,17 +53,28 @@
     return instance;
 }
 
 inline void Context::store(Instance* inst, void* softStackLimit)
 {
+    if (inst)
+        inst->setCachedStackLimit(softStackLimit);
+
 #if ENABLE(FAST_TLS_JIT)
     if (useFastTLS())
         _pthread_setspecific_direct(WTF_WASM_CONTEXT_KEY, bitwise_cast<void*>(inst));
+    else
+#endif
+        instance = inst;
+}
+
+inline Instance* Context::tryLoadInstanceFromTLS()
+{
+#if ENABLE(FAST_TLS_JIT)
+    if (useFastTLS())
+        return bitwise_cast<Instance*>(_pthread_getspecific_direct(WTF_WASM_CONTEXT_KEY));
 #endif
-    instance = inst;
-    if (instance)
-        instance->setCachedStackLimit(softStackLimit);
+    return nullptr;
 }
 
 } } // namespace JSC::Wasm
 
 #endif // ENABLE(WEBASSEMBLY)
