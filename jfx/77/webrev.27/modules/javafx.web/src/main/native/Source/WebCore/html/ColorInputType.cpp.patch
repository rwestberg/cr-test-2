diff a/modules/javafx.web/src/main/native/Source/WebCore/html/ColorInputType.cpp b/modules/javafx.web/src/main/native/Source/WebCore/html/ColorInputType.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/ColorInputType.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/ColorInputType.cpp
@@ -107,11 +107,11 @@
 bool ColorInputType::isPresentingAttachedView() const
 {
     return !!m_chooser;
 }
 
-const AtomicString& ColorInputType::formControlType() const
+const AtomString& ColorInputType::formControlType() const
 {
     return InputTypeNames::color();
 }
 
 bool ColorInputType::supportsRequired() const
@@ -143,13 +143,13 @@
     ASSERT(element());
     ASSERT(element()->shadowRoot());
 
     Document& document = element()->document();
     auto wrapperElement = HTMLDivElement::create(document);
-    wrapperElement->setPseudo(AtomicString("-webkit-color-swatch-wrapper", AtomicString::ConstructFromLiteral));
+    wrapperElement->setPseudo(AtomString("-webkit-color-swatch-wrapper", AtomString::ConstructFromLiteral));
     auto colorSwatch = HTMLDivElement::create(document);
-    colorSwatch->setPseudo(AtomicString("-webkit-color-swatch", AtomicString::ConstructFromLiteral));
+    colorSwatch->setPseudo(AtomString("-webkit-color-swatch", AtomString::ConstructFromLiteral));
     wrapperElement->appendChild(colorSwatch);
     element()->userAgentShadowRoot()->appendChild(wrapperElement);
 
     updateColorSwatch();
 }
