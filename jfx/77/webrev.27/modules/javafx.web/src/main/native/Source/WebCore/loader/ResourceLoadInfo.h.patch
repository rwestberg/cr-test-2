diff a/modules/javafx.web/src/main/native/Source/WebCore/loader/ResourceLoadInfo.h b/modules/javafx.web/src/main/native/Source/WebCore/loader/ResourceLoadInfo.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/loader/ResourceLoadInfo.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/loader/ResourceLoadInfo.h
@@ -23,14 +23,18 @@
  * THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 #pragma once
 
+#if ENABLE(CONTENT_EXTENSIONS)
+
 #include "CachedResource.h"
+#include <wtf/OptionSet.h>
 #include <wtf/URL.h>
 
 namespace WebCore {
+namespace ContentExtensions {
 
 enum class ResourceType : uint16_t {
     Invalid = 0x0000,
     Document = 0x0001,
     Image = 0x0002,
@@ -40,20 +44,24 @@
     Raw = 0x0020,
     SVGDocument = 0x0040,
     Media = 0x0080,
     PlugInStream = 0x0100,
     Popup = 0x0200,
+    // 0x0400 and 0x0800 are used by LoadType.
+    Ping = 0x1000,
 };
-const uint16_t ResourceTypeMask = 0x03FF;
+const uint16_t ResourceTypeMask = 0x13FF;
 
 enum class LoadType : uint16_t {
     Invalid = 0x0000,
     FirstParty = 0x0400,
     ThirdParty = 0x0800,
 };
 const uint16_t LoadTypeMask = 0x0C00;
 
+static_assert(!(ResourceTypeMask & LoadTypeMask), "ResourceTypeMask and LoadTypeMask should be mutually exclusive because they are stored in the same uint16_t");
+
 typedef uint16_t ResourceFlags;
 
 // The first 32 bits of a uint64_t action are used for the action location.
 // The next 16 bits are used for the flags (ResourceType and LoadType).
 // The next bit is used to mark actions that are from a rule with an if-domain.
@@ -69,12 +77,15 @@
 uint16_t readLoadType(const String&);
 
 struct ResourceLoadInfo {
     URL resourceURL;
     URL mainDocumentURL;
-    ResourceType type;
+    OptionSet<ResourceType> type;
 
     bool isThirdParty() const;
     ResourceFlags getResourceFlags() const;
 };
 
+} // namespace ContentExtensions
 } // namespace WebCore
+
+#endif
