diff a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGURIReference.h b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGURIReference.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGURIReference.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGURIReference.h
@@ -1,9 +1,9 @@
 /*
  * Copyright (C) 2004, 2005, 2008, 2009 Nikolas Zimmermann <zimmermann@kde.org>
  * Copyright (C) 2004, 2005 Rob Buis <buis@kde.org>
- * Copyright (C) 2018 Apple Inc. All rights reserved.
+ * Copyright (C) 2018-2019 Apple Inc. All rights reserved.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Library General Public
  * License as published by the Free Software Foundation; either
  * version 2 of the License, or (at your option) any later version.
@@ -21,28 +21,22 @@
 
 #pragma once
 
 #include "Document.h"
 #include "QualifiedName.h"
-#include "SVGAnimatedString.h"
+#include "SVGPropertyOwnerRegistry.h"
 
 namespace WebCore {
 
 class SVGElement;
 
-template<typename OwnerType, typename... BaseTypes>
-class SVGAttributeRegistry;
-
-template<typename OwnerType, typename... BaseTypes>
-class SVGAttributeOwnerProxyImpl;
-
 class SVGURIReference {
     WTF_MAKE_NONCOPYABLE(SVGURIReference);
 public:
     virtual ~SVGURIReference() = default;
 
-    void parseAttribute(const QualifiedName&, const AtomicString&);
+    void parseAttribute(const QualifiedName&, const AtomString&);
 
     static String fragmentIdentifierFromIRIString(const String&, const Document&);
 
     struct TargetElementResult {
         RefPtr<Element> element;
@@ -60,25 +54,20 @@
         URL url = document.completeURL(uri);
         ASSERT(!url.protocolIsData());
         return !equalIgnoringFragmentIdentifier(url, document.url());
     }
 
-    using AttributeOwnerProxy = SVGAttributeOwnerProxyImpl<SVGURIReference>;
-    using AttributeRegistry = SVGAttributeRegistry<SVGURIReference>;
-    static AttributeRegistry& attributeRegistry();
+    using PropertyRegistry = SVGPropertyOwnerRegistry<SVGURIReference>;
 
-    const String& href() const;
-    RefPtr<SVGAnimatedString> hrefAnimated();
+    String href() const { return m_href->currentValue(); }
+    SVGAnimatedString& hrefAnimated() { return m_href; }
 
 protected:
     SVGURIReference(SVGElement* contextElement);
 
     static bool isKnownAttribute(const QualifiedName& attributeName);
 
 private:
-    static void registerAttributes();
-
-    std::unique_ptr<AttributeOwnerProxy> m_attributeOwnerProxy;
-    SVGAnimatedStringAttribute m_href;
+    Ref<SVGAnimatedString> m_href;
 };
 
 } // namespace WebCore
