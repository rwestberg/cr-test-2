diff a/modules/javafx.web/src/main/native/Source/WebCore/loader/cache/CachedRawResource.cpp b/modules/javafx.web/src/main/native/Source/WebCore/loader/cache/CachedRawResource.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/loader/cache/CachedRawResource.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/loader/cache/CachedRawResource.cpp
@@ -206,11 +206,11 @@
 {
     if (response.isNull())
         CachedResource::redirectReceived(WTFMove(request), response, WTFMove(completionHandler));
     else {
         m_redirectChain.append(RedirectPair(request, response));
-        iterateClients(CachedResourceClientWalker<CachedRawResourceClient>(m_clients), CachedResourceHandle<CachedRawResource>(this), WTFMove(request), std::make_unique<ResourceResponse>(response), [this, protectedThis = CachedResourceHandle<CachedRawResource>(this), completionHandler = WTFMove(completionHandler), response] (ResourceRequest&& request) mutable {
+        iterateClients(CachedResourceClientWalker<CachedRawResourceClient>(m_clients), CachedResourceHandle<CachedRawResource>(this), WTFMove(request), makeUnique<ResourceResponse>(response), [this, protectedThis = CachedResourceHandle<CachedRawResource>(this), completionHandler = WTFMove(completionHandler), response] (ResourceRequest&& request) mutable {
             CachedResource::redirectReceived(WTFMove(request), response, WTFMove(completionHandler));
         });
     }
 }
 
