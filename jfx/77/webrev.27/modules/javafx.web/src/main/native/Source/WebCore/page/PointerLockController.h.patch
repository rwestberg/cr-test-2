diff a/modules/javafx.web/src/main/native/Source/WebCore/page/PointerLockController.h b/modules/javafx.web/src/main/native/Source/WebCore/page/PointerLockController.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/PointerLockController.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/PointerLockController.h
@@ -26,11 +26,11 @@
 
 #if ENABLE(POINTER_LOCK)
 
 #include <wtf/RefPtr.h>
 #include <wtf/WeakPtr.h>
-#include <wtf/text/AtomicString.h>
+#include <wtf/text/AtomString.h>
 
 namespace WebCore {
 
 class Element;
 class Document;
@@ -55,17 +55,17 @@
     WEBCORE_EXPORT Element* element() const;
 
     WEBCORE_EXPORT void didAcquirePointerLock();
     WEBCORE_EXPORT void didNotAcquirePointerLock();
     WEBCORE_EXPORT void didLosePointerLock();
-    void dispatchLockedMouseEvent(const PlatformMouseEvent&, const AtomicString& eventType);
+    void dispatchLockedMouseEvent(const PlatformMouseEvent&, const AtomString& eventType);
     void dispatchLockedWheelEvent(const PlatformWheelEvent&);
 
 private:
     void clearElement();
-    void enqueueEvent(const AtomicString& type, Element*);
-    void enqueueEvent(const AtomicString& type, Document*);
+    void enqueueEvent(const AtomString& type, Element*);
+    void enqueueEvent(const AtomString& type, Document*);
     Page& m_page;
     bool m_lockPending { false };
     bool m_unlockPending { false };
     bool m_forceCursorVisibleUponUnlock { false };
     RefPtr<Element> m_element;
