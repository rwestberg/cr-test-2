diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WebGPUCommandBuffer.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WebGPUCommandBuffer.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WebGPUCommandBuffer.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WebGPUCommandBuffer.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2018 Apple Inc. All rights reserved.
+ * Copyright (C) 2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -26,33 +26,25 @@
 #pragma once
 
 #if ENABLE(WEBGPU)
 
 #include "GPUCommandBuffer.h"
-
-#include <wtf/Ref.h>
 #include <wtf/RefCounted.h>
 #include <wtf/RefPtr.h>
 
 namespace WebCore {
 
-class WebGPURenderPassEncoder;
-
-struct WebGPURenderPassDescriptor;
-
 class WebGPUCommandBuffer : public RefCounted<WebGPUCommandBuffer> {
 public:
-    static Ref<WebGPUCommandBuffer> create(Ref<GPUCommandBuffer>&&);
-
-    const GPUCommandBuffer& commandBuffer() const { return m_commandBuffer.get(); }
+    static Ref<WebGPUCommandBuffer> create(RefPtr<GPUCommandBuffer>&&);
 
-    RefPtr<WebGPURenderPassEncoder> beginRenderPass(WebGPURenderPassDescriptor&&);
+    GPUCommandBuffer* commandBuffer() { return m_commandBuffer.get(); }
 
 private:
-    WebGPUCommandBuffer(Ref<GPUCommandBuffer>&&);
+    WebGPUCommandBuffer(RefPtr<GPUCommandBuffer>&&);
 
-    Ref<GPUCommandBuffer> m_commandBuffer;
+    RefPtr<GPUCommandBuffer> m_commandBuffer;
 };
 
 } // namespace WebCore
 
 #endif // ENABLE(WEBGPU)
