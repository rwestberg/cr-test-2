diff a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGStopElement.h b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGStopElement.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGStopElement.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGStopElement.h
@@ -1,9 +1,9 @@
 /*
  * Copyright (C) 2004, 2005, 2007, 2008 Nikolas Zimmermann <zimmermann@kde.org>
  * Copyright (C) 2004, 2005, 2006 Rob Buis <buis@kde.org>
- * Copyright (C) 2018 Apple Inc. All rights reserved.
+ * Copyright (C) 2018-2019 Apple Inc. All rights reserved.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Library General Public
  * License as published by the Free Software Foundation; either
  * version 2 of the License, or (at your option) any later version.
@@ -19,11 +19,10 @@
  * Boston, MA 02110-1301, USA.
  */
 
 #pragma once
 
-#include "SVGAnimatedNumber.h"
 #include "SVGElement.h"
 
 namespace WebCore {
 
 class SVGStopElement final : public SVGElement {
@@ -31,30 +30,27 @@
 public:
     static Ref<SVGStopElement> create(const QualifiedName&, Document&);
 
     Color stopColorIncludingOpacity() const;
 
-    float offset() { return m_offset.currentValue(attributeOwnerProxy()); }
-    RefPtr<SVGAnimatedNumber> offsetAnimated() { return m_offset.animatedProperty(attributeOwnerProxy()); }
+    float offset() const { return m_offset->currentValue(); }
+    SVGAnimatedNumber& offsetAnimated() { return m_offset; }
 
 private:
     SVGStopElement(const QualifiedName&, Document&);
 
-    using AttributeOwnerProxy = SVGAttributeOwnerProxyImpl<SVGStopElement, SVGElement>;
-    static AttributeOwnerProxy::AttributeRegistry& attributeRegistry() { return AttributeOwnerProxy::attributeRegistry(); }
-    static bool isKnownAttribute(const QualifiedName& attributeName) { return AttributeOwnerProxy::isKnownAttribute(attributeName); }
-    static void registerAttributes();
+    using PropertyRegistry = SVGPropertyOwnerRegistry<SVGStopElement, SVGElement>;
+    const SVGPropertyRegistry& propertyRegistry() const final { return m_propertyRegistry; }
 
-    const SVGAttributeOwnerProxy& attributeOwnerProxy() const final { return m_attributeOwnerProxy; }
-    void parseAttribute(const QualifiedName&, const AtomicString&) final;
+    void parseAttribute(const QualifiedName&, const AtomString&) final;
     void svgAttributeChanged(const QualifiedName&) final;
 
     bool isGradientStop() const final { return true; }
 
     RenderPtr<RenderElement> createElementRenderer(RenderStyle&&, const RenderTreePosition&) final;
     bool rendererIsNeeded(const RenderStyle&) final;
 
-    AttributeOwnerProxy m_attributeOwnerProxy { *this };
-    SVGAnimatedNumberAttribute m_offset { 0 };
+    PropertyRegistry m_propertyRegistry { *this };
+    Ref<SVGAnimatedNumber> m_offset { SVGAnimatedNumber::create(0) };
 };
 
 } // namespace WebCore
