diff a/modules/javafx.web/src/main/native/Source/WebCore/workers/service/FetchEvent.h b/modules/javafx.web/src/main/native/Source/WebCore/workers/service/FetchEvent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/workers/service/FetchEvent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/workers/service/FetchEvent.h
@@ -46,11 +46,11 @@
         String targetClientId;
     };
 
     WEBCORE_EXPORT static Ref<FetchEvent> createForTesting(ScriptExecutionContext&);
 
-    static Ref<FetchEvent> create(const AtomicString& type, Init&& initializer, IsTrusted isTrusted = IsTrusted::No)
+    static Ref<FetchEvent> create(const AtomString& type, Init&& initializer, IsTrusted isTrusted = IsTrusted::No)
     {
         return adoptRef(*new FetchEvent(type, WTFMove(initializer), isTrusted));
     }
     ~FetchEvent();
 
@@ -69,11 +69,11 @@
     bool respondWithEntered() const { return m_respondWithEntered; }
 
     static ResourceError createResponseError(const URL&, const String&);
 
 private:
-    WEBCORE_EXPORT FetchEvent(const AtomicString&, Init&&, IsTrusted);
+    WEBCORE_EXPORT FetchEvent(const AtomString&, Init&&, IsTrusted);
 
     void promiseIsSettled();
     void processResponse(Expected<Ref<FetchResponse>, ResourceError>&&);
     void respondWithError(ResourceError&&);
 
