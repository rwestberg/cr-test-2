diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/BytecodeUseDef.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/BytecodeUseDef.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/BytecodeUseDef.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/BytecodeUseDef.h
@@ -23,10 +23,11 @@
  * THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 #pragma once
 
+#include "BytecodeStructs.h"
 #include "CodeBlock.h"
 #include "Instruction.h"
 #include <wtf/Forward.h>
 
 namespace JSC {
@@ -65,11 +66,12 @@
             functor(codeBlock->scopeRegister());
         return;
     };
 
     switch (opcodeID) {
-    case op_wide:
+    case op_wide16:
+    case op_wide32:
         RELEASE_ASSERT_NOT_REACHED();
 
     // No uses.
     case op_new_regexp:
     case op_debug:
@@ -82,11 +84,10 @@
     case op_catch:
     case op_profile_control_flow:
     case op_create_direct_arguments:
     case op_create_cloned_arguments:
     case op_get_rest_length:
-    case op_check_traps:
     case op_get_argument:
     case op_nop:
     case op_unreachable:
     case op_super_sampler_begin:
     case op_super_sampler_end:
@@ -103,10 +104,12 @@
     USES(OpRet, value)
     USES(OpJtrue, condition)
     USES(OpJfalse, condition)
     USES(OpJeqNull, value)
     USES(OpJneqNull, value)
+    USES(OpJundefinedOrNull, value)
+    USES(OpJnundefinedOrNull, value)
     USES(OpDec, srcDst)
     USES(OpInc, srcDst)
     USES(OpLogShadowChickenPrologue, scope)
 
     USES(OpJless, lhs, rhs)
@@ -154,11 +157,12 @@
     USES(OpGetEnumerableLength, base)
     USES(OpNewFuncExp, scope)
     USES(OpNewGeneratorFuncExp, scope)
     USES(OpNewAsyncFuncExp, scope)
     USES(OpToIndexString, index)
-    USES(OpCreateLexicalEnvironment, scope)
+    USES(OpCreateLexicalEnvironment, scope, symbolTable, initialValue)
+    USES(OpCreateGeneratorFrameEnvironment, scope, symbolTable, initialValue)
     USES(OpResolveScope, scope)
     USES(OpResolveScopeForHoistingFuncDeclInEval, scope)
     USES(OpGetFromScope, scope)
     USES(OpToPrimitive, src)
     USES(OpTryGetById, base)
@@ -285,25 +289,29 @@
 
 template<typename Block, typename Functor>
 void computeDefsForBytecodeOffset(Block* codeBlock, OpcodeID opcodeID, const Instruction* instruction, const Functor& functor)
 {
     switch (opcodeID) {
-    case op_wide:
+    case op_wide16:
+    case op_wide32:
         RELEASE_ASSERT_NOT_REACHED();
 
     // These don't define anything.
     case op_put_to_scope:
     case op_end:
     case op_throw:
     case op_throw_static_error:
+    case op_check_tdz:
     case op_debug:
     case op_ret:
     case op_jmp:
     case op_jtrue:
     case op_jfalse:
     case op_jeq_null:
     case op_jneq_null:
+    case op_jundefined_or_null:
+    case op_jnundefined_or_null:
     case op_jneq_ptr:
     case op_jless:
     case op_jlesseq:
     case op_jgreater:
     case op_jgreatereq:
@@ -335,11 +343,10 @@
     case op_define_accessor_property:
     case op_profile_type:
     case op_profile_control_flow:
     case op_put_to_arguments:
     case op_set_function_name:
-    case op_check_traps:
     case op_log_shadow_chicken_prologue:
     case op_log_shadow_chicken_tail:
     case op_yield:
     case op_nop:
     case op_unreachable:
@@ -361,10 +368,11 @@
     DEFS(OpEnumeratorStructurePname, dst)
     DEFS(OpEnumeratorGenericPname, dst)
     DEFS(OpGetParentScope, dst)
     DEFS(OpPushWithScope, dst)
     DEFS(OpCreateLexicalEnvironment, dst)
+    DEFS(OpCreateGeneratorFrameEnvironment, dst)
     DEFS(OpResolveScope, dst)
     DEFS(OpResolveScopeForHoistingFuncDeclInEval, dst)
     DEFS(OpStrcat, dst)
     DEFS(OpToPrimitive, dst)
     DEFS(OpCreateThis, dst)
@@ -446,11 +454,10 @@
     DEFS(OpEqNull, dst)
     DEFS(OpNot, dst)
     DEFS(OpMov, dst)
     DEFS(OpNewObject, dst)
     DEFS(OpToThis, srcDst)
-    DEFS(OpCheckTdz, targetVirtualRegister)
     DEFS(OpGetScope, dst)
     DEFS(OpCreateDirectArguments, dst)
     DEFS(OpCreateScopedArguments, dst)
     DEFS(OpCreateClonedArguments, dst)
     DEFS(OpDelById, dst)
