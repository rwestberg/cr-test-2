diff a/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/WebHeapAgent.cpp b/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/WebHeapAgent.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/WebHeapAgent.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/WebHeapAgent.cpp
@@ -24,24 +24,26 @@
  */
 
 #include "config.h"
 #include "WebHeapAgent.h"
 
+#include "InstrumentingAgents.h"
+#include "WebConsoleAgent.h"
 #include <wtf/RunLoop.h>
 
-
 namespace WebCore {
 
 using namespace Inspector;
 
 struct GarbageCollectionData {
     Inspector::Protocol::Heap::GarbageCollection::Type type;
     Seconds startTime;
     Seconds endTime;
 };
 
-class SendGarbageCollectionEventsTask {
+class SendGarbageCollectionEventsTask final {
+    WTF_MAKE_FAST_ALLOCATED;
 public:
     SendGarbageCollectionEventsTask(WebHeapAgent&);
     void addGarbageCollection(GarbageCollectionData&&);
     void reset();
 private:
@@ -90,25 +92,34 @@
     }
 
     m_agent.dispatchGarbageCollectionEventsAfterDelay(WTFMove(collectionsToSend));
 }
 
-WebHeapAgent::WebHeapAgent(Inspector::AgentContext& context)
+WebHeapAgent::WebHeapAgent(WebAgentContext& context)
     : InspectorHeapAgent(context)
-    , m_sendGarbageCollectionEventsTask(std::make_unique<SendGarbageCollectionEventsTask>(*this))
+    , m_instrumentingAgents(context.instrumentingAgents)
+    , m_sendGarbageCollectionEventsTask(makeUnique<SendGarbageCollectionEventsTask>(*this))
 {
 }
 
-WebHeapAgent::~WebHeapAgent()
+WebHeapAgent::~WebHeapAgent() = default;
+
+void WebHeapAgent::enable(ErrorString& errorString)
 {
-    m_sendGarbageCollectionEventsTask->reset();
+    InspectorHeapAgent::enable(errorString);
+
+    if (auto* consoleAgent = m_instrumentingAgents.webConsoleAgent())
+        consoleAgent->setInspectorHeapAgent(this);
 }
 
 void WebHeapAgent::disable(ErrorString& errorString)
 {
     m_sendGarbageCollectionEventsTask->reset();
 
+    if (auto* consoleAgent = m_instrumentingAgents.webConsoleAgent())
+        consoleAgent->setInspectorHeapAgent(nullptr);
+
     InspectorHeapAgent::disable(errorString);
 }
 
 void WebHeapAgent::dispatchGarbageCollectedEvent(Inspector::Protocol::Heap::GarbageCollection::Type type, Seconds startTime, Seconds endTime)
 {
