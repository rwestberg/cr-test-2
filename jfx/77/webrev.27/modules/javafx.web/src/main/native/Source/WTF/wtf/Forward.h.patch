diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/Forward.h b/modules/javafx.web/src/main/native/Source/WTF/wtf/Forward.h
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/Forward.h
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/Forward.h
@@ -22,12 +22,12 @@
 
 #include <stddef.h>
 
 namespace WTF {
 
-class AtomicString;
-class AtomicStringImpl;
+class AtomString;
+class AtomStringImpl;
 class BinarySemaphore;
 class CString;
 class CrashOnOverflow;
 class FunctionDispatcher;
 class Hasher;
@@ -53,14 +53,16 @@
 template<typename T> struct DumbValueTraits;
 template<typename> class Function;
 template<typename> class LazyNeverDestroyed;
 template<typename> class NeverDestroyed;
 template<typename> class OptionSet;
+template<typename> class Optional;
 template<typename T, typename = DumbPtrTraits<T>> class Ref;
 template<typename T, typename = DumbPtrTraits<T>> class RefPtr;
 template<typename> class StringBuffer;
 template<typename, typename = void> class StringTypeAdapter;
+template<typename T> class WeakPtr;
 
 template<typename> struct DefaultHash { using Hash = void; };
 template<typename> struct HashTraits;
 
 template<typename> struct EnumTraits;
@@ -83,12 +85,12 @@
 inline namespace fundamentals_v3 {
 template<class, class> class expected;
 template<class> class unexpected;
 }}} // namespace std::experimental::fundamentals_v3
 
-using WTF::AtomicString;
-using WTF::AtomicStringImpl;
+using WTF::AtomString;
+using WTF::AtomStringImpl;
 using WTF::BinarySemaphore;
 using WTF::CString;
 using WTF::CompletionHandler;
 using WTF::DumbPtrTraits;
 using WTF::DumbValueTraits;
@@ -99,10 +101,11 @@
 using WTF::HashSet;
 using WTF::Hasher;
 using WTF::LazyNeverDestroyed;
 using WTF::NeverDestroyed;
 using WTF::OptionSet;
+using WTF::Optional;
 using WTF::OrdinalNumber;
 using WTF::PrintStream;
 using WTF::Ref;
 using WTF::RefPtr;
 using WTF::SHA1;
