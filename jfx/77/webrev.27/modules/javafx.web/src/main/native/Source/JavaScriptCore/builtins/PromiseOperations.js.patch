diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/builtins/PromiseOperations.js b/modules/javafx.web/src/main/native/Source/JavaScriptCore/builtins/PromiseOperations.js
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/builtins/PromiseOperations.js
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/builtins/PromiseOperations.js
@@ -146,11 +146,11 @@
         if (alreadyResolved)
             return @undefined;
         alreadyResolved = true;
 
         if (resolution === promise)
-            return @rejectPromise(promise, new @TypeError("Resolve a promise with itself"));
+            return @rejectPromise(promise, @makeTypeError("Resolve a promise with itself"));
 
         if (!@isObject(resolution))
             return @fulfillPromise(promise, resolution);
 
         var then;
@@ -214,13 +214,10 @@
 @globalPrivate
 function initializePromise(executor)
 {
     "use strict";
 
-    if (typeof executor !== 'function')
-        @throwTypeError("Promise constructor takes a function argument");
-
     @putByIdDirectPrivate(this, "promiseState", @promiseStatePending);
     @putByIdDirectPrivate(this, "promiseReactions", []);
     @putByIdDirectPrivate(this, "promiseIsHandled", false);
 
     var resolvingFunctions = @createResolvingFunctions(this);
