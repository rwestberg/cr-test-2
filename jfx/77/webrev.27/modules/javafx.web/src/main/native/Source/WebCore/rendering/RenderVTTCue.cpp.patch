diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderVTTCue.cpp b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderVTTCue.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderVTTCue.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderVTTCue.cpp
@@ -178,12 +178,12 @@
 
 bool RenderVTTCue::shouldSwitchDirection(InlineFlowBox* firstLineBox, LayoutUnit step) const
 {
     LayoutUnit top = y();
     LayoutUnit left = x();
-    LayoutUnit bottom = top + firstLineBox->height();
-    LayoutUnit right = left + firstLineBox->width();
+    LayoutUnit bottom { top + firstLineBox->height() };
+    LayoutUnit right { left + firstLineBox->width() };
 
     // 12. Horizontal: If step is negative and the top of the first line
     // box in boxes is now above the top of the video's rendering area,
     // or if step is positive and the bottom of the first line box in
     // boxes is now below the bottom of the video's rendering area, jump
@@ -350,11 +350,11 @@
     RenderElement& backdropElement = downcast<RenderElement>(firstChild);
 
     InlineFlowBox* firstLineBox = downcast<RenderInline>(*backdropElement.firstChild()).firstLineBox();
     if (static_cast<TextTrackCueGeneric*>(m_cue)->useDefaultPosition() && firstLineBox) {
         LayoutUnit parentWidth = containingBlock()->logicalWidth();
-        LayoutUnit width = firstLineBox->width();
+        LayoutUnit width { firstLineBox->width() };
         LayoutUnit right = (parentWidth / 2) - (width / 2);
         setX(right);
     }
     repositionCueSnapToLinesNotSet();
 }
