diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/java/BufferImageJava.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/java/BufferImageJava.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/java/BufferImageJava.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/java/BufferImageJava.h
@@ -52,15 +52,20 @@
     //utatodo: callback to Java
     bool currentFrameKnownToBeOpaque() const override { return false; /*!m_data->m_bitmap->hasAlpha() ;*/}
 
     FloatSize size() const override { return FloatSize(m_width, m_height); }
 
-    ImageDrawResult draw(GraphicsContext& gc, const FloatRect& dstRect,
-              const FloatRect& srcRect, CompositeOperator op, BlendMode bm, DecodingMode dm, ImageOrientationDescription) override;
+    // ImageDrawResult draw(GraphicsContext& gc, const FloatRect& dstRect,
+    //           const FloatRect& srcRect, CompositeOperator op, BlendMode bm, DecodingMode dm, ImageOrientationDescription) override;
+
+    ImageDrawResult draw(GraphicsContext&, const FloatRect& dstRect,
+        const FloatRect& srcRect, const ImagePaintingOptions& = { }) final;
 
     void drawPattern(GraphicsContext&, const FloatRect& destRect, const FloatRect& srcRect, const AffineTransform& patternTransform,
-        const FloatPoint& phase, const FloatSize& spacing, CompositeOperator, BlendMode = BlendMode::Normal) override;
+        const FloatPoint& phase, const FloatSize& spacing, const ImagePaintingOptions& = { }) final;
+
+
 
     NativeImagePtr nativeImageForCurrentFrame(const GraphicsContext* = nullptr) override;
 
 private:
     BufferImage(RefPtr<RQRef> rqoImage, RefPtr<RenderingQueue> rq, int w, int h);
