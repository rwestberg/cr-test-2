diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/mathml/RenderMathMLRoot.cpp b/modules/javafx.web/src/main/native/Source/WebCore/rendering/mathml/RenderMathMLRoot.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/mathml/RenderMathMLRoot.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/mathml/RenderMathMLRoot.cpp
@@ -215,13 +215,13 @@
     auto horizontal = horizontalParameters();
     auto vertical = verticalParameters();
 
     // Stretch the radical operator to cover the base height.
     // We can then determine the metrics of the radical operator + the base.
-    m_radicalOperator.stretchTo(style(), baseAscent + baseDescent);
+    m_radicalOperator.stretchTo(style(), baseAscent + baseDescent + vertical.verticalGap + vertical.ruleThickness);
     LayoutUnit radicalOperatorHeight = m_radicalOperator.ascent() + m_radicalOperator.descent();
-    LayoutUnit indexBottomRaise = vertical.degreeBottomRaisePercent * radicalOperatorHeight;
+    LayoutUnit indexBottomRaise { vertical.degreeBottomRaisePercent * radicalOperatorHeight };
     LayoutUnit radicalAscent = baseAscent + vertical.verticalGap + vertical.ruleThickness + vertical.extraAscender;
     LayoutUnit radicalDescent = std::max<LayoutUnit>(baseDescent, radicalOperatorHeight + vertical.extraAscender - radicalAscent);
     LayoutUnit descent = radicalDescent;
     LayoutUnit ascent = radicalAscent;
 
@@ -259,10 +259,12 @@
 
     setLogicalHeight(ascent + descent);
 
     layoutPositionedObjects(relayoutChildren);
 
+    updateScrollInfoAfterLayout();
+
     clearNeedsLayout();
 }
 
 void RenderMathMLRoot::paint(PaintInfo& info, const LayoutPoint& paintOffset)
 {
