diff a/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/WebConsoleAgent.h b/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/WebConsoleAgent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/WebConsoleAgent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/WebConsoleAgent.h
@@ -23,31 +23,32 @@
  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 #pragma once
 
+#include "InspectorWebAgentBase.h"
 #include <JavaScriptCore/InspectorConsoleAgent.h>
 
 namespace WebCore {
 
 class DOMWindow;
 class ResourceError;
 class ResourceResponse;
+struct WebAgentContext;
 typedef String ErrorString;
 
 class WebConsoleAgent : public Inspector::InspectorConsoleAgent {
     WTF_MAKE_NONCOPYABLE(WebConsoleAgent);
     WTF_MAKE_FAST_ALLOCATED;
 public:
-    WebConsoleAgent(Inspector::AgentContext&, Inspector::InspectorHeapAgent*);
-    virtual ~WebConsoleAgent() = default;
+    WebConsoleAgent(WebAgentContext&);
+    virtual ~WebConsoleAgent();
 
+    // InspectorInstrumentation
     void frameWindowDiscarded(DOMWindow*);
-
-    void getLoggingChannels(ErrorString&, RefPtr<JSON::ArrayOf<Inspector::Protocol::Console::Channel>>&) final;
-    void setLoggingChannelLevel(ErrorString&, const String& channel, const String& level) final;
-
     void didReceiveResponse(unsigned long requestIdentifier, const ResourceResponse&);
     void didFailLoading(unsigned long requestIdentifier, const ResourceError&);
+
+protected:
 };
 
 } // namespace WebCore
