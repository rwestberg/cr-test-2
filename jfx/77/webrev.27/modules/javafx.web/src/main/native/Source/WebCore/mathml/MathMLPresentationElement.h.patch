diff a/modules/javafx.web/src/main/native/Source/WebCore/mathml/MathMLPresentationElement.h b/modules/javafx.web/src/main/native/Source/WebCore/mathml/MathMLPresentationElement.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/mathml/MathMLPresentationElement.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/mathml/MathMLPresentationElement.h
@@ -38,11 +38,11 @@
 public:
     static Ref<MathMLPresentationElement> create(const QualifiedName& tagName, Document&);
 
 protected:
     MathMLPresentationElement(const QualifiedName& tagName, Document&);
-    void parseAttribute(const QualifiedName&, const AtomicString&) override;
+    void parseAttribute(const QualifiedName&, const AtomString&) override;
 
     static bool isPhrasingContent(const Node&);
     static bool isFlowContent(const Node&);
 
     static Optional<bool> toOptionalBool(const BooleanValue& value) { return value == BooleanValue::Default ? WTF::nullopt : Optional<bool>(value == BooleanValue::True); }
@@ -64,11 +64,11 @@
     RenderPtr<RenderElement> createElementRenderer(RenderStyle&&, const RenderTreePosition&) override;
     bool isPresentationMathML() const final { return true; }
 
     static Length parseNumberAndUnit(const StringView&);
     static Length parseNamedSpace(const StringView&);
-    static MathVariant parseMathVariantAttribute(const AtomicString& attributeValue);
+    static MathVariant parseMathVariantAttribute(const AtomString& attributeValue);
 };
 
 }
 
 #endif // ENABLE(MATHML)
