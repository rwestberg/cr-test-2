diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/scripts/codegen/objc_generator_templates.py b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/scripts/codegen/objc_generator_templates.py
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/scripts/codegen/objc_generator_templates.py
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/scripts/codegen/objc_generator_templates.py
@@ -34,11 +34,13 @@
 
 ${includes}
 """)
 
     HeaderPostlude = (
-    """""")
+    """
+${includes}
+""")
 
     TypeConversionsHeaderPrelude = (
     """${includes}
 
 namespace Inspector {""")
@@ -98,10 +100,11 @@
 ${commandDeclarations}
 };""")
 
     BackendDispatcherHeaderDomainHandlerObjCDeclaration = (
     """class ObjCInspector${domainName}BackendDispatcher final : public Alternate${domainName}BackendDispatcher {
+    WTF_MAKE_FAST_ALLOCATED;
 public:
     ObjCInspector${domainName}BackendDispatcher(id<${objcPrefix}${domainName}DomainHandler> handler) { m_delegate = handler; }
 ${commandDeclarations}
 private:
     RetainPtr<id<${objcPrefix}${domainName}DomainHandler>> m_delegate;
@@ -134,12 +137,12 @@
         return;
 
     [_${variableNamePrefix}Handler release];
     _${variableNamePrefix}Handler = [handler retain];
 
-    auto alternateDispatcher = std::make_unique<ObjCInspector${domainName}BackendDispatcher>(handler);
-    auto alternateAgent = std::make_unique<AlternateDispatchableAgent<${domainName}BackendDispatcher, Alternate${domainName}BackendDispatcher>>("${domainName}"_s, *_controller, WTFMove(alternateDispatcher));
+    auto alternateDispatcher = makeUnique<ObjCInspector${domainName}BackendDispatcher>(handler);
+    auto alternateAgent = makeUnique<AlternateDispatchableAgent<${domainName}BackendDispatcher, Alternate${domainName}BackendDispatcher>>("${domainName}"_s, *_controller, WTFMove(alternateDispatcher));
     _controller->appendExtraAgent(WTFMove(alternateAgent));
 }
 
 - (id<${objcPrefix}${domainName}DomainHandler>)${variableNamePrefix}Handler
 {
