diff a/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLOptionsCollection.h b/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLOptionsCollection.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLOptionsCollection.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLOptionsCollection.h
@@ -28,20 +28,21 @@
 #include "HTMLSelectElement.h"
 
 namespace WebCore {
 
 class HTMLOptionsCollection final : public CachedHTMLCollection<HTMLOptionsCollection, CollectionTypeTraits<SelectOptions>::traversalType> {
+    WTF_MAKE_ISO_ALLOCATED(HTMLOptionsCollection);
 public:
     using Base = CachedHTMLCollection<HTMLOptionsCollection, CollectionTypeTraits<SelectOptions>::traversalType>;
 
     static Ref<HTMLOptionsCollection> create(HTMLSelectElement&, CollectionType);
 
     HTMLSelectElement& selectElement() { return downcast<HTMLSelectElement>(ownerNode()); }
     const HTMLSelectElement& selectElement() const { return downcast<HTMLSelectElement>(ownerNode()); }
 
     HTMLOptionElement* item(unsigned offset) const final;
-    HTMLOptionElement* namedItem(const AtomicString& name) const final;
+    HTMLOptionElement* namedItem(const AtomString& name) const final;
 
     ExceptionOr<void> setItem(unsigned index, HTMLOptionElement*);
 
     using OptionOrOptGroupElement = Variant<RefPtr<HTMLOptionElement>, RefPtr<HTMLOptGroupElement>>;
     using HTMLElementOrInt = Variant<RefPtr<HTMLElement>, int>;
@@ -66,11 +67,11 @@
 inline HTMLOptionElement* HTMLOptionsCollection::item(unsigned offset) const
 {
     return downcast<HTMLOptionElement>(Base::item(offset));
 }
 
-inline HTMLOptionElement* HTMLOptionsCollection::namedItem(const AtomicString& name) const
+inline HTMLOptionElement* HTMLOptionsCollection::namedItem(const AtomString& name) const
 {
     return downcast<HTMLOptionElement>(Base::namedItem(name));
 }
 
 inline ExceptionOr<void> HTMLOptionsCollection::setItem(unsigned index, HTMLOptionElement* optionElement)
