diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/gamepad/GamepadEvent.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/gamepad/GamepadEvent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/gamepad/GamepadEvent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/gamepad/GamepadEvent.h
@@ -35,31 +35,31 @@
 
 class GamepadEvent : public Event {
 public:
     ~GamepadEvent() = default;
 
-    static Ref<GamepadEvent> create(const AtomicString& eventType, Gamepad& gamepad)
+    static Ref<GamepadEvent> create(const AtomString& eventType, Gamepad& gamepad)
     {
         return adoptRef(*new GamepadEvent(eventType, gamepad));
     }
 
     struct Init : EventInit {
         RefPtr<Gamepad> gamepad;
     };
 
-    static Ref<GamepadEvent> create(const AtomicString& eventType, const Init& initializer, IsTrusted isTrusted = IsTrusted::No)
+    static Ref<GamepadEvent> create(const AtomString& eventType, const Init& initializer, IsTrusted isTrusted = IsTrusted::No)
     {
         return adoptRef(*new GamepadEvent(eventType, initializer, isTrusted));
     }
 
     Gamepad* gamepad() const { return m_gamepad.get(); }
 
     EventInterface eventInterface() const override { return GamepadEventInterfaceType; }
 
 private:
-    explicit GamepadEvent(const AtomicString& eventType, Gamepad&);
-    GamepadEvent(const AtomicString& eventType, const Init&, IsTrusted);
+    explicit GamepadEvent(const AtomString& eventType, Gamepad&);
+    GamepadEvent(const AtomString& eventType, const Init&, IsTrusted);
 
     RefPtr<Gamepad> m_gamepad;
 };
 
 } // namespace WebCore
