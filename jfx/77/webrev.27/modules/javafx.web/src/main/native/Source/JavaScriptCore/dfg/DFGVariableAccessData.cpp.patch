diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGVariableAccessData.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGVariableAccessData.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGVariableAccessData.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGVariableAccessData.cpp
@@ -154,11 +154,11 @@
         return false;
 
     SpeculatedType type = m_prediction;
     if (type & ~SpecBytecodeNumber)
         type |= SpecDoublePureNaN;
-    if (type & SpecAnyInt)
+    if (type & (SpecInt32Only | SpecInt52Any))
         type |= SpecAnyIntAsDouble;
     return checkAndSet(m_prediction, type);
 }
 
 bool VariableAccessData::couldRepresentInt52()
@@ -178,12 +178,12 @@
     // We punt for machine arguments.
     if (m_local.isArgument())
         return false;
 
     // The argument-aware prediction -- which merges all of an (inlined or machine)
-    // argument's variable access datas' predictions -- must possibly be AnyInt.
-    return !(argumentAwarePrediction() & ~SpecAnyInt);
+    // argument's variable access datas' predictions -- must possibly be Int52Any.
+    return isInt32OrInt52Speculation(argumentAwarePrediction());
 }
 
 FlushFormat VariableAccessData::flushFormat()
 {
     ASSERT(find() == this);
