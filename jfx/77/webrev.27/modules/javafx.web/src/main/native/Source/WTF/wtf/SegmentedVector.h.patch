diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/SegmentedVector.h b/modules/javafx.web/src/main/native/Source/WTF/wtf/SegmentedVector.h
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/SegmentedVector.h
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/SegmentedVector.h
@@ -34,10 +34,11 @@
 namespace WTF {
 
     // An iterator for SegmentedVector. It supports only the pre ++ operator
     template <typename T, size_t SegmentSize = 8> class SegmentedVector;
     template <typename T, size_t SegmentSize = 8> class SegmentedVectorIterator {
+        WTF_MAKE_FAST_ALLOCATED;
     private:
         friend class SegmentedVector<T, SegmentSize>;
     public:
         typedef SegmentedVectorIterator<T, SegmentSize> Iterator;
 
@@ -85,11 +86,11 @@
     // stored in its buffer when it grows. Therefore, it is safe to keep
     // pointers into a SegmentedVector. The default tuning values are
     // optimized for segmented vectors that get large; you may want to use
     // SegmentedVector<thingy, 1> if you don't expect a lot of entries.
     template <typename T, size_t SegmentSize>
-    class SegmentedVector {
+    class SegmentedVector final {
         friend class SegmentedVectorIterator<T, SegmentSize>;
         WTF_MAKE_NONCOPYABLE(SegmentedVector);
         WTF_MAKE_FAST_ALLOCATED;
 
     public:
