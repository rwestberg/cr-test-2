diff a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityImageMapLink.cpp b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityImageMapLink.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityImageMapLink.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityImageMapLink.cpp
@@ -66,11 +66,11 @@
 AccessibilityRole AccessibilityImageMapLink::roleValue() const
 {
     if (!m_areaElement)
         return AccessibilityRole::WebCoreLink;
 
-    const AtomicString& ariaRole = getAttribute(roleAttr);
+    const AtomString& ariaRole = getAttribute(roleAttr);
     if (!ariaRole.isEmpty())
         return AccessibilityObject::ariaRoleToWebCoreRole(ariaRole);
 
     return AccessibilityRole::WebCoreLink;
 }
@@ -91,43 +91,43 @@
         return URL();
 
     return m_areaElement->href();
 }
 
-void AccessibilityImageMapLink::accessibilityText(Vector<AccessibilityText>& textOrder)
+void AccessibilityImageMapLink::accessibilityText(Vector<AccessibilityText>& textOrder) const
 {
     String description = accessibilityDescription();
     if (!description.isEmpty())
         textOrder.append(AccessibilityText(description, AccessibilityTextSource::Alternative));
 
-    const AtomicString& titleText = getAttribute(titleAttr);
+    const AtomString& titleText = getAttribute(titleAttr);
     if (!titleText.isEmpty())
         textOrder.append(AccessibilityText(titleText, AccessibilityTextSource::TitleTag));
 
-    const AtomicString& summary = getAttribute(summaryAttr);
+    const AtomString& summary = getAttribute(summaryAttr);
     if (!summary.isEmpty())
         textOrder.append(AccessibilityText(summary, AccessibilityTextSource::Summary));
 }
 
 String AccessibilityImageMapLink::accessibilityDescription() const
 {
-    const AtomicString& ariaLabel = getAttribute(aria_labelAttr);
+    const AtomString& ariaLabel = getAttribute(aria_labelAttr);
     if (!ariaLabel.isEmpty())
         return ariaLabel;
-    const AtomicString& alt = getAttribute(altAttr);
+    const AtomString& alt = getAttribute(altAttr);
     if (!alt.isEmpty())
         return alt;
 
     return String();
 }
 
 String AccessibilityImageMapLink::title() const
 {
-    const AtomicString& title = getAttribute(titleAttr);
+    const AtomString& title = getAttribute(titleAttr);
     if (!title.isEmpty())
         return title;
-    const AtomicString& summary = getAttribute(summaryAttr);
+    const AtomString& summary = getAttribute(summaryAttr);
     if (!summary.isEmpty())
         return summary;
 
     return String();
 }
