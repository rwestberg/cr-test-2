diff a/modules/javafx.web/src/main/native/Source/WebCore/html/track/TrackBase.cpp b/modules/javafx.web/src/main/native/Source/WebCore/html/track/TrackBase.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/track/TrackBase.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/track/TrackBase.cpp
@@ -50,11 +50,11 @@
     static NeverDestroyed<RefPtr<Logger>> logger;
     return logger;
 }
 #endif
 
-TrackBase::TrackBase(Type type, const AtomicString& id, const AtomicString& label, const AtomicString& language)
+TrackBase::TrackBase(Type type, const AtomString& id, const AtomString& label, const AtomString& language)
     : m_uniqueId(++s_uniqueId)
     , m_id(id)
     , m_label(label)
     , m_language(language)
     , m_validBCP47Language(language)
@@ -139,11 +139,11 @@
         return false;
     }
     return true;
 }
 
-void TrackBase::setLanguage(const AtomicString& language)
+void TrackBase::setLanguage(const AtomString& language)
 {
     if (!language.isEmpty() && !isValidBCP47LanguageTag(language)) {
         String message;
         if (language.contains((UChar)'\0'))
             message = "The language contains a null character and is not a valid BCP 47 language tag."_s;
@@ -160,11 +160,11 @@
         m_validBCP47Language = language;
 
     m_language = language;
 }
 
-AtomicString TrackBase::validBCP47Language() const
+AtomString TrackBase::validBCP47Language() const
 {
     return m_validBCP47Language;
 }
 
 #if !RELEASE_LOG_DISABLED
@@ -172,21 +172,21 @@
 {
     return LogMedia;
 }
 #endif
 
-MediaTrackBase::MediaTrackBase(Type type, const AtomicString& id, const AtomicString& label, const AtomicString& language)
+MediaTrackBase::MediaTrackBase(Type type, const AtomString& id, const AtomString& label, const AtomString& language)
     : TrackBase(type, id, label, language)
 {
 }
 
-void MediaTrackBase::setKind(const AtomicString& kind)
+void MediaTrackBase::setKind(const AtomString& kind)
 {
     setKindInternal(kind);
 }
 
-void MediaTrackBase::setKindInternal(const AtomicString& kind)
+void MediaTrackBase::setKindInternal(const AtomString& kind)
 {
     if (isValidKind(kind))
         m_kind = kind;
     else
         m_kind = emptyAtom();
