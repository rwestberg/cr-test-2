diff a/modules/javafx.web/src/main/native/Source/WebCore/loader/SubresourceLoader.h b/modules/javafx.web/src/main/native/Source/WebCore/loader/SubresourceLoader.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/loader/SubresourceLoader.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/loader/SubresourceLoader.h
@@ -35,18 +35,17 @@
 
 namespace WebCore {
 
 class CachedResource;
 class CachedResourceLoader;
-class DocumentLoader;
 class NetworkLoadMetrics;
 class ResourceRequest;
 class SecurityOrigin;
 
 class SubresourceLoader final : public ResourceLoader {
 public:
-    WEBCORE_EXPORT static void create(DocumentLoader&, CachedResource&, ResourceRequest&&, const ResourceLoaderOptions&, CompletionHandler<void(RefPtr<SubresourceLoader>&&)>&&);
+    WEBCORE_EXPORT static void create(Frame&, CachedResource&, ResourceRequest&&, const ResourceLoaderOptions&, CompletionHandler<void(RefPtr<SubresourceLoader>&&)>&&);
 
     virtual ~SubresourceLoader();
 
     void cancelIfNotFinishing();
     bool isSubresourceLoader() const override;
@@ -65,11 +64,11 @@
 
     void markInAsyncResponsePolicyCheck() { m_inAsyncResponsePolicyCheck = true; }
     void didReceiveResponsePolicy();
 
 private:
-    SubresourceLoader(DocumentLoader&, CachedResource&, const ResourceLoaderOptions&);
+    SubresourceLoader(Frame&, CachedResource&, const ResourceLoaderOptions&);
 
     void init(ResourceRequest&&, CompletionHandler<void(bool)>&&) override;
 
     void willSendRequestInternal(ResourceRequest&&, const ResourceResponse& redirectResponse, CompletionHandler<void(ResourceRequest&&)>&&) override;
     void didSendData(unsigned long long bytesSent, unsigned long long totalBytesToBeSent) override;
