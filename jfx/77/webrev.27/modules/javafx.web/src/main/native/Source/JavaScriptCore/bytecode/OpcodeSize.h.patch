diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/OpcodeSize.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/OpcodeSize.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/OpcodeSize.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/OpcodeSize.h
@@ -27,24 +27,33 @@
 
 namespace JSC {
 
 enum OpcodeSize {
     Narrow = 1,
-    Wide = 4,
+    Wide16 = 2,
+    Wide32 = 4,
 };
 
 template<OpcodeSize>
 struct TypeBySize;
 
 template<>
 struct TypeBySize<OpcodeSize::Narrow> {
-    using type = uint8_t;
+    using signedType = int8_t;
+    using unsignedType = uint8_t;
 };
 
 template<>
-struct TypeBySize<OpcodeSize::Wide> {
-    using type = uint32_t;
+struct TypeBySize<OpcodeSize::Wide16> {
+    using signedType = int16_t;
+    using unsignedType = uint16_t;
+};
+
+template<>
+struct TypeBySize<OpcodeSize::Wide32> {
+    using signedType = int32_t;
+    using unsignedType = uint32_t;
 };
 
 template<OpcodeSize>
 struct PaddingBySize;
 
@@ -52,10 +61,15 @@
 struct PaddingBySize<OpcodeSize::Narrow> {
     static constexpr uint8_t value = 0;
 };
 
 template<>
-struct PaddingBySize<OpcodeSize::Wide> {
+struct PaddingBySize<OpcodeSize::Wide16> {
+    static constexpr uint8_t value = 1;
+};
+
+template<>
+struct PaddingBySize<OpcodeSize::Wide32> {
     static constexpr uint8_t value = 1;
 };
 
 } // namespace JSC
