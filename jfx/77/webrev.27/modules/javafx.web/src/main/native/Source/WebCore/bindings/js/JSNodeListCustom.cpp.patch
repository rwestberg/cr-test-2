diff a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSNodeListCustom.cpp b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSNodeListCustom.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSNodeListCustom.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSNodeListCustom.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2007, 2014 Apple Inc. All rights reserved.
+ * Copyright (C) 2007-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -29,20 +29,20 @@
 #include "ChildNodeList.h"
 #include "JSNode.h"
 #include "LiveNodeList.h"
 #include "Node.h"
 #include "NodeList.h"
-#include <wtf/text/AtomicString.h>
+#include <wtf/text/AtomString.h>
 
 
 namespace WebCore {
 using namespace JSC;
 
 bool JSNodeListOwner::isReachableFromOpaqueRoots(JSC::Handle<JSC::Unknown> handle, void*, SlotVisitor& visitor, const char** reason)
 {
     JSNodeList* jsNodeList = jsCast<JSNodeList*>(handle.slot()->asCell());
-    if (!jsNodeList->hasCustomProperties(*jsNodeList->vm()))
+    if (!jsNodeList->hasCustomProperties(jsNodeList->vm()))
         return false;
 
     if (jsNodeList->wrapped().isLiveNodeList()) {
         if (UNLIKELY(reason))
             *reason = "LiveNodeList owner is opaque root";
