diff a/modules/javafx.web/src/main/native/Source/WebCore/worklets/WorkletConsoleClient.h b/modules/javafx.web/src/main/native/Source/WebCore/worklets/WorkletConsoleClient.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/worklets/WorkletConsoleClient.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/worklets/WorkletConsoleClient.h
@@ -43,19 +43,22 @@
     explicit WorkletConsoleClient(WorkletGlobalScope&);
     virtual ~WorkletConsoleClient();
 
 private:
     void messageWithTypeAndLevel(MessageType, MessageLevel, JSC::ExecState*, Ref<Inspector::ScriptArguments>&&) final;
-    void count(JSC::ExecState*, Ref<Inspector::ScriptArguments>&&) final;
+    void count(JSC::ExecState*, const String& label) final;
+    void countReset(JSC::ExecState*, const String& label) final;
     void profile(JSC::ExecState*, const String& title) final;
     void profileEnd(JSC::ExecState*, const String& title) final;
     void takeHeapSnapshot(JSC::ExecState*, const String& title) final;
-    void time(JSC::ExecState*, const String& title) final;
-    void timeEnd(JSC::ExecState*, const String& title) final;
+    void time(JSC::ExecState*, const String& label) final;
+    void timeLog(JSC::ExecState*, const String& label, Ref<Inspector::ScriptArguments>&&) final;
+    void timeEnd(JSC::ExecState*, const String& label) final;
     void timeStamp(JSC::ExecState*, Ref<Inspector::ScriptArguments>&&) final;
     void record(JSC::ExecState*, Ref<Inspector::ScriptArguments>&&) final;
     void recordEnd(JSC::ExecState*, Ref<Inspector::ScriptArguments>&&) final;
+    void screenshot(JSC::ExecState*, Ref<Inspector::ScriptArguments>&&) final;
 
     WorkletGlobalScope& m_workletGlobalScope;
 };
 
 } // namespace WebCore
