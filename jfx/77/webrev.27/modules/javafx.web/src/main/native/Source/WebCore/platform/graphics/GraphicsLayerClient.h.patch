diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GraphicsLayerClient.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GraphicsLayerClient.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GraphicsLayerClient.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GraphicsLayerClient.h
@@ -25,10 +25,11 @@
 
 #pragma once
 
 #include "TiledBacking.h"
 #include <wtf/Forward.h>
+#include <wtf/OptionSet.h>
 
 namespace WebCore {
 
 class FloatPoint;
 class FloatRect;
@@ -36,21 +37,19 @@
 class GraphicsLayer;
 class IntPoint;
 class IntRect;
 class TransformationMatrix;
 
-enum GraphicsLayerPaintingPhaseFlags {
-    GraphicsLayerPaintBackground            = 1 << 0,
-    GraphicsLayerPaintForeground            = 1 << 1,
-    GraphicsLayerPaintMask                  = 1 << 2,
-    GraphicsLayerPaintClipPath              = 1 << 3,
-    GraphicsLayerPaintOverflowContents      = 1 << 4,
-    GraphicsLayerPaintCompositedScroll      = 1 << 5,
-    GraphicsLayerPaintChildClippingMask     = 1 << 6,
-    GraphicsLayerPaintAllWithOverflowClip   = GraphicsLayerPaintBackground | GraphicsLayerPaintForeground
+enum class GraphicsLayerPaintingPhase {
+    Background            = 1 << 0,
+    Foreground            = 1 << 1,
+    Mask                  = 1 << 2,
+    ClipPath              = 1 << 3,
+    OverflowContents      = 1 << 4,
+    CompositedScroll      = 1 << 5,
+    ChildClippingMask     = 1 << 6,
 };
-typedef uint8_t GraphicsLayerPaintingPhase;
 
 enum AnimatedPropertyID {
     AnimatedPropertyInvalid,
     AnimatedPropertyTransform,
     AnimatedPropertyOpacity,
@@ -69,12 +68,14 @@
     LayerTreeAsTextIncludeRepaintRects          = 1 << 3,
     LayerTreeAsTextIncludePaintingPhases        = 1 << 4,
     LayerTreeAsTextIncludeContentLayers         = 1 << 5,
     LayerTreeAsTextIncludePageOverlayLayers     = 1 << 6,
     LayerTreeAsTextIncludeAcceleratesDrawing    = 1 << 7,
-    LayerTreeAsTextIncludeBackingStoreAttached  = 1 << 8,
-    LayerTreeAsTextIncludeRootLayerProperties   = 1 << 9,
+    LayerTreeAsTextIncludeClipping              = 1 << 8,
+    LayerTreeAsTextIncludeBackingStoreAttached  = 1 << 9,
+    LayerTreeAsTextIncludeRootLayerProperties   = 1 << 10,
+    LayerTreeAsTextIncludeEventRegion           = 1 << 11,
     LayerTreeAsTextShowAll                      = 0xFFFF
 };
 typedef unsigned LayerTreeAsTextBehavior;
 
 enum GraphicsLayerPaintFlags {
@@ -99,11 +100,11 @@
     virtual void notifyFlushRequired(const GraphicsLayer*) { }
 
     // Notification that this layer requires a flush before the next display refresh.
     virtual void notifyFlushBeforeDisplayRefresh(const GraphicsLayer*) { }
 
-    virtual void paintContents(const GraphicsLayer*, GraphicsContext&, GraphicsLayerPaintingPhase, const FloatRect& /* inClip */, GraphicsLayerPaintBehavior) { }
+    virtual void paintContents(const GraphicsLayer*, GraphicsContext&, OptionSet<GraphicsLayerPaintingPhase>, const FloatRect& /* inClip */, GraphicsLayerPaintBehavior) { }
     virtual void didChangePlatformLayerForLayer(const GraphicsLayer*) { }
 
     // Provides current transform (taking transform-origin and animations into account). Input matrix has been
     // initialized to identity already. Returns false if the layer has no transform.
     virtual bool getCurrentTransform(const GraphicsLayer*, TransformationMatrix&) const { return false; }
