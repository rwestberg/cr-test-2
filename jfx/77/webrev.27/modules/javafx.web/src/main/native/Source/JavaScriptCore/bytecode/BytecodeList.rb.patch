diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/BytecodeList.rb b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/BytecodeList.rb
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/BytecodeList.rb
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/BytecodeList.rb
@@ -48,10 +48,11 @@
     :ResolveType,
     :Structure,
     :StructureID,
     :StructureChain,
     :SymbolTable,
+    :SymbolTableOrScopeDepth,
     :ToThisStatus,
     :TypeLocation,
     :WatchpointSet,
 
     :ValueProfile,
@@ -79,11 +80,12 @@
     emit_opcode_id_string_values_in_h_file: true,
     macro_name_component: :BYTECODE,
     asm_prefix: "llint_",
     op_prefix: "op_"
 
-op :wide
+op :wide16
+op :wide32
 
 op :enter
 
 op :get_scope,
     args: {
@@ -133,11 +135,11 @@
 op :to_this,
     args: {
         srcDst: VirtualRegister,
     },
     metadata: {
-        cachedStructure: WriteBarrierBase[Structure],
+        cachedStructureID: StructureID,
         toThisStatus: ToThisStatus,
         profile: ValueProfile,
     }
 
 op :check_tdz,
@@ -222,11 +224,10 @@
         :greatereq,
         :below,
         :beloweq,
         :mod,
         :pow,
-        :lshift,
         :rshift,
         :urshift,
     ],
     args: {
         dst: VirtualRegister,
@@ -257,10 +258,11 @@
 op_group :ValueProfiledBinaryOp,
     [
         :bitand,
         :bitor,
         :bitxor,
+        :lshift,
     ],
     args: {
         dst: VirtualRegister,
         lhs: VirtualRegister,
         rhs: VirtualRegister,
@@ -411,12 +413,10 @@
         dst: VirtualRegister,
         base: VirtualRegister,
         property: unsigned,
     },
     metadata: {
-        mode: GetByIdMode,
-        hitCountForLLIntCaching: unsigned,
         modeMetadata: GetByIdModeMetadata,
         profile: ValueProfile,
     }
 
 op :get_by_id_with_this,
@@ -623,10 +623,22 @@
     args: {
         value: VirtualRegister,
         targetLabel: BoundLabel,
     }
 
+op :jundefined_or_null,
+    args: {
+        value: VirtualRegister,
+        targetLabel: BoundLabel,
+    }
+
+op :jnundefined_or_null,
+    args: {
+        value: VirtualRegister,
+        targetLabel: BoundLabel,
+    }
+
 op :jneq_ptr,
     args: {
         value: VirtualRegister,
         specialPointer: Special::Pointer,
         targetLabel: BoundLabel,
@@ -703,11 +715,10 @@
         argc: unsigned,
         argv: unsigned,
     },
     metadata: {
         callLinkInfo: LLIntCallLinkInfo,
-        arrayProfile: ArrayProfile,
         profile: ValueProfile,
     }
 
 op :tail_call,
     args: {
@@ -716,11 +727,10 @@
         argc: unsigned,
         argv: unsigned,
     },
     metadata: {
         callLinkInfo: LLIntCallLinkInfo,
-        arrayProfile: ArrayProfile,
         profile: ValueProfile,
     }
 
 op :call_eval,
     args: {
@@ -729,11 +739,10 @@
         argc: unsigned,
         argv: unsigned,
     },
     metadata: {
         callLinkInfo: LLIntCallLinkInfo,
-        arrayProfile: ArrayProfile,
         profile: ValueProfile,
     }
 
 op :call_varargs,
     args: {
@@ -784,11 +793,10 @@
         argc: unsigned,
         argv: unsigned,
     },
     metadata: {
         callLinkInfo: LLIntCallLinkInfo,
-        arrayProfile: ArrayProfile,
         profile: ValueProfile,
     }
 
 op :construct_varargs,
     args: {
@@ -843,12 +851,12 @@
              symbolTable: WriteBarrierBase[SymbolTable], # lexicalEnvironment && type != ModuleVar
 
              constantScope: WriteBarrierBase[JSScope],
 
              # written from the slow path
-             globalLexicalEnvironment: JSGlobalLexicalEnvironment.*,
-             globalObject: JSGlobalObject.*,
+             globalLexicalEnvironment: WriteBarrierBase[JSGlobalLexicalEnvironment],
+             globalObject: WriteBarrierBase[JSGlobalObject],
         },
     }
 
 op :get_from_scope,
     args: {
@@ -879,11 +887,11 @@
         scope: VirtualRegister, # offset 1
         var: unsigned, # offset 2
         value: VirtualRegister, # offset 3
         # $begin: :private,
         getPutInfo: GetPutInfo,
-        symbolTableOrScopeDepth: int,
+        symbolTableOrScopeDepth: SymbolTableOrScopeDepth,
         offset: unsigned,
     },
     metadata: {
         getPutInfo: GetPutInfo, # offset 4
         _: { # offset 5
@@ -927,10 +935,18 @@
         scope: VirtualRegister,
         symbolTable: VirtualRegister,
         initialValue: VirtualRegister,
     }
 
+op :create_generator_frame_environment,
+    args: {
+        dst: VirtualRegister,
+        scope: VirtualRegister,
+        symbolTable: VirtualRegister,
+        initialValue: VirtualRegister,
+    }
+
 op :get_parent_scope,
     args: {
         dst: VirtualRegister,
         scope: VirtualRegister,
     }
@@ -967,11 +983,11 @@
     }
 
 op :profile_type,
     args: {
         targetVirtualRegister: VirtualRegister,
-        symbolTableOrScopeDepth: int,
+        symbolTableOrScopeDepth: SymbolTableOrScopeDepth,
         flag: ProfileTypeBytecodeFlag,
         identifier?: unsigned,
         resolveType: ResolveType,
     },
     metadata: {
@@ -1075,12 +1091,10 @@
         generator: VirtualRegister,
         yieldPoint: unsigned,
         argument: VirtualRegister,
     }
 
-op :check_traps
-
 op :log_shadow_chicken_prologue,
     args: {
         scope: VirtualRegister,
     }
 
@@ -1135,10 +1149,21 @@
 op :llint_cloop_did_return_from_js_19
 op :llint_cloop_did_return_from_js_20
 op :llint_cloop_did_return_from_js_21
 op :llint_cloop_did_return_from_js_22
 op :llint_cloop_did_return_from_js_23
+op :llint_cloop_did_return_from_js_24
+op :llint_cloop_did_return_from_js_25
+op :llint_cloop_did_return_from_js_26
+op :llint_cloop_did_return_from_js_27
+op :llint_cloop_did_return_from_js_28
+op :llint_cloop_did_return_from_js_29
+op :llint_cloop_did_return_from_js_30
+op :llint_cloop_did_return_from_js_31
+op :llint_cloop_did_return_from_js_32
+op :llint_cloop_did_return_from_js_33
+op :llint_cloop_did_return_from_js_34
 
 end_section :CLoopHelpers
 
 begin_section :NativeHelpers,
     emit_in_h_file: true,
