diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/DocumentParser.h b/modules/javafx.web/src/main/native/Source/WebCore/dom/DocumentParser.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/DocumentParser.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/DocumentParser.h
@@ -21,16 +21,17 @@
  *
  */
 
 #pragma once
 
+#include "Document.h"
 #include <wtf/Forward.h>
 #include <wtf/RefCounted.h>
+#include <wtf/WeakPtr.h>
 
 namespace WebCore {
 
-class Document;
 class DocumentWriter;
 class SegmentedString;
 class ScriptableDocumentParser;
 
 class DocumentParser : public RefCounted<DocumentParser> {
@@ -60,11 +61,11 @@
     // and is very unclear as to what it actually means.  The LegacyHTMLDocumentParser
     // used to implement it.
     virtual bool processingData() const { return false; }
 
     // document() will return 0 after detach() is called.
-    Document* document() const { ASSERT(m_document); return m_document; }
+    Document* document() const { ASSERT(m_document); return m_document.get(); }
 
     bool isParsing() const { return m_state == ParsingState; }
     bool isStopping() const { return m_state == StoppingState; }
     bool isStopped() const { return m_state >= StoppedState; }
     bool isDetached() const { return m_state == DetachedState; }
@@ -112,9 +113,9 @@
     ParserState m_state;
     bool m_documentWasLoadedAsPartOfNavigation;
 
     // Every DocumentParser needs a pointer back to the document.
     // m_document will be 0 after the parser is stopped.
-    Document* m_document;
+    WeakPtr<Document> m_document;
 };
 
 } // namespace WebCore
