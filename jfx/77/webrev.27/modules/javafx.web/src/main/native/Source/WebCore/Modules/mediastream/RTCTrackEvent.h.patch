diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCTrackEvent.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCTrackEvent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCTrackEvent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCTrackEvent.h
@@ -31,11 +31,11 @@
 #pragma once
 
 #if ENABLE(WEB_RTC)
 
 #include "Event.h"
-#include <wtf/text/AtomicString.h>
+#include <wtf/text/AtomString.h>
 
 namespace WebCore {
 
 class MediaStream;
 class MediaStreamTrack;
@@ -44,30 +44,30 @@
 
 typedef Vector<RefPtr<MediaStream>> MediaStreamArray;
 
 class RTCTrackEvent : public Event {
 public:
-    static Ref<RTCTrackEvent> create(const AtomicString& type, CanBubble, IsCancelable, RefPtr<RTCRtpReceiver>&&, RefPtr<MediaStreamTrack>&&, MediaStreamArray&&, RefPtr<RTCRtpTransceiver>&&);
+    static Ref<RTCTrackEvent> create(const AtomString& type, CanBubble, IsCancelable, RefPtr<RTCRtpReceiver>&&, RefPtr<MediaStreamTrack>&&, MediaStreamArray&&, RefPtr<RTCRtpTransceiver>&&);
 
     struct Init : EventInit {
         RefPtr<RTCRtpReceiver> receiver;
         RefPtr<MediaStreamTrack> track;
         MediaStreamArray streams;
         RefPtr<RTCRtpTransceiver> transceiver;
     };
-    static Ref<RTCTrackEvent> create(const AtomicString& type, const Init&, IsTrusted = IsTrusted::No);
+    static Ref<RTCTrackEvent> create(const AtomString& type, const Init&, IsTrusted = IsTrusted::No);
 
     RTCRtpReceiver* receiver() const { return m_receiver.get(); }
     MediaStreamTrack* track() const  { return m_track.get(); }
     const MediaStreamArray& streams() const  { return m_streams; }
     RTCRtpTransceiver* transceiver() const  { return m_transceiver.get(); }
 
     virtual EventInterface eventInterface() const { return RTCTrackEventInterfaceType; }
 
 private:
-    RTCTrackEvent(const AtomicString& type, CanBubble, IsCancelable, RefPtr<RTCRtpReceiver>&&, RefPtr<MediaStreamTrack>&&, MediaStreamArray&&, RefPtr<RTCRtpTransceiver>&&);
-    RTCTrackEvent(const AtomicString& type, const Init&, IsTrusted);
+    RTCTrackEvent(const AtomString& type, CanBubble, IsCancelable, RefPtr<RTCRtpReceiver>&&, RefPtr<MediaStreamTrack>&&, MediaStreamArray&&, RefPtr<RTCRtpTransceiver>&&);
+    RTCTrackEvent(const AtomString& type, const Init&, IsTrusted);
 
     RefPtr<RTCRtpReceiver> m_receiver;
     RefPtr<MediaStreamTrack> m_track;
     MediaStreamArray m_streams;
     RefPtr<RTCRtpTransceiver> m_transceiver;
