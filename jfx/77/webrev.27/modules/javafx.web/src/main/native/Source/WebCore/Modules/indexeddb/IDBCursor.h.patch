diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBCursor.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBCursor.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBCursor.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBCursor.h
@@ -28,10 +28,12 @@
 #if ENABLE(INDEXED_DATABASE)
 
 #include "ExceptionOr.h"
 #include "IDBCursorDirection.h"
 #include "IDBCursorInfo.h"
+#include "IDBKeyPath.h"
+#include "IDBRequest.h"
 #include "IDBValue.h"
 #include "JSValueInWrappedObject.h"
 #include <JavaScriptCore/Strong.h>
 #include <wtf/Variant.h>
 #include <wtf/WeakPtr.h>
@@ -42,10 +44,11 @@
 class IDBIndex;
 class IDBObjectStore;
 class IDBTransaction;
 
 class IDBCursor : public ScriptWrappable, public RefCounted<IDBCursor> {
+    WTF_MAKE_ISO_ALLOCATED(IDBCursor);
 public:
     static Ref<IDBCursor> create(IDBObjectStore&, const IDBCursorInfo&);
     static Ref<IDBCursor> create(IDBIndex&, const IDBCursorInfo&);
 
     virtual ~IDBCursor();
@@ -56,10 +59,11 @@
     IDBCursorDirection direction() const;
 
     IDBKey* key() { return m_key.get(); };
     IDBKey* primaryKey() { return m_primaryKey.get(); };
     IDBValue value() { return m_value; };
+    const Optional<IDBKeyPath>& primaryKeyPath() { return m_keyPath; };
     JSValueInWrappedObject& keyWrapper() { return m_keyWrapper; }
     JSValueInWrappedObject& primaryKeyWrapper() { return m_primaryKeyWrapper; }
     JSValueInWrappedObject& valueWrapper() { return m_valueWrapper; }
 
     ExceptionOr<Ref<IDBRequest>> update(JSC::ExecState&, JSC::JSValue);
@@ -72,13 +76,14 @@
 
     const IDBCursorInfo& info() const { return m_info; }
 
     void setRequest(IDBRequest& request) { m_request = makeWeakPtr(&request); }
     void clearRequest() { m_request.clear(); }
+    void clearWrappers();
     IDBRequest* request() { return m_request.get(); }
 
-    void setGetResult(IDBRequest&, const IDBGetResult&);
+    bool setGetResult(IDBRequest&, const IDBGetResult&);
 
     virtual bool isKeyCursorWithValue() const { return false; }
 
 protected:
     IDBCursor(IDBObjectStore&, const IDBCursorInfo&);
@@ -101,10 +106,11 @@
     RefPtr<IDBKey> m_key;
     RefPtr<IDBKey> m_primaryKey;
     IDBKeyData m_keyData;
     IDBKeyData m_primaryKeyData;
     IDBValue m_value;
+    Optional<IDBKeyPath> m_keyPath;
 
     JSValueInWrappedObject m_keyWrapper;
     JSValueInWrappedObject m_primaryKeyWrapper;
     JSValueInWrappedObject m_valueWrapper;
 };
