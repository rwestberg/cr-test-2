diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/paymentrequest/PaymentHandler.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/paymentrequest/PaymentHandler.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/paymentrequest/PaymentHandler.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/paymentrequest/PaymentHandler.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2017-2018 Apple Inc. All rights reserved.
+ * Copyright (C) 2017-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -44,16 +44,17 @@
 
 class PaymentHandler : public virtual PaymentSessionBase {
 public:
     static RefPtr<PaymentHandler> create(Document&, PaymentRequest&, const PaymentRequest::MethodIdentifier&);
     static ExceptionOr<void> canCreateSession(Document&);
+    static bool enabledForContext(ScriptExecutionContext&);
     static bool hasActiveSession(Document&);
 
     virtual ExceptionOr<void> convertData(JSC::JSValue&&) = 0;
-    virtual ExceptionOr<void> show() = 0;
+    virtual ExceptionOr<void> show(Document&) = 0;
     virtual void hide() = 0;
-    virtual void canMakePayment(WTF::Function<void(bool)>&& completionHandler) = 0;
+    virtual void canMakePayment(Document&, WTF::Function<void(bool)>&& completionHandler) = 0;
     virtual ExceptionOr<void> detailsUpdated(PaymentRequest::UpdateReason, String&& error, AddressErrors&&, PayerErrorFields&&, JSC::JSObject* paymentMethodErrors) = 0;
     virtual ExceptionOr<void> merchantValidationCompleted(JSC::JSValue&&) = 0;
     virtual void complete(Optional<PaymentComplete>&&) = 0;
     virtual ExceptionOr<void> retry(PaymentValidationErrors&&) = 0;
 };
