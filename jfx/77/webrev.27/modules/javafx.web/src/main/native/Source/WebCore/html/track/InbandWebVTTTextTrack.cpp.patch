diff a/modules/javafx.web/src/main/native/Source/WebCore/html/track/InbandWebVTTTextTrack.cpp b/modules/javafx.web/src/main/native/Source/WebCore/html/track/InbandWebVTTTextTrack.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/track/InbandWebVTTTextTrack.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/track/InbandWebVTTTextTrack.cpp
@@ -30,14 +30,17 @@
 
 #include "InbandTextTrackPrivate.h"
 #include "Logging.h"
 #include "VTTCue.h"
 #include "VTTRegionList.h"
+#include <wtf/IsoMallocInlines.h>
 #include <wtf/text/CString.h>
 
 namespace WebCore {
 
+WTF_MAKE_ISO_ALLOCATED_IMPL(InbandWebVTTTextTrack);
+
 inline InbandWebVTTTextTrack::InbandWebVTTTextTrack(ScriptExecutionContext& context, TextTrackClient& client, InbandTextTrackPrivate& trackPrivate)
     : InbandTextTrack(context, client, trackPrivate)
 {
 }
 
@@ -49,11 +52,11 @@
 InbandWebVTTTextTrack::~InbandWebVTTTextTrack() = default;
 
 WebVTTParser& InbandWebVTTTextTrack::parser()
 {
     if (!m_webVTTParser)
-        m_webVTTParser = std::make_unique<WebVTTParser>(static_cast<WebVTTParserClient*>(this), scriptExecutionContext());
+        m_webVTTParser = makeUnique<WebVTTParser>(static_cast<WebVTTParserClient*>(this), scriptExecutionContext());
     return *m_webVTTParser;
 }
 
 void InbandWebVTTTextTrack::parseWebVTTCueData(const char* data, unsigned length)
 {
@@ -70,15 +73,15 @@
     Vector<RefPtr<WebVTTCueData>> cues;
     parser().getNewCues(cues);
     for (auto& cueData : cues) {
         auto vttCue = VTTCue::create(*scriptExecutionContext(), *cueData);
         if (hasCue(vttCue.ptr(), TextTrackCue::IgnoreDuration)) {
-            DEBUG_LOG(LOGIDENTIFIER, "ignoring already added cue: ", vttCue.get());
+            INFO_LOG(LOGIDENTIFIER, "ignoring already added cue: ", vttCue.get());
             return;
         }
 
-        DEBUG_LOG(LOGIDENTIFIER, vttCue.get());
+        INFO_LOG(LOGIDENTIFIER, vttCue.get());
 
         addCue(WTFMove(vttCue));
     }
 }
 
