diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/mock/mediasource/MockTracks.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/mock/mediasource/MockTracks.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/mock/mediasource/MockTracks.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/mock/mediasource/MockTracks.h
@@ -37,56 +37,56 @@
 class MockAudioTrackPrivate : public AudioTrackPrivate {
 public:
     static Ref<MockAudioTrackPrivate> create(const MockTrackBox& box) { return adoptRef(*new MockAudioTrackPrivate(box)); }
     virtual ~MockAudioTrackPrivate() = default;
 
-    virtual AtomicString id() const { return m_id; }
+    virtual AtomString id() const { return m_id; }
 
 protected:
     MockAudioTrackPrivate(const MockTrackBox& box)
         : m_box(box)
-        , m_id(AtomicString::number(box.trackID()))
+        , m_id(AtomString::number(box.trackID()))
     {
     }
     MockTrackBox m_box;
-    AtomicString m_id;
+    AtomString m_id;
 };
 
 class MockTextTrackPrivate : public InbandTextTrackPrivate {
 public:
     static Ref<MockTextTrackPrivate> create(const MockTrackBox& box) { return adoptRef(*new MockTextTrackPrivate(box)); }
     virtual ~MockTextTrackPrivate() = default;
 
-    virtual AtomicString id() const { return m_id; }
+    virtual AtomString id() const { return m_id; }
 
 protected:
     MockTextTrackPrivate(const MockTrackBox& box)
         : InbandTextTrackPrivate(InbandTextTrackPrivate::Generic)
         , m_box(box)
-        , m_id(AtomicString::number(box.trackID()))
+        , m_id(AtomString::number(box.trackID()))
     {
     }
     MockTrackBox m_box;
-    AtomicString m_id;
+    AtomString m_id;
 };
 
 
 class MockVideoTrackPrivate : public VideoTrackPrivate {
 public:
     static Ref<MockVideoTrackPrivate> create(const MockTrackBox& box) { return adoptRef(*new MockVideoTrackPrivate(box)); }
     virtual ~MockVideoTrackPrivate() = default;
 
-    virtual AtomicString id() const { return m_id; }
+    virtual AtomString id() const { return m_id; }
 
 protected:
     MockVideoTrackPrivate(const MockTrackBox& box)
         : m_box(box)
-        , m_id(AtomicString::number(box.trackID()))
+        , m_id(AtomString::number(box.trackID()))
     {
     }
     MockTrackBox m_box;
-    AtomicString m_id;
+    AtomString m_id;
 };
 
 }
 
 #endif
