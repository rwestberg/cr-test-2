diff a/modules/javafx.web/src/main/native/Source/WebCore/bridge/c/c_class.cpp b/modules/javafx.web/src/main/native/Source/WebCore/bridge/c/c_class.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/bridge/c/c_class.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/bridge/c/c_class.cpp
@@ -31,10 +31,11 @@
 
 #include "c_instance.h"
 #include "c_runtime.h"
 #include "npruntime_impl.h"
 #include <JavaScriptCore/Identifier.h>
+#include <JavaScriptCore/JSCJSValueInlines.h>
 #include <JavaScriptCore/JSGlobalObject.h>
 #include <JavaScriptCore/JSObject.h>
 #include <wtf/text/StringHash.h>
 
 namespace JSC { namespace Bindings {
@@ -78,11 +79,11 @@
 
     NPIdentifier ident = _NPN_GetStringIdentifier(name.ascii().data());
     const CInstance* inst = static_cast<const CInstance*>(instance);
     NPObject* obj = inst->getObject();
     if (m_isa->hasMethod && m_isa->hasMethod(obj, ident)) {
-        auto method = std::make_unique<CMethod>(ident);
+        auto method = makeUnique<CMethod>(ident);
         CMethod* ret = method.get();
         m_methods.set(name.impl(), WTFMove(method));
         return ret;
     }
 
@@ -100,11 +101,11 @@
 
     NPIdentifier ident = _NPN_GetStringIdentifier(name.ascii().data());
     const CInstance* inst = static_cast<const CInstance*>(instance);
     NPObject* obj = inst->getObject();
     if (m_isa->hasProperty && m_isa->hasProperty(obj, ident)) {
-        auto field = std::make_unique<CField>(ident);
+        auto field = makeUnique<CField>(ident);
         CField* ret = field.get();
         m_fields.set(name.impl(), WTFMove(field));
         return ret;
     }
 
