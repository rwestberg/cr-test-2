diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGJITCode.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGJITCode.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGJITCode.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGJITCode.h
@@ -119,11 +119,11 @@
 
     RegisterSet liveRegistersToPreserveAtExceptionHandlingCallSite(CodeBlock*, CallSiteIndex) override;
 #if ENABLE(FTL_JIT)
     CodeBlock* osrEntryBlock() { return m_osrEntryBlock.get(); }
     void setOSREntryBlock(VM&, const JSCell* owner, CodeBlock* osrEntryBlock);
-    void clearOSREntryBlock() { m_osrEntryBlock.clear(); }
+    void clearOSREntryBlockAndResetThresholds(CodeBlock* dfgCodeBlock);
 #endif
 
     static ptrdiff_t commonDataOffset() { return OBJECT_OFFSETOF(JITCode, common); }
 
     Optional<CodeOrigin> findPC(CodeBlock*, void* pc) override;
@@ -165,13 +165,10 @@
     // Map each bytecode of CheckTierUpAndOSREnter to its trigger forcing OSR Entry.
     // This can never be modified after it has been initialized since the addresses of the triggers
     // are used by the JIT.
     HashMap<unsigned, TriggerReason> tierUpEntryTriggers;
 
-    // Set of bytecode that were the target of a TierUp operation.
-    HashSet<unsigned, WTF::IntHash<unsigned>, WTF::UnsignedWithZeroKeyHashTraits<unsigned>> tierUpEntrySeen;
-
     WriteBarrier<CodeBlock> m_osrEntryBlock;
     unsigned osrEntryRetry;
     bool abandonOSREntry;
 #endif // ENABLE(FTL_JIT)
 };
