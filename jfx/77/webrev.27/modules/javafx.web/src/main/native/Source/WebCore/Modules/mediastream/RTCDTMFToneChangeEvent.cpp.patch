diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCDTMFToneChangeEvent.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCDTMFToneChangeEvent.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCDTMFToneChangeEvent.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCDTMFToneChangeEvent.cpp
@@ -24,33 +24,33 @@
  */
 
 #include "config.h"
 #include "RTCDTMFToneChangeEvent.h"
 
-#if ENABLE(WEB_RTC_DTMF)
+#if ENABLE(WEB_RTC)
 
 #include "EventNames.h"
 
 namespace WebCore {
 
 Ref<RTCDTMFToneChangeEvent> RTCDTMFToneChangeEvent::create(const String& tone)
 {
     return adoptRef(*new RTCDTMFToneChangeEvent(tone));
 }
 
-Ref<RTCDTMFToneChangeEvent> RTCDTMFToneChangeEvent::create(const AtomicString& type, const Init& initializer, IsTrusted isTrusted)
+Ref<RTCDTMFToneChangeEvent> RTCDTMFToneChangeEvent::create(const AtomString& type, const Init& initializer, IsTrusted isTrusted)
 {
     return adoptRef(*new RTCDTMFToneChangeEvent(type, initializer, isTrusted));
 }
 
 RTCDTMFToneChangeEvent::RTCDTMFToneChangeEvent(const String& tone)
     : Event(eventNames().tonechangeEvent, CanBubble::No, IsCancelable::No)
     , m_tone(tone)
 {
 }
 
-RTCDTMFToneChangeEvent::RTCDTMFToneChangeEvent(const AtomicString& type, const Init& initializer, IsTrusted isTrusted)
+RTCDTMFToneChangeEvent::RTCDTMFToneChangeEvent(const AtomString& type, const Init& initializer, IsTrusted isTrusted)
     : Event(type, initializer, isTrusted)
     , m_tone(initializer.tone)
 {
 }
 
