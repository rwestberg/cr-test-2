diff a/modules/javafx.web/src/main/native/Source/WebCore/css/parser/CSSParserContext.cpp b/modules/javafx.web/src/main/native/Source/WebCore/css/parser/CSSParserContext.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/css/parser/CSSParserContext.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/css/parser/CSSParserContext.cpp
@@ -25,10 +25,11 @@
 
 #include "config.h"
 #include "CSSParserContext.h"
 
 #include "Document.h"
+#include "DocumentLoader.h"
 #include "Page.h"
 #include "RuntimeEnabledFeatures.h"
 #include "Settings.h"
 #include <wtf/NeverDestroyed.h>
 
@@ -42,47 +43,41 @@
 
 CSSParserContext::CSSParserContext(CSSParserMode mode, const URL& baseURL)
     : baseURL(baseURL)
     , mode(mode)
 {
-#if PLATFORM(IOS_FAMILY)
-    // FIXME: Force the site specific quirk below to work on iOS. Investigating other site specific quirks
-    // to see if we can enable the preference all together is to be handled by:
-    // <rdar://problem/8493309> Investigate Enabling Site Specific Quirks in MobileSafari and UIWebView
-    needsSiteSpecificQuirks = true;
-#endif
 }
 
 CSSParserContext::CSSParserContext(const Document& document, const URL& sheetBaseURL, const String& charset)
     : baseURL(sheetBaseURL.isNull() ? document.baseURL() : sheetBaseURL)
     , charset(charset)
     , mode(document.inQuirksMode() ? HTMLQuirksMode : HTMLStandardMode)
     , isHTMLDocument(document.isHTMLDocument())
     , hasDocumentSecurityOrigin(sheetBaseURL.isNull() || document.securityOrigin().canRequest(baseURL))
 {
-
-    needsSiteSpecificQuirks = document.settings().needsSiteSpecificQuirks();
     enforcesCSSMIMETypeInNoQuirksMode = document.settings().enforceCSSMIMETypeInNoQuirksMode();
     useLegacyBackgroundSizeShorthandBehavior = document.settings().useLegacyBackgroundSizeShorthandBehavior();
 #if ENABLE(TEXT_AUTOSIZING)
     textAutosizingEnabled = document.settings().textAutosizingEnabled();
+#endif
+#if ENABLE(OVERFLOW_SCROLLING_TOUCH)
+    legacyOverflowScrollingTouchEnabled = document.settings().legacyOverflowScrollingTouchEnabled();
+    // The legacy -webkit-overflow-scrolling: touch behavior may have been disabled through the website policy,
+    // in that case we want to disable the legacy behavior regardless of what the setting says.
+    if (auto* loader = document.loader()) {
+        if (loader->legacyOverflowScrollingTouchPolicy() == LegacyOverflowScrollingTouchPolicy::Disable)
+            legacyOverflowScrollingTouchEnabled = false;
+    }
 #endif
     springTimingFunctionEnabled = document.settings().springTimingFunctionEnabled();
     constantPropertiesEnabled = document.settings().constantPropertiesEnabled();
     colorFilterEnabled = document.settings().colorFilterEnabled();
 #if ENABLE(ATTACHMENT_ELEMENT)
     attachmentEnabled = RuntimeEnabledFeatures::sharedFeatures().attachmentElementEnabled();
 #endif
     deferredCSSParserEnabled = document.settings().deferredCSSParserEnabled();
     useSystemAppearance = document.page() ? document.page()->useSystemAppearance() : false;
-
-#if PLATFORM(IOS_FAMILY)
-    // FIXME: Force the site specific quirk below to work on iOS. Investigating other site specific quirks
-    // to see if we can enable the preference all together is to be handled by:
-    // <rdar://problem/8493309> Investigate Enabling Site Specific Quirks in MobileSafari and UIWebView
-    needsSiteSpecificQuirks = true;
-#endif
 }
 
 bool operator==(const CSSParserContext& a, const CSSParserContext& b)
 {
     return a.baseURL == b.baseURL
@@ -90,11 +85,13 @@
         && a.mode == b.mode
         && a.isHTMLDocument == b.isHTMLDocument
 #if ENABLE(TEXT_AUTOSIZING)
         && a.textAutosizingEnabled == b.textAutosizingEnabled
 #endif
-        && a.needsSiteSpecificQuirks == b.needsSiteSpecificQuirks
+#if ENABLE(OVERFLOW_SCROLLING_TOUCH)
+        && a.legacyOverflowScrollingTouchEnabled == b.legacyOverflowScrollingTouchEnabled
+#endif
         && a.enforcesCSSMIMETypeInNoQuirksMode == b.enforcesCSSMIMETypeInNoQuirksMode
         && a.useLegacyBackgroundSizeShorthandBehavior == b.useLegacyBackgroundSizeShorthandBehavior
         && a.springTimingFunctionEnabled == b.springTimingFunctionEnabled
         && a.constantPropertiesEnabled == b.constantPropertiesEnabled
         && a.colorFilterEnabled == b.colorFilterEnabled
