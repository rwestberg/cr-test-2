diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/ExecutionCounter.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/ExecutionCounter.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/ExecutionCounter.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/ExecutionCounter.h
@@ -51,10 +51,12 @@
     return u.i;
 }
 
 template<CountingVariant countingVariant>
 class ExecutionCounter {
+    WTF_MAKE_FAST_ALLOCATED;
+    WTF_MAKE_NONMOVABLE(ExecutionCounter);
 public:
     ExecutionCounter();
     void forceSlowPathConcurrently(); // If you use this, checkIfThresholdCrossedAndSet() may still return false.
     bool checkIfThresholdCrossedAndSet(CodeBlock*);
     bool hasCrossedThreshold() const { return m_counter >= 0; }
@@ -85,11 +87,11 @@
 
     template<typename T>
     static T clippedThreshold(JSGlobalObject* globalObject, T threshold)
     {
         int32_t maxThreshold;
-        if (Options::randomizeExecutionCountsBetweenCheckpoints())
+        if (Options::randomizeExecutionCountsBetweenCheckpoints() && globalObject)
             maxThreshold = globalObject->weakRandomInteger() % maximumExecutionCountsBetweenCheckpoints();
         else
             maxThreshold = maximumExecutionCountsBetweenCheckpoints();
         if (threshold > maxThreshold)
             threshold = maxThreshold;
