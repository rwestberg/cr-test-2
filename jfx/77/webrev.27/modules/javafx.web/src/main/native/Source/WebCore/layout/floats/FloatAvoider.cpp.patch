diff a/modules/javafx.web/src/main/native/Source/WebCore/layout/floats/FloatAvoider.cpp b/modules/javafx.web/src/main/native/Source/WebCore/layout/floats/FloatAvoider.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/layout/floats/FloatAvoider.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/layout/floats/FloatAvoider.cpp
@@ -41,13 +41,13 @@
 FloatAvoider::FloatAvoider(const Box& layoutBox, const FloatingState& floatingState, const LayoutState& layoutState)
     : m_layoutBox(makeWeakPtr(layoutBox))
     , m_floatingState(floatingState)
     , m_absoluteDisplayBox(FormattingContext::mapBoxToAncestor(layoutState, layoutBox, downcast<Container>(floatingState.root())))
     , m_containingBlockAbsoluteDisplayBox(layoutBox.containingBlock() == &floatingState.root() ? Display::Box(layoutState.displayBoxForLayoutBox(*layoutBox.containingBlock())) : FormattingContext::mapBoxToAncestor(layoutState, *layoutBox.containingBlock(), downcast<Container>(floatingState.root())))
-    , m_initialVerticalPosition({ m_absoluteDisplayBox.top() })
 {
     ASSERT(m_layoutBox->establishesBlockFormattingContext());
+    m_absoluteDisplayBox.setLeft({ initialHorizontalPosition() });
 }
 
 void FloatAvoider::setHorizontalConstraints(HorizontalConstraints horizontalConstraints)
 {
     if ((isLeftAligned() && !horizontalConstraints.left) || (!isLeftAligned() && !horizontalConstraints.right)) {
@@ -85,15 +85,10 @@
 PositionInContextRoot FloatAvoider::verticalPositionCandidate(PositionInContextRoot verticalConstraint)
 {
     return verticalConstraint;
 }
 
-void FloatAvoider::resetPosition()
-{
-    m_absoluteDisplayBox.setTopLeft({ initialHorizontalPosition(), initialVerticalPosition() });
-}
-
 PositionInContextRoot FloatAvoider::initialHorizontalPosition() const
 {
     // Align the box with the containing block's content box.
     auto containingBlockContentBoxLeft = m_containingBlockAbsoluteDisplayBox.left() + m_containingBlockAbsoluteDisplayBox.contentBoxLeft();
     auto containingBlockContentBoxRight = containingBlockContentBoxLeft + m_containingBlockAbsoluteDisplayBox.contentBoxWidth();
@@ -116,11 +111,11 @@
     auto right = displayBox().right() + marginEnd();
 
     return containingBlockContentBoxRight < right;
 }
 
-Display::Box::Rect FloatAvoider::rectInContainingBlock() const
+Display::Rect FloatAvoider::rectInContainingBlock() const
 {
     // From formatting root coordinate system back to containing block's.
     if (layoutBox().containingBlock() == &floatingState().root())
         return m_absoluteDisplayBox.rect();
 
