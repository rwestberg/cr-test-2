diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/SlotVisitorInlines.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/SlotVisitorInlines.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/SlotVisitorInlines.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/SlotVisitorInlines.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2012-2017 Apple Inc. All rights reserved.
+ * Copyright (C) 2012-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -46,18 +46,18 @@
         return;
 
     Dependency dependency;
     if (UNLIKELY(cell->isLargeAllocation())) {
         if (LIKELY(cell->largeAllocation().isMarked())) {
-            if (LIKELY(!m_heapSnapshotBuilder))
+            if (LIKELY(!m_heapAnalyzer))
                 return;
         }
     } else {
         MarkedBlock& block = cell->markedBlock();
         dependency = block.aboutToMark(m_markingVersion);
         if (LIKELY(block.isMarked(cell, dependency))) {
-            if (LIKELY(!m_heapSnapshotBuilder))
+            if (LIKELY(!m_heapAnalyzer))
                 return;
         }
     }
 
     appendSlow(cell, dependency);
@@ -174,16 +174,16 @@
     return &m_heap;
 }
 
 inline VM& SlotVisitor::vm()
 {
-    return *m_heap.vm();
+    return m_heap.vm();
 }
 
 inline const VM& SlotVisitor::vm() const
 {
-    return *m_heap.vm();
+    return m_heap.vm();
 }
 
 template<typename Func>
 IterationStatus SlotVisitor::forEachMarkStack(const Func& func)
 {
