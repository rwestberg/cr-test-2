diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGOSRExit.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGOSRExit.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGOSRExit.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGOSRExit.h
@@ -57,10 +57,11 @@
 
 // This enum describes the types of additional recovery that
 // may need be performed should a speculation check fail.
 enum SpeculationRecoveryType : uint8_t {
     SpeculativeAdd,
+    SpeculativeAddSelf,
     SpeculativeAddImmediate,
     BooleanSpeculationCheck
 };
 
 // === SpeculationRecovery ===
@@ -72,11 +73,11 @@
     SpeculationRecovery(SpeculationRecoveryType type, GPRReg dest, GPRReg src)
         : m_src(src)
         , m_dest(dest)
         , m_type(type)
     {
-        ASSERT(m_type == SpeculativeAdd || m_type == BooleanSpeculationCheck);
+        ASSERT(m_type == SpeculativeAdd || m_type == SpeculativeAddSelf || m_type == BooleanSpeculationCheck);
     }
 
     SpeculationRecovery(SpeculationRecoveryType type, GPRReg dest, int32_t immediate)
         : m_immediate(immediate)
         , m_dest(dest)
@@ -168,10 +169,11 @@
     static void emitRestoreArguments(CCallHelpers&, const Operands<ValueRecovery>&);
     static void JIT_OPERATION debugOperationPrintSpeculationFailure(ExecState*, void*, void*) WTF_INTERNAL;
 };
 
 struct SpeculationFailureDebugInfo {
+    WTF_MAKE_STRUCT_FAST_ALLOCATED;
     CodeBlock* codeBlock;
     ExitKind kind;
     unsigned bytecodeOffset;
 };
 
