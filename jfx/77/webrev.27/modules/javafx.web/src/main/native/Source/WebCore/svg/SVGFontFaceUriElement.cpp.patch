diff a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGFontFaceUriElement.cpp b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGFontFaceUriElement.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGFontFaceUriElement.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGFontFaceUriElement.cpp
@@ -57,16 +57,16 @@
 }
 
 Ref<CSSFontFaceSrcValue> SVGFontFaceUriElement::srcValue() const
 {
     auto src = CSSFontFaceSrcValue::create(getAttribute(SVGNames::hrefAttr, XLinkNames::hrefAttr), LoadedFromOpaqueSource::No);
-    AtomicString value(attributeWithoutSynchronization(formatAttr));
+    AtomString value(attributeWithoutSynchronization(formatAttr));
     src.get().setFormat(value.isEmpty() ? "svg" : value); // Default format
     return src;
 }
 
-void SVGFontFaceUriElement::parseAttribute(const QualifiedName& name, const AtomicString& value)
+void SVGFontFaceUriElement::parseAttribute(const QualifiedName& name, const AtomString& value)
 {
     if (name == SVGNames::hrefAttr || name == XLinkNames::hrefAttr)
         loadFont();
     else
         SVGElement::parseAttribute(name, value);
@@ -99,11 +99,11 @@
 void SVGFontFaceUriElement::loadFont()
 {
     if (m_cachedFont)
         m_cachedFont->removeClient(*this);
 
-    const AtomicString& href = getAttribute(SVGNames::hrefAttr, XLinkNames::hrefAttr);
+    const AtomString& href = getAttribute(SVGNames::hrefAttr, XLinkNames::hrefAttr);
     if (!href.isNull()) {
         ResourceLoaderOptions options = CachedResourceLoader::defaultCachedResourceOptions();
         options.contentSecurityPolicyImposition = isInUserAgentShadowTree() ? ContentSecurityPolicyImposition::SkipPolicyCheck : ContentSecurityPolicyImposition::DoPolicyCheck;
 
         CachedResourceLoader& cachedResourceLoader = document().cachedResourceLoader();
