diff a/modules/javafx.web/src/main/native/Source/WebCore/workers/service/ServiceWorkerContextData.h b/modules/javafx.web/src/main/native/Source/WebCore/workers/service/ServiceWorkerContextData.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/workers/service/ServiceWorkerContextData.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/workers/service/ServiceWorkerContextData.h
@@ -38,11 +38,10 @@
 #if ENABLE(SERVICE_WORKER)
 
 namespace WebCore {
 
 struct ServiceWorkerContextData {
-
     struct ImportedScript {
         String script;
         URL responseURL;
         String mimeType;
 
@@ -130,23 +129,24 @@
 
     WorkerType workerType;
     if (!decoder.decodeEnum(workerType))
         return WTF::nullopt;
 
-    PAL::SessionID sessionID;
-    if (!decoder.decode(sessionID))
+    Optional<PAL::SessionID> sessionID;
+    decoder >> sessionID;
+    if (!sessionID)
         return WTF::nullopt;
 
     bool loadedFromDisk;
     if (!decoder.decode(loadedFromDisk))
         return WTF::nullopt;
 
     HashMap<URL, ImportedScript> scriptResourceMap;
     if (!decoder.decode(scriptResourceMap))
         return WTF::nullopt;
 
-    return {{ WTFMove(*jobDataIdentifier), WTFMove(*registration), WTFMove(*serviceWorkerIdentifier), WTFMove(script), WTFMove(contentSecurityPolicy), WTFMove(referrerPolicy), WTFMove(scriptURL), workerType, sessionID, loadedFromDisk, WTFMove(scriptResourceMap) }};
+    return {{ WTFMove(*jobDataIdentifier), WTFMove(*registration), WTFMove(*serviceWorkerIdentifier), WTFMove(script), WTFMove(contentSecurityPolicy), WTFMove(referrerPolicy), WTFMove(scriptURL), workerType, *sessionID, loadedFromDisk, WTFMove(scriptResourceMap) }};
 }
 
 } // namespace WebCore
 
 #endif // ENABLE(SERVICE_WORKER)
