diff a/modules/javafx.web/src/main/native/Source/WebCore/html/track/WebVTTTokenizer.cpp b/modules/javafx.web/src/main/native/Source/WebCore/html/track/WebVTTTokenizer.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/track/WebVTTTokenizer.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/track/WebVTTTokenizer.cpp
@@ -200,19 +200,19 @@
         buffer.clear();
         WEBVTT_ADVANCE_TO(StartTagClassState);
     } else if (character == '>' || character == kEndOfFileMarker) {
         addNewClass(classes, buffer);
         buffer.clear();
-        return advanceAndEmitToken(m_input, token, WebVTTToken::StartTag(result.toString(), classes.toAtomicString()));
+        return advanceAndEmitToken(m_input, token, WebVTTToken::StartTag(result.toString(), classes.toAtomString()));
     } else {
         buffer.append(character);
         WEBVTT_ADVANCE_TO(StartTagClassState);
     }
 
 StartTagAnnotationState:
     if (character == '>' || character == kEndOfFileMarker)
-        return advanceAndEmitToken(m_input, token, WebVTTToken::StartTag(result.toString(), classes.toAtomicString(), buffer.toAtomicString()));
+        return advanceAndEmitToken(m_input, token, WebVTTToken::StartTag(result.toString(), classes.toAtomString(), buffer.toAtomString()));
     buffer.append(character);
     WEBVTT_ADVANCE_TO(StartTagAnnotationState);
 
 EndTagState:
     if (character == '>' || character == kEndOfFileMarker)
