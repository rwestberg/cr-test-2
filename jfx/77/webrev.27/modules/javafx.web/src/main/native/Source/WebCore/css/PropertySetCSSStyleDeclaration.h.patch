diff a/modules/javafx.web/src/main/native/Source/WebCore/css/PropertySetCSSStyleDeclaration.h b/modules/javafx.web/src/main/native/Source/WebCore/css/PropertySetCSSStyleDeclaration.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/css/PropertySetCSSStyleDeclaration.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/css/PropertySetCSSStyleDeclaration.h
@@ -41,10 +41,11 @@
 class MutableStyleProperties;
 class StyleSheetContents;
 class StyledElement;
 
 class PropertySetCSSStyleDeclaration : public CSSStyleDeclaration {
+    WTF_MAKE_ISO_ALLOCATED(PropertySetCSSStyleDeclaration);
 public:
     explicit PropertySetCSSStyleDeclaration(MutableStyleProperties& propertySet)
         : m_propertySet(&propertySet)
     { }
 
@@ -87,10 +88,11 @@
     virtual bool willMutate() WARN_UNUSED_RETURN { return true; }
     virtual void didMutate(MutationType) { }
 };
 
 class StyleRuleCSSStyleDeclaration final : public PropertySetCSSStyleDeclaration {
+    WTF_MAKE_ISO_ALLOCATED(StyleRuleCSSStyleDeclaration);
 public:
     static Ref<StyleRuleCSSStyleDeclaration> create(MutableStyleProperties& propertySet, CSSRule& parentRule)
     {
         return adoptRef(*new StyleRuleCSSStyleDeclaration(propertySet, parentRule));
     }
@@ -117,10 +119,11 @@
     unsigned m_refCount;
     CSSRule* m_parentRule;
 };
 
 class InlineCSSStyleDeclaration final : public PropertySetCSSStyleDeclaration {
+    WTF_MAKE_ISO_ALLOCATED(InlineCSSStyleDeclaration);
 public:
     InlineCSSStyleDeclaration(MutableStyleProperties& propertySet, StyledElement& parentElement)
         : PropertySetCSSStyleDeclaration(propertySet)
         , m_parentElement(&parentElement)
     {
@@ -129,10 +132,11 @@
 private:
     CSSStyleSheet* parentStyleSheet() const final;
     StyledElement* parentElement() const final { return m_parentElement; }
     void clearParentElement() final { m_parentElement = nullptr; }
 
+    bool willMutate() final WARN_UNUSED_RETURN;
     void didMutate(MutationType) final;
     CSSParserContext cssParserContext() const final;
 
     StyledElement* m_parentElement;
 };
