diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/streams/ReadableByteStreamInternals.js b/modules/javafx.web/src/main/native/Source/WebCore/Modules/streams/ReadableByteStreamInternals.js
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/streams/ReadableByteStreamInternals.js
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/streams/ReadableByteStreamInternals.js
@@ -147,11 +147,11 @@
     }
 
     var pendingPullIntos = @getByIdDirectPrivate(controller, "pendingPullIntos");
     if (pendingPullIntos.length > 0) {
         if (pendingPullIntos[0].bytesFilled > 0) {
-            const e = new @TypeError("Close requested while there remain pending bytes");
+            const e = @makeTypeError("Close requested while there remain pending bytes");
             @readableByteStreamControllerError(controller, e);
             throw e;
         }
     }
 
@@ -646,11 +646,11 @@
             const filledView = @readableByteStreamControllerConvertDescriptor(pullIntoDescriptor);
             @readableByteStreamControllerHandleQueueDrain(controller);
             return @Promise.@resolve({ value: filledView, done: false });
         }
         if (@getByIdDirectPrivate(controller, "closeRequested")) {
-            const e = new @TypeError("Closing stream has been requested");
+            const e = @makeTypeError("Closing stream has been requested");
             @readableByteStreamControllerError(controller, e);
             return @Promise.@reject(e);
         }
     }
 
