diff a/modules/javafx.graphics/src/main/native-prism-es2/monocle/MonocleGLFactory.c b/modules/javafx.graphics/src/main/native-prism-es2/monocle/MonocleGLFactory.c
--- a/modules/javafx.graphics/src/main/native-prism-es2/monocle/MonocleGLFactory.c
+++ b/modules/javafx.graphics/src/main/native-prism-es2/monocle/MonocleGLFactory.c
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2014, 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -41,10 +41,26 @@
 #define GET_DLSYM(handle,symbol) get_dlsym(handle,symbol, 0);
 
 #define asPtr(x) ((void *) (unsigned long) (x))
 #define asJLong(x) ((jlong) (unsigned long) (x))
 
+//Builtin library entrypoint
+JNIEXPORT jint JNICALL
+JNI_OnLoad_prism_es2_monocle(JavaVM *vm, void * reserved) {
+fprintf(stderr, "In JNI_OnLoad_prism_es2\n");
+#ifdef JNI_VERSION_1_8
+    //min. returned JNI_VERSION required by JDK8 for builtin libraries
+    JNIEnv *env;
+    if ((*vm)->GetEnv(vm, (void **)&env, JNI_VERSION_1_8) != JNI_OK) {
+        return JNI_VERSION_1_4;
+    }
+    return JNI_VERSION_1_8;
+#else
+    return JNI_VERSION_1_4;
+#endif
+}
+
 JNIEXPORT jlong JNICALL Java_com_sun_prism_es2_MonocleGLFactory_nPopulateNativeCtxInfo
 (JNIEnv *env, jclass clazz, jlong libraryHandle) {
     ContextInfo *ctxInfo = NULL;
 
     /* Note: We are only storing the string information of a driver.
