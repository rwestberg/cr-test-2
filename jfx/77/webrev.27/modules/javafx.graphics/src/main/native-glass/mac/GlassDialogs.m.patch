diff a/modules/javafx.graphics/src/main/native-glass/mac/GlassDialogs.m b/modules/javafx.graphics/src/main/native-glass/mac/GlassDialogs.m
--- a/modules/javafx.graphics/src/main/native-glass/mac/GlassDialogs.m
+++ b/modules/javafx.graphics/src/main/native-glass/mac/GlassDialogs.m
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -67,10 +67,28 @@
         }
     }
     return false;
 }
 
+/*
+ * Function to determine whether or not to use raw NSPanel classes
+ * (either NSSavePanel or NSOpenPanel).
+ *
+ * Return: YES if we need to use the raw NSPanel classes; NO if we
+ * can use the Glass subclasses
+ */
+static BOOL useNSPanel()
+{
+    // As of macOS 10.15 all file dialogs are out of process, so we
+    // effectively can't subclass them.
+    if (@available(macOS 10.15, *)) {
+        return YES;
+    } else {
+        return [GlassApplication isSandboxed];
+    }
+}
+
 @interface GlassSavePanel : NSSavePanel
 @end
 
 @implementation GlassSavePanel
 
@@ -483,11 +501,11 @@
     jobject result = NULL;
 
     GLASS_ASSERT_MAIN_JAVA_THREAD(env);
     GLASS_POOL_ENTER;
     {
-        NSOpenPanel *panel = [GlassApplication isSandboxed] ? [NSOpenPanel openPanel] : [GlassOpenPanel openPanel];
+        NSOpenPanel *panel = useNSPanel() ? [NSOpenPanel openPanel] : [GlassOpenPanel openPanel];
         [panel setAllowsMultipleSelection:(jMultipleMode==JNI_TRUE)];
         [panel setTitle:[GlassHelper nsStringWithJavaString:jTitle withEnv:env]];
         NSString *folder = [GlassHelper nsStringWithJavaString:jFolder withEnv:env];
         if ([folder length] > 0)
         {
@@ -559,11 +577,11 @@
     jobject result = NULL;
 
     GLASS_ASSERT_MAIN_JAVA_THREAD(env);
     GLASS_POOL_ENTER;
     {
-        NSSavePanel *panel = [GlassApplication isSandboxed] ? [NSSavePanel savePanel] : [GlassSavePanel savePanel];
+        NSSavePanel *panel = useNSPanel() ? [NSSavePanel savePanel] : [GlassSavePanel savePanel];
         [panel setTitle:[GlassHelper nsStringWithJavaString:jTitle withEnv:env]];
         NSString *folder = [GlassHelper nsStringWithJavaString:jFolder withEnv:env];
         if ([folder length] > 0)
         {
             [panel setDirectoryURL:[NSURL fileURLWithPath:folder isDirectory:YES]];
@@ -631,11 +649,11 @@
     jobject chosen = NULL;
 
     GLASS_ASSERT_MAIN_JAVA_THREAD(env);
     GLASS_POOL_ENTER;
     {
-        NSOpenPanel *panel = [GlassApplication isSandboxed] ? [NSOpenPanel openPanel] : [GlassOpenPanel openPanel];
+        NSOpenPanel *panel = useNSPanel() ? [NSOpenPanel openPanel] : [GlassOpenPanel openPanel];
         [panel setTitle:[GlassHelper nsStringWithJavaString:jTitle withEnv:env]];
         NSString *folder = [GlassHelper nsStringWithJavaString:jFolder withEnv:env];
         if ([folder length] > 0)
         {
             [panel setDirectoryURL:[NSURL fileURLWithPath:folder isDirectory:YES]];
