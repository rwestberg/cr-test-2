diff a/modules/javafx.graphics/src/main/java/javafx/scene/CssStyleHelper.java b/modules/javafx.graphics/src/main/java/javafx/scene/CssStyleHelper.java
--- a/modules/javafx.graphics/src/main/java/javafx/scene/CssStyleHelper.java
+++ b/modules/javafx.graphics/src/main/java/javafx/scene/CssStyleHelper.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -129,11 +129,11 @@
             if (node.styleHelper.cacheContainer != null && node.styleHelper.isUserSetFont(node)) {
                 node.styleHelper.cacheContainer.fontSizeCache.clear();
             }
             node.styleHelper.cacheContainer.forceSlowpath = true;
             node.styleHelper.triggerStates.addAll(triggerStates[0]);
-            node.styleHelper.firstStyleableAncestor = findFirstStyleableAncestor(node);
+
             updateParentTriggerStates(node, depth, triggerStates);
             return node.styleHelper;
 
         }
 
@@ -297,10 +297,13 @@
         // Note: check instance equality!
         if (currentMap != styleMap) {
             return false;
         }
 
+        //update ancestor since this node may have changed positions in the scene graph (JDK-8237469)
+        node.styleHelper.firstStyleableAncestor = findFirstStyleableAncestor(node);
+
         // If the style maps are the same instance, we can re-use the current styleHelper if the cacheContainer is null.
         // Under this condition, there are no styles for this node _and_ no styles inherit.
         if (node.styleHelper.cacheContainer == null) {
             return true;
         }
