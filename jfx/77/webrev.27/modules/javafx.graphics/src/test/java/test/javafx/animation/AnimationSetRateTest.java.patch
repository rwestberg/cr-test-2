diff a/modules/javafx.graphics/src/test/java/test/javafx/animation/AnimationSetRateTest.java b/modules/javafx.graphics/src/test/java/test/javafx/animation/AnimationSetRateTest.java
--- a/modules/javafx.graphics/src/test/java/test/javafx/animation/AnimationSetRateTest.java
+++ b/modules/javafx.graphics/src/test/java/test/javafx/animation/AnimationSetRateTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -30,10 +30,12 @@
 import javafx.util.Duration;
 import test.com.sun.scenario.animation.shared.ClipEnvelopeMock;
 import org.junit.Before;
 import org.junit.Test;
 
+import com.sun.scenario.animation.shared.SingleLoopClipEnvelopeShim;
+
 import static org.junit.Assert.*;
 
 public class AnimationSetRateTest {
 
     private static final double EPSILON = 1e-12;
@@ -369,6 +371,24 @@
         animation.setRate(0.5);
         assertAnimation(0.5, 0.0, Status.PAUSED, false);
         animation.play();
         assertAnimation(0.5, -0.5, Status.RUNNING, true);
     }
+
+    @Test
+    public void testFlipRateAndPlayForPausedNonEmbeddedAnimation() {
+        var clip = new SingleLoopClipEnvelopeShim(animation);
+        animation.setClipEnvelope(clip);
+        animation.setRate(0.2);
+        animation.play();
+        clip.timePulse(10);
+        animation.pause();
+        long timeBefore = clip.getTicks();
+        animation.setRate(-0.2);
+        animation.play();
+        clip.timePulse(5);
+        animation.pause();
+        long timeAfter = clip.getTicks();
+        assertEquals("A pulse to 10 at rate 0.2 with deltaTicks = 0 should reach 10 * 0.2 = 2", 2, timeBefore);
+        assertEquals("A pulse to 5 at rate -0.2 with deltaTicks = 4 should reach 4 + 5 * (-0.2) = 3", 3, timeAfter);
+    }
 }
