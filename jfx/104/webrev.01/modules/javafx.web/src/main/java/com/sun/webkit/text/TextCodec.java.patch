diff a/modules/javafx.web/src/main/java/com/sun/webkit/text/TextCodec.java b/modules/javafx.web/src/main/java/com/sun/webkit/text/TextCodec.java
--- a/modules/javafx.web/src/main/java/com/sun/webkit/text/TextCodec.java
+++ b/modules/javafx.web/src/main/java/com/sun/webkit/text/TextCodec.java
@@ -27,23 +27,19 @@
 
 import java.nio.ByteBuffer;
 import java.nio.CharBuffer;
 import java.nio.charset.Charset;
 import java.util.ArrayList;
-import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
 final class TextCodec {
     private final Charset charset;
 
     // The list of aliases where Java mappings are not compatible with WebKit.
-    private static final Map<String, String> reMap =
-            new HashMap<String, String>();
-    static {
-        reMap.put("ISO-10646-UCS-2", "UTF-16");
-    }
+    private static final Map<String, String> RE_MAP = Map.of(
+        "ISO-10646-UCS-2", "UTF-16");
 
     /**
      * This could throw a runtime exception (see the documentation for the
      * Charset.forName.)  JNI code should handle the exception.
      */
@@ -85,11 +81,11 @@
                 // 8859_1 is blacklisted in TextEncodingRegistry.cpp:isUndesiredAlias()
                 // See also https://bugs.webkit.org/show_bug.cgi?id=43554
                 if (a.equals("8859_1")) continue;
 
                 encodings.add(a);
-                String r = reMap.get(a);
+                String r = RE_MAP.get(a);
                 encodings.add(r == null ? e : r);
             }
         }
         return encodings.toArray(new String[0]);
     }
