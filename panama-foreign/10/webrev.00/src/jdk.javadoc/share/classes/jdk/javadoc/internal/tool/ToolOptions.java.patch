diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ToolOptions.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ToolOptions.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ToolOptions.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ToolOptions.java
@@ -72,15 +72,10 @@
     /**
      * Argument for command-line option {@code -breakiterator}.
      */
     private boolean breakIterator = false;
 
-    /**
-     * Argument for command-line option {@code -locale}.
-     */
-    private String docLocale = "";
-
     /**
      * Argument for command-line option {@code --dump-on-error}.
      * Dump stack traces for debugging etc.
      * Similar to javac {@code -doe}.
      */
@@ -105,12 +100,12 @@
      * Argument for command-line option {@code --module}.
      */
     private List<String> modules = new ArrayList<>();
 
     /**
-     * Argument for command-line option {@code -Xwerror}.
-     * Set by -Xwerror.
+     * Argument for command-line option {@code -Werror}.
+     * Set by -Werror.
      */
     private boolean rejectWarnings = false;
 
     /**
      * Argument for command-line option {@code --show-members}.
@@ -411,13 +406,17 @@
                 }
             },
 
             // ----- doclet options -----
 
-            new ToolOption(DOCLET, STANDARD, true), // handled in setDocletInvoker
+            // This option exists so that it is documented in the command-line help.
+            // It is implemented in {@link Start#preprocess}.
+            new ToolOption(DOCLET, STANDARD, true),
 
-            new ToolOption(DOCLET_PATH, STANDARD, true), // handled in setDocletInvoker
+            // This option exists so that it is documented in the command-line help.
+            // It is implemented in {@link Start#preprocess}.
+            new ToolOption(DOCLET_PATH, STANDARD, true),
 
             // ----- selection options -----
 
             new ToolOption("-subpackages", STANDARD, true) {
                 @Override
@@ -512,46 +511,50 @@
                 public void process() {
                     setVerbose();
                 }
             },
 
+            // superseded by -Werror, retained for a while for compatibility,
+            // although note that it is an undocumented hidden option, and can
+            // be removed without warning
             new ToolOption("-Xwerror", HIDDEN) {
                 @Override
                 public void process() {
                     rejectWarnings = true;
                 }
             },
 
+            new ToolOption("-Werror", STANDARD) {
+                @Override
+                public void process() {
+                    rejectWarnings = true;
+                }
+            },
+
             // ----- other options -----
 
             new ToolOption("-breakiterator", STANDARD) {
                 @Override
                 public void process() {
                     breakIterator = true;
                 }
             },
 
-            new ToolOption(LOCALE, STANDARD, true) {
-                @Override
-                public void process(String arg) {
-                    docLocale = arg;
-                }
-            },
+            // This option exists so that it is documented in the command-line help.
+            // It is implemented in {@link Start#preprocess}.
+            new ToolOption(LOCALE, STANDARD, true),
 
             new ToolOption("-Xclasses", HIDDEN) {
                 @Override
                 public void process() {
                     xclasses = true;
                 }
             },
 
-            new ToolOption(DUMP_ON_ERROR, HIDDEN) {
-                @Override
-                public void process() {
-                    dumpOnError = true;
-                }
-            },
+            // This option exists so that it is documented in the command-line help.
+            // It is implemented in {@link Start#preprocess}.
+            new ToolOption(DUMP_ON_ERROR, HIDDEN),
 
             new ToolOption("--ignore-source-errors", HIDDEN) {
                 @Override
                 public void process() {
                     ignoreSourceErrors = true;
@@ -572,12 +575,13 @@
                 public void process() throws OptionException {
                     throw new OptionException(OK, showHelper::Xusage);
                 }
             },
 
-            // This option exists only for the purpose of documenting itself.
-            // It's actually implemented by the launcher.
+            // This option exists so that it is documented in the command-line help.
+            // It is actually implemented by the launcher, and can only be used when
+            // invoking javadoc from the launcher.
             new ToolOption(J, STANDARD, true) {
                 @Override
                 public void process() {
                     throw new AssertionError("the -J flag should be caught by the launcher.");
                 }
@@ -680,17 +684,10 @@
      */
     boolean breakIterator() {
         return breakIterator;
     }
 
-    /**
-     * Argument for command-line option {@code -locale}.
-     */
-    String locale() {
-        return docLocale;
-    }
-
     /**
      * Argument for command-line option {@code --dump-on-error}.
      * Dump stack traces for debugging etc.
      * Similar to javac {@code -doe}.
      */
@@ -729,12 +726,12 @@
     List<String> modules() {
         return modules;
     }
 
     /**
-     * Argument for command-line option {@code -Xwerror}.
-     * Set by -Xwerror.
+     * Argument for command-line option {@code -Werror}.
+     * Set by -Werror.
      */
     boolean rejectWarnings() {
         return rejectWarnings;
     }
 
