diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/AnnotationTypeWriterImpl.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/AnnotationTypeWriterImpl.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/AnnotationTypeWriterImpl.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/AnnotationTypeWriterImpl.java
@@ -76,13 +76,10 @@
         this.annotationType = annotationType;
         configuration.currentTypeElement = annotationType;
         this.navBar = new Navigation(annotationType, configuration, PageMode.CLASS, path);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public Content getHeader(String header) {
         Content headerContent = new ContentBuilder();
         addTop(headerContent);
         Content linkContent = getModuleLink(utils.elementUtils.getModuleOf(annotationType),
@@ -121,63 +118,45 @@
                 .addMainContent(MarkerComments.START_OF_CLASS_DATA)
                 .addMainContent(div);
         return getBody(getWindowTitle(utils.getSimpleName(annotationType)));
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public Content getAnnotationContentHeader() {
         return getContentHeader();
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void addFooter() {
         Content htmlTree = HtmlTree.FOOTER();
         navBar.setUserFooter(getUserHeaderFooter(false));
         htmlTree.add(navBar.getContent(false));
         addBottom(htmlTree);
         bodyContents.addMainContent(MarkerComments.END_OF_CLASS_DATA)
                     .setFooter(htmlTree);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void printDocument(Content contentTree) throws DocFileIOException {
         String description = getDescription("declaration", annotationType);
         PackageElement pkg = utils.containingPackage(this.annotationType);
         List<DocPath> localStylesheets = getLocalStylesheets(pkg);
         contentTree.add(bodyContents.toContent());
         printHtmlDocument(configuration.metakeywords.getMetaKeywords(annotationType),
                 description, localStylesheets, contentTree);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public Content getAnnotationInfoTreeHeader() {
         return getMemberTreeHeader();
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public Content getAnnotationInfo(Content annotationInfoTree) {
         return HtmlTree.SECTION(HtmlStyle.description, annotationInfoTree);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void addAnnotationTypeSignature(String modifiers, Content annotationInfoTree) {
         Content hr = new HtmlTree(HtmlTag.HR);
         annotationInfoTree.add(hr);
         Content pre = new HtmlTree(HtmlTag.PRE);
@@ -196,35 +175,26 @@
             pre.add(span);
         }
         annotationInfoTree.add(pre);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void addAnnotationTypeDescription(Content annotationInfoTree) {
         if (!options.noComment()) {
             if (!utils.getFullBody(annotationType).isEmpty()) {
                 addInlineComment(annotationType, annotationInfoTree);
             }
         }
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void addAnnotationTypeTagInfo(Content annotationInfoTree) {
         if (!options.noComment()) {
             addTagsInfo(annotationType, annotationInfoTree);
         }
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void addAnnotationTypeDeprecationInfo(Content annotationInfoTree) {
         List<? extends DocTree> deprs = utils.getBlockTags(annotationType, DocTree.Kind.DEPRECATED);
         if (utils.isDeprecated(annotationType)) {
             CommentHelper ch = utils.getCommentHelper(annotationType);
@@ -239,21 +209,15 @@
             }
             annotationInfoTree.add(div);
         }
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public TypeElement getAnnotationTypeElement() {
         return annotationType;
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public Content getMemberDetailsTree(Content contentTree) {
         return HtmlTree.SECTION(HtmlStyle.details, contentTree)
                 .setId(SectionName.ANNOTATION_TYPE_ELEMENT_DETAIL.getName());
     }
