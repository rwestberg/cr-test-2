diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/builders/AnnotationTypeOptionalMemberBuilder.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/builders/AnnotationTypeOptionalMemberBuilder.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/builders/AnnotationTypeOptionalMemberBuilder.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/builders/AnnotationTypeOptionalMemberBuilder.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -71,13 +71,10 @@
             AnnotationTypeOptionalMemberWriter writer) {
         return new AnnotationTypeOptionalMemberBuilder(context,
                 typeElement, writer);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void build(Content contentTree) throws DocletException {
         buildAnnotationTypeOptionalMember(contentTree);
     }
 
@@ -106,13 +103,10 @@
     protected void buildDefaultValueInfo(Content annotationDocTree) {
         ((AnnotationTypeOptionalMemberWriter) writer).addDefaultValueInfo(currentMember,
                 annotationDocTree);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public AnnotationTypeRequiredMemberWriter getWriter() {
         return writer;
     }
 }
