diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/PackageWriterImpl.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/PackageWriterImpl.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/PackageWriterImpl.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/PackageWriterImpl.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1997, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -95,13 +95,10 @@
                 .resolve(DocPaths.PACKAGE_SUMMARY));
         this.packageElement = packageElement;
         this.navBar = new Navigation(packageElement, configuration, PageMode.PACKAGE, path);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public Content getPackageHeader(String heading) {
         HtmlTree bodyTree = getBody(getWindowTitle(utils.getPackageName(packageElement)));
         Content headerContent = new ContentBuilder();
         addTop(headerContent);
@@ -133,13 +130,10 @@
         bodyContents.setHeader(headerContent)
                 .addMainContent(div);
         return bodyTree;
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public Content getContentHeader() {
         HtmlTree div = new HtmlTree(HtmlTag.DIV);
         div.setStyle(HtmlStyle.contentContainer);
         return div;
@@ -166,77 +160,53 @@
             }
             div.add(deprDiv);
         }
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public Content getSummaryHeader() {
         HtmlTree ul = new HtmlTree(HtmlTag.UL);
         ul.setStyle(HtmlStyle.blockList);
         return ul;
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void addInterfaceSummary(SortedSet<TypeElement> interfaces, Content summaryContentTree) {
         TableHeader tableHeader= new TableHeader(contents.interfaceLabel, contents.descriptionLabel);
         addClassesSummary(interfaces, resources.interfaceSummary, tableHeader, summaryContentTree);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void addClassSummary(SortedSet<TypeElement> classes, Content summaryContentTree) {
         TableHeader tableHeader= new TableHeader(contents.classLabel, contents.descriptionLabel);
         addClassesSummary(classes, resources.classSummary, tableHeader, summaryContentTree);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void addEnumSummary(SortedSet<TypeElement> enums, Content summaryContentTree) {
         TableHeader tableHeader= new TableHeader(contents.enum_, contents.descriptionLabel);
         addClassesSummary(enums, resources.enumSummary, tableHeader, summaryContentTree);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void addRecordSummary(SortedSet<TypeElement> records, Content summaryContentTree) {
         TableHeader tableHeader= new TableHeader(contents.record, contents.descriptionLabel);
         addClassesSummary(records, resources.recordSummary, tableHeader, summaryContentTree);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void addExceptionSummary(SortedSet<TypeElement> exceptions, Content summaryContentTree) {
         TableHeader tableHeader= new TableHeader(contents.exception, contents.descriptionLabel);
         addClassesSummary(exceptions, resources.exceptionSummary, tableHeader, summaryContentTree);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void addErrorSummary(SortedSet<TypeElement> errors, Content summaryContentTree) {
         TableHeader tableHeader= new TableHeader(contents.error, contents.descriptionLabel);
         addClassesSummary(errors, resources.errorSummary, tableHeader, summaryContentTree);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void addAnnotationTypeSummary(SortedSet<TypeElement> annoTypes, Content summaryContentTree) {
         TableHeader tableHeader= new TableHeader(contents.annotationType, contents.descriptionLabel);
         addClassesSummary(annoTypes, resources.annotationTypeSummary, tableHeader, summaryContentTree);
     }
@@ -270,68 +240,50 @@
             Content li = HtmlTree.LI(HtmlStyle.blockList, table.toContent());
             summaryContentTree.add(li);
         }
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void addPackageDescription(Content packageContentTree) {
         if (!utils.getBody(packageElement).isEmpty()) {
             HtmlTree tree = sectionTree;
             tree.setId(SectionName.PACKAGE_DESCRIPTION.getName());
             addDeprecationInfo(tree);
             addInlineComment(packageElement, tree);
         }
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void addPackageTags(Content packageContentTree) {
         Content htmlTree = sectionTree;
         addTagsInfo(packageElement, htmlTree);
         packageContentTree.add(sectionTree);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void addPackageContent(Content packageContentTree) {
         bodyContents.addMainContent(packageContentTree);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void addPackageFooter() {
         Content htmlTree = HtmlTree.FOOTER();
         navBar.setUserFooter(getUserHeaderFooter(false));
         htmlTree.add(navBar.getContent(false));
         addBottom(htmlTree);
         bodyContents.setFooter(htmlTree);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public void printDocument(Content contentTree) throws DocFileIOException {
         String description = getDescription("declaration", packageElement);
         List<DocPath> localStylesheets = getLocalStylesheets(packageElement);
         contentTree.add(bodyContents.toContent());
         printHtmlDocument(configuration.metakeywords.getMetaKeywords(packageElement),
                 description, localStylesheets, contentTree);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public Content getPackageSummary(Content summaryContentTree) {
         return HtmlTree.SECTION(HtmlStyle.summary, summaryContentTree);
     }
 }
