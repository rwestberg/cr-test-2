diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/taglets/BaseTaglet.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/taglets/BaseTaglet.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/taglets/BaseTaglet.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/taglets/BaseTaglet.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -71,79 +71,87 @@
      * Returns true if this {@code Taglet} can be used in constructor documentation.
      *
      * @return true if this {@code Taglet} can be used in constructor documentation and false
      * otherwise.
      */
+    @Override
     public final boolean inConstructor() {
         return sites.contains(Location.CONSTRUCTOR);
     }
 
     /**
      * Returns true if this {@code Taglet} can be used in field documentation.
      *
      * @return true if this {@code Taglet} can be used in field documentation and false
      * otherwise.
      */
+    @Override
     public final boolean inField() {
         return sites.contains(Location.FIELD);
     }
 
     /**
      * Returns true if this {@code Taglet} can be used in method documentation.
      *
      * @return true if this {@code Taglet} can be used in method documentation and false
      * otherwise.
      */
+    @Override
     public final boolean inMethod() {
         return sites.contains(Location.METHOD);
     }
 
     /**
      * Returns true if this {@code Taglet} can be used in overview documentation.
      *
      * @return true if this {@code Taglet} can be used in method documentation and false
      * otherwise.
      */
+    @Override
     public final boolean inOverview() {
         return sites.contains(Location.OVERVIEW);
     }
 
     /**
      * Returns true if this {@code Taglet} can be used in module documentation.
      *
      * @return true if this {@code Taglet} can be used in module documentation and false
      * otherwise.
      */
+    @Override
     public final boolean inModule() {
         return sites.contains(Location.MODULE);
     }
 
     /**
      * Returns true if this {@code Taglet} can be used in package documentation.
      *
      * @return true if this {@code Taglet} can be used in package documentation and false
      * otherwise.
      */
+    @Override
     public final boolean inPackage() {
         return sites.contains(Location.PACKAGE);
     }
 
     /**
      * Returns true if this {@code Taglet} can be used in type documentation (classes or interfaces).
      *
      * @return true if this {@code Taglet} can be used in type documentation and false
      * otherwise.
      */
+    @Override
     public final boolean inType() {
         return sites.contains(Location.TYPE);
     }
 
     /**
      * Returns true if this {@code Taglet} is an inline tag.
      *
      * @return true if this {@code Taglet} represents an inline tag and false otherwise.
      */
+    @Override
     public final boolean isInlineTag() {
         return inline;
     }
 
     /**
@@ -158,10 +166,11 @@
     /**
      * Returns the name of this tag.
      *
      * @return the name of this tag.
      */
+    @Override
     public String getName() {
         return name;
     }
 
     /**
@@ -177,25 +186,15 @@
                     && tagKind == DocTree.Kind.UNKNOWN_BLOCK_TAG)
                 ? ((UnknownBlockTagTree) tree).getTagName().equals(name)
                 : tree.getKind() == tagKind;
     }
 
-    /**
-     * {@inheritDoc}
-     *
-     * @throws UnsupportedTagletOperationException thrown when the method is
-     *                                             not supported by the taglet.
-     */
+    @Override
     public Content getTagletOutput(Element element, DocTree tag, TagletWriter writer) {
         throw new UnsupportedTagletOperationException("Method not supported in taglet " + getName() + ".");
     }
 
-    /**
-     * {@inheritDoc}
-     *
-     * @throws UnsupportedTagletOperationException thrown when the method is not
-     *                                             supported by the taglet.
-     */
+    @Override
     public Content getTagletOutput(Element holder, TagletWriter writer) {
         throw new UnsupportedTagletOperationException("Method not supported in taglet " + getName() + ".");
     }
 }
