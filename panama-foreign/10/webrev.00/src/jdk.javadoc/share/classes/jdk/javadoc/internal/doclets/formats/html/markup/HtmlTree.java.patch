diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlTree.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlTree.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlTree.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlTree.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2010, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2010, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -184,13 +184,10 @@
         }
         else
             add(new StringContent(stringContent));
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public int charCount() {
         int n = 0;
         for (Content c : content)
             n += c.charCount();
@@ -875,13 +872,10 @@
         }
         htmlTree.setStyle(nullCheck(styleClass));
         return htmlTree;
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public boolean isEmpty() {
         return (!hasContent() && !hasAttrs());
     }
 
@@ -955,13 +949,10 @@
      */
     public boolean isInline() {
         return (htmlTag.blockType == HtmlTag.BlockType.INLINE);
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
     public boolean write(Writer out, boolean atNewline) throws IOException {
         if (!isInline() && !atNewline)
             out.write(DocletConstants.NL);
         String tagString = htmlTag.toString();
