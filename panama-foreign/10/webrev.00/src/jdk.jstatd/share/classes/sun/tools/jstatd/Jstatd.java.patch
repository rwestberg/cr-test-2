diff a/src/jdk.jstatd/share/classes/sun/tools/jstatd/Jstatd.java b/src/jdk.jstatd/share/classes/sun/tools/jstatd/Jstatd.java
--- a/src/jdk.jstatd/share/classes/sun/tools/jstatd/Jstatd.java
+++ b/src/jdk.jstatd/share/classes/sun/tools/jstatd/Jstatd.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2004, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2004, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -46,11 +46,11 @@
     private static int port = -1;
     private static boolean startRegistry = true;
     private static RemoteHost remoteHost;
 
     private static void printUsage() {
-        System.err.println("usage: jstatd [-nr] [-p port] [-n rminame]\n" +
+        System.err.println("usage: jstatd [-nr] [-p port] [-r rmiport] [-n rminame]\n" +
                            "       jstatd -?|-h|--help");
     }
 
     static void bind(String name, RemoteHost remoteHost)
                 throws RemoteException, MalformedURLException, Exception {
@@ -73,10 +73,11 @@
     }
 
     @SuppressWarnings("deprecation") // Use of RMISecurityManager
     public static void main(String[] args) {
         String rminame = null;
+        int rmiPort = 0;
         int argc = 0;
 
         for ( ; (argc < args.length) && (args[argc].startsWith("-")); argc++) {
             String arg = args[argc];
 
@@ -96,10 +97,21 @@
                       printUsage();
                       System.exit(1);
                   }
                   port = Integer.parseInt(args[argc]);
                 }
+            } else if (arg.startsWith("-r")) {
+                if (arg.compareTo("-r") != 0) {
+                    rmiPort = Integer.parseInt(arg.substring(2));
+                } else {
+                    argc++;
+                    if (argc >= args.length) {
+                        printUsage();
+                        System.exit(1);
+                    }
+                    rmiPort = Integer.parseInt(args[argc]);
+                }
             } else if (arg.startsWith("-n")) {
                 if (arg.compareTo("-n") != 0) {
                     rminame = arg.substring(2);
                 } else {
                     argc++;
@@ -137,13 +149,13 @@
         name.append("/").append(rminame);
 
         try {
             // use 1.5.0 dynamically generated subs.
             System.setProperty("java.rmi.server.ignoreSubClasses", "true");
-            remoteHost = new RemoteHostImpl();
+            remoteHost = new RemoteHostImpl(rmiPort);
             RemoteHost stub = (RemoteHost) UnicastRemoteObject.exportObject(
-                    remoteHost, 0);
+                    remoteHost, rmiPort);
             bind(name.toString(), stub);
             System.out.println("jstatd started (bound to " + name.toString() + ")");
             System.out.flush();
         } catch (MalformedURLException e) {
             if (rminame != null) {
