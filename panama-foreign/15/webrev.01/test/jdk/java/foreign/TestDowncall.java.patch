diff a/test/jdk/java/foreign/TestDowncall.java b/test/jdk/java/foreign/TestDowncall.java
--- a/test/jdk/java/foreign/TestDowncall.java
+++ b/test/jdk/java/foreign/TestDowncall.java
@@ -84,12 +84,12 @@
     }
 
     static FunctionDescriptor function(Ret ret, List<ParamType> params, List<StructFieldType> fields) {
         MemoryLayout[] paramLayouts = params.stream().map(p -> p.layout(fields)).toArray(MemoryLayout[]::new);
         return ret == Ret.VOID ?
-                FunctionDescriptor.ofVoid(false, paramLayouts) :
-                FunctionDescriptor.of(paramLayouts[0], false, paramLayouts);
+                FunctionDescriptor.ofVoid(paramLayouts) :
+                FunctionDescriptor.of(paramLayouts[0], paramLayouts);
     }
 
     static Object[] makeArgs(List<ParamType> params, List<StructFieldType> fields, List<Consumer<Object>> checks) throws ReflectiveOperationException {
         Object[] args = new Object[params.size()];
         for (int i = 0 ; i < params.size() ; i++) {
