diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeImpl.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeImpl.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeImpl.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeImpl.java
@@ -24,10 +24,11 @@
  *
  */
 
 package jdk.internal.jextract.impl;
 
+import java.util.Objects;
 import jdk.incubator.foreign.MemoryLayout;
 import jdk.incubator.jextract.Declaration;
 import jdk.incubator.jextract.Type;
 
 import java.util.List;
@@ -135,21 +136,32 @@
             return type;
         }
     }
 
     public static class PointerImpl extends DelegatedBase {
-
         private final Supplier<Type> pointeeFactory;
+        private Type pointee;
 
         public PointerImpl(Supplier<Type> pointeeFactory) {
             super(Kind.POINTER, Optional.empty());
             this.pointeeFactory = pointeeFactory;
+            this.pointee = null;
+        }
+
+        public PointerImpl(Type pointee) {
+            super(Kind.POINTER, Optional.empty());
+            pointeeFactory = null;
+            this.pointee = pointee;
         }
 
         @Override
         public Type type() {
-            return pointeeFactory.get();
+            if (pointee == null && pointeeFactory != null) {
+                pointee =pointeeFactory.get();
+                Objects.requireNonNull(pointee);
+            }
+            return pointee;
         }
     }
 
     public static class DeclaredImpl extends TypeImpl implements Type.Declared {
 
@@ -244,6 +256,11 @@
         @Override
         public Kind kind() {
             return kind;
         }
     }
+
+    @Override
+    public String toString() {
+        return PrettyPrinter.type(this);
+    }
 }
