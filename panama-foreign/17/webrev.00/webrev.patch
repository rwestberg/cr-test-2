diff a/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/tool/JavaSourceBuilder.java b/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/tool/JavaSourceBuilder.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/tool/JavaSourceBuilder.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/tool/JavaSourceBuilder.java
@@ -223,10 +223,13 @@
         sb.append(",\n");
         indent();
         sb.append("\"" + mtype.toMethodDescriptorString() + "\",\n");
         indent();
         addFunction(desc);
+        sb.append(",\n");
+        indent();
+        sb.append(funcTree.type().varargs());
         decrAlign();
         sb.append("\n");
         indent();
         sb.append(");\n");
         decrAlign();
@@ -242,13 +245,12 @@
             addLayout(f.returnLayout().get());
             sb.append(", ");
         } else {
             sb.append("FunctionDescriptor.ofVoid(");
         }
-        sb.append(f.isVariadic());
         if (!f.argumentLayouts().isEmpty()) {
-            sb.append(",\n");
+            sb.append("\n");
             incrAlign();
             String delim = "";
             for (MemoryLayout e : f.argumentLayouts()) {
                 sb.append(delim);
                 indent();
diff a/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/tool/resources/RuntimeHelper.template b/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/tool/resources/RuntimeHelper.template
--- a/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/tool/resources/RuntimeHelper.template
+++ b/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/tool/resources/RuntimeHelper.template
@@ -49,15 +49,15 @@
 
     public static final MemoryAddress lookupGlobalVariable(LibraryLookup[] LIBRARIES, String name) {
         return lookup(LIBRARIES, name).orElse(null);
     }
 
-    public static final MethodHandle downcallHandle(LibraryLookup[] LIBRARIES, String name, String desc, FunctionDescriptor fdesc) {
+    public static final MethodHandle downcallHandle(LibraryLookup[] LIBRARIES, String name, String desc, FunctionDescriptor fdesc, boolean variadic) {
         return lookup(LIBRARIES, name).map(
                 addr -> {
                     MethodType mt = MethodType.fromMethodDescriptorString(desc, LOADER);
-                    return fdesc.isVariadic() ?
+                    return variadic ?
                         VarargsInvoker.make(addr, mt, fdesc) :
                         ABI.downcallHandle(addr, mt, fdesc);
                 }).orElse(null);
     }
 
@@ -127,12 +127,12 @@
             }
             assert pos == argsCount;
 
             MethodType mt = MethodType.methodType(varargs.returnType(), argTypes);
             FunctionDescriptor f = (function.returnLayout().isEmpty()) ?
-                    FunctionDescriptor.ofVoid(false, argLayouts) :
-                    FunctionDescriptor.of(function.returnLayout().get(), false, argLayouts);
+                    FunctionDescriptor.ofVoid(argLayouts) :
+                    FunctionDescriptor.of(function.returnLayout().get(), argLayouts);
             MethodHandle mh = SystemABI.getInstance().downcallHandle(symbol, mt, f);
             // flatten argument list so that it can be passed to an asSpreader MH
             Object[] allArgs = new Object[nNamedArgs + unnamedArgs.length];
             System.arraycopy(args, 0, allArgs, 0, nNamedArgs);
             System.arraycopy(unnamedArgs, 0, allArgs, nNamedArgs, unnamedArgs.length);
diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/Utils.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/Utils.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/Utils.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/Utils.java
@@ -53,16 +53,16 @@
     static {
         try {
             STRLEN = SystemABI.getInstance().downcallHandle(
                     LibraryLookup.ofDefault().lookup("strlen"),
                     MethodType.methodType(int.class, MemoryAddress.class),
-                    FunctionDescriptor.of(LayoutUtils.C_INT, false, LayoutUtils.C_POINTER));
+                    FunctionDescriptor.of(LayoutUtils.C_INT, LayoutUtils.C_POINTER));
 
             STRCPY = SystemABI.getInstance().downcallHandle(
                     LibraryLookup.ofDefault().lookup("strcpy"),
                     MethodType.methodType(MemoryAddress.class, MemoryAddress.class, MemoryAddress.class),
-                    FunctionDescriptor.of(LayoutUtils.C_POINTER, false, LayoutUtils.C_POINTER, LayoutUtils.C_POINTER));
+                    FunctionDescriptor.of(LayoutUtils.C_POINTER, LayoutUtils.C_POINTER, LayoutUtils.C_POINTER));
         } catch (Throwable ex) {
             throw new ExceptionInInitializerError(ex);
         }
     }
 
diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/libclang/Index_h.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/libclang/Index_h.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/libclang/Index_h.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/libclang/Index_h.java
@@ -40,11 +40,18 @@
 
 import static jdk.internal.jextract.impl.LayoutUtils.*; 
         
 public final class Index_h {
 
-    private static final LibraryLookup[] LIBRARIES = RuntimeHelper.libraries(new String[] {"clang"}, new String[] {});
+    private static String libName() {
+        if (System.getProperty("os.name").startsWith("Windows")) {
+            return "libclang";
+        }
+        return "clang";
+    }
+
+    private static final LibraryLookup[] LIBRARIES = RuntimeHelper.libraries(new String[] {libName()}, new String[] {});
     public static final long NULL = 0L;
     public static final int CINDEX_VERSION_MAJOR = (int)0L;
     public static final int CINDEX_VERSION_MINOR = (int)59L;
     public static final int CINDEX_VERSION = (int)59L;
     public static final int CXError_Success = (int)0L;
@@ -77,11 +84,11 @@
         CXStringSet$Count.set(seg.baseAddress(), x);
     }
     public static final MethodHandle clang_getCString = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCString",
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             MemoryLayout.ofStruct(
                 C_POINTER.withName("data"),
                 C_INT.withName("private_flags"),
                 MemoryLayout.ofPaddingBits(32)
             )
@@ -95,11 +102,11 @@
         }
     }
     public static final MethodHandle clang_disposeString = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_disposeString",
         "(Ljdk/incubator/foreign/MemorySegment;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             MemoryLayout.ofStruct(
                 C_POINTER.withName("data"),
                 C_INT.withName("private_flags"),
                 MemoryLayout.ofPaddingBits(32)
             )
@@ -113,11 +120,11 @@
         }
     }
     public static final MethodHandle clang_disposeStringSet = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_disposeStringSet",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_disposeStringSet (MemoryAddress set) {
         try {
@@ -127,11 +134,11 @@
         }
     }
     public static final MethodHandle clang_getBuildSessionTimestamp = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getBuildSessionTimestamp",
         "()J",
-        FunctionDescriptor.of(C_LONGLONG, false)
+        FunctionDescriptor.of(C_LONGLONG)
     );
     public static final long clang_getBuildSessionTimestamp () {
         try {
             return (long)clang_getBuildSessionTimestamp.invokeExact();
         } catch (Throwable ex) {
@@ -139,11 +146,11 @@
         }
     }
     public static final MethodHandle clang_VirtualFileOverlay_create = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_VirtualFileOverlay_create",
         "(I)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_INT
         )
     );
     public static final MemoryAddress clang_VirtualFileOverlay_create (int options) {
         try {
@@ -153,11 +160,11 @@
         }
     }
     public static final MethodHandle clang_VirtualFileOverlay_addFileMapping = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_VirtualFileOverlay_addFileMapping",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_POINTER,
             C_POINTER
         )
     );
@@ -169,11 +176,11 @@
         }
     }
     public static final MethodHandle clang_VirtualFileOverlay_setCaseSensitivity = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_VirtualFileOverlay_setCaseSensitivity",
         "(Ljdk/incubator/foreign/MemoryAddress;I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_INT
         )
     );
     public static final int clang_VirtualFileOverlay_setCaseSensitivity (MemoryAddress x0, int caseSensitive) {
@@ -184,11 +191,11 @@
         }
     }
     public static final MethodHandle clang_VirtualFileOverlay_writeToBuffer = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_VirtualFileOverlay_writeToBuffer",
         "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_INT,
             C_POINTER,
             C_POINTER
         )
@@ -201,11 +208,11 @@
         }
     }
     public static final MethodHandle clang_free = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_free",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_free (MemoryAddress buffer) {
         try {
@@ -215,11 +222,11 @@
         }
     }
     public static final MethodHandle clang_VirtualFileOverlay_dispose = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_VirtualFileOverlay_dispose",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_VirtualFileOverlay_dispose (MemoryAddress x0) {
         try {
@@ -229,11 +236,11 @@
         }
     }
     public static final MethodHandle clang_ModuleMapDescriptor_create = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_ModuleMapDescriptor_create",
         "(I)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_INT
         )
     );
     public static final MemoryAddress clang_ModuleMapDescriptor_create (int options) {
         try {
@@ -243,11 +250,11 @@
         }
     }
     public static final MethodHandle clang_ModuleMapDescriptor_setFrameworkModuleName = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_ModuleMapDescriptor_setFrameworkModuleName",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_POINTER
         )
     );
     public static final int clang_ModuleMapDescriptor_setFrameworkModuleName (MemoryAddress x0, MemoryAddress name) {
@@ -258,11 +265,11 @@
         }
     }
     public static final MethodHandle clang_ModuleMapDescriptor_setUmbrellaHeader = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_ModuleMapDescriptor_setUmbrellaHeader",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_POINTER
         )
     );
     public static final int clang_ModuleMapDescriptor_setUmbrellaHeader (MemoryAddress x0, MemoryAddress name) {
@@ -273,11 +280,11 @@
         }
     }
     public static final MethodHandle clang_ModuleMapDescriptor_writeToBuffer = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_ModuleMapDescriptor_writeToBuffer",
         "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_INT,
             C_POINTER,
             C_POINTER
         )
@@ -290,11 +297,11 @@
         }
     }
     public static final MethodHandle clang_ModuleMapDescriptor_dispose = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_ModuleMapDescriptor_dispose",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_ModuleMapDescriptor_dispose (MemoryAddress x0) {
         try {
@@ -356,11 +363,11 @@
     public static final int CXCursor_ExceptionSpecificationKind_Unparsed = (int)8L;
     public static final int CXCursor_ExceptionSpecificationKind_NoThrow = (int)9L;
     public static final MethodHandle clang_createIndex = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_createIndex",
         "(II)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_INT,
             C_INT
         )
     );
     public static final MemoryAddress clang_createIndex (int excludeDeclarationsFromPCH, int displayDiagnostics) {
@@ -371,11 +378,11 @@
         }
     }
     public static final MethodHandle clang_disposeIndex = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_disposeIndex",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_disposeIndex (MemoryAddress index) {
         try {
@@ -389,11 +396,11 @@
     public static final int CXGlobalOpt_ThreadBackgroundPriorityForEditing = (int)2L;
     public static final int CXGlobalOpt_ThreadBackgroundPriorityForAll = (int)3L;
     public static final MethodHandle clang_CXIndex_setGlobalOptions = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_CXIndex_setGlobalOptions",
         "(Ljdk/incubator/foreign/MemoryAddress;I)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER,
             C_INT
         )
     );
     public static final void clang_CXIndex_setGlobalOptions (MemoryAddress x0, int options) {
@@ -404,11 +411,11 @@
         }
     }
     public static final MethodHandle clang_CXIndex_getGlobalOptions = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_CXIndex_getGlobalOptions",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_CXIndex_getGlobalOptions (MemoryAddress x0) {
         try {
@@ -418,11 +425,11 @@
         }
     }
     public static final MethodHandle clang_CXIndex_setInvocationEmissionPathOption = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_CXIndex_setInvocationEmissionPathOption",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER,
             C_POINTER
         )
     );
     public static final void clang_CXIndex_setInvocationEmissionPathOption (MemoryAddress x0, MemoryAddress Path) {
@@ -437,11 +444,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER
         )
     );
     public static final MemorySegment clang_getFileName (MemoryAddress SFile) {
         try {
@@ -451,11 +458,11 @@
         }
     }
     public static final MethodHandle clang_getFileTime = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getFileTime",
         "(Ljdk/incubator/foreign/MemoryAddress;)J",
-        FunctionDescriptor.of(C_LONGLONG, false,
+        FunctionDescriptor.of(C_LONGLONG,
             C_POINTER
         )
     );
     public static final long clang_getFileTime (MemoryAddress SFile) {
         try {
@@ -468,11 +475,11 @@
         MemoryLayout.ofSequence(3, C_LONGLONG).withName("data")
     );
     public static final MethodHandle clang_getFileUniqueID = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getFileUniqueID",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_POINTER
         )
     );
     public static final int clang_getFileUniqueID (MemoryAddress file, MemoryAddress outID) {
@@ -483,11 +490,11 @@
         }
     }
     public static final MethodHandle clang_isFileMultipleIncludeGuarded = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isFileMultipleIncludeGuarded",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_POINTER
         )
     );
     public static final int clang_isFileMultipleIncludeGuarded (MemoryAddress tu, MemoryAddress file) {
@@ -498,11 +505,11 @@
         }
     }
     public static final MethodHandle clang_getFile = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getFile",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_getFile (MemoryAddress tu, MemoryAddress file_name) {
@@ -513,11 +520,11 @@
         }
     }
     public static final MethodHandle clang_getFileContents = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getFileContents",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER,
             C_POINTER,
             C_POINTER
         )
     );
@@ -529,11 +536,11 @@
         }
     }
     public static final MethodHandle clang_File_isEqual = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_File_isEqual",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_POINTER
         )
     );
     public static final int clang_File_isEqual (MemoryAddress file1, MemoryAddress file2) {
@@ -548,11 +555,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER
         )
     );
     public static final MemorySegment clang_File_tryGetRealPathName (MemoryAddress file) {
         try {
@@ -597,11 +604,11 @@
         "()Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("int_data"),
             MemoryLayout.ofPaddingBits(32)
-        ), false)
+        ))
     );
     public static final MemorySegment clang_getNullLocation () {
         try {
             return (MemorySegment)clang_getNullLocation.invokeExact();
         } catch (Throwable ex) {
@@ -609,11 +616,11 @@
         }
     }
     public static final MethodHandle clang_equalLocations = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_equalLocations",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("int_data"),
                 MemoryLayout.ofPaddingBits(32)
             ),
@@ -636,11 +643,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("int_data"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER,
             C_POINTER,
             C_INT,
             C_INT
         )
@@ -657,11 +664,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("int_data"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER,
             C_POINTER,
             C_INT
         )
     );
@@ -673,11 +680,11 @@
         }
     }
     public static final MethodHandle clang_Location_isInSystemHeader = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Location_isInSystemHeader",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("int_data"),
                 MemoryLayout.ofPaddingBits(32)
             )
@@ -691,11 +698,11 @@
         }
     }
     public static final MethodHandle clang_Location_isFromMainFile = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Location_isFromMainFile",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("int_data"),
                 MemoryLayout.ofPaddingBits(32)
             )
@@ -713,11 +720,11 @@
         "()Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("begin_int_data"),
             C_INT.withName("end_int_data")
-        ), false)
+        ))
     );
     public static final MemorySegment clang_getNullRange () {
         try {
             return (MemorySegment)clang_getNullRange.invokeExact();
         } catch (Throwable ex) {
@@ -729,11 +736,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("begin_int_data"),
             C_INT.withName("end_int_data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("int_data"),
                 MemoryLayout.ofPaddingBits(32)
             ),
@@ -752,11 +759,11 @@
         }
     }
     public static final MethodHandle clang_equalRanges = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_equalRanges",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("begin_int_data"),
                 C_INT.withName("end_int_data")
             ),
@@ -775,11 +782,11 @@
         }
     }
     public static final MethodHandle clang_Range_isNull = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Range_isNull",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("begin_int_data"),
                 C_INT.withName("end_int_data")
             )
@@ -793,11 +800,11 @@
         }
     }
     public static final MethodHandle clang_getExpansionLocation = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getExpansionLocation",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("int_data"),
                 MemoryLayout.ofPaddingBits(32)
             ),
@@ -815,11 +822,11 @@
         }
     }
     public static final MethodHandle clang_getPresumedLocation = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getPresumedLocation",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("int_data"),
                 MemoryLayout.ofPaddingBits(32)
             ),
@@ -836,11 +843,11 @@
         }
     }
     public static final MethodHandle clang_getInstantiationLocation = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getInstantiationLocation",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("int_data"),
                 MemoryLayout.ofPaddingBits(32)
             ),
@@ -858,11 +865,11 @@
         }
     }
     public static final MethodHandle clang_getSpellingLocation = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getSpellingLocation",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("int_data"),
                 MemoryLayout.ofPaddingBits(32)
             ),
@@ -880,11 +887,11 @@
         }
     }
     public static final MethodHandle clang_getFileLocation = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getFileLocation",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("int_data"),
                 MemoryLayout.ofPaddingBits(32)
             ),
@@ -906,11 +913,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("int_data"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("begin_int_data"),
                 C_INT.withName("end_int_data")
             )
@@ -928,11 +935,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("int_data"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("begin_int_data"),
                 C_INT.withName("end_int_data")
             )
@@ -958,11 +965,11 @@
         CXSourceRangeList$count.set(seg.baseAddress(), x);
     }
     public static final MethodHandle clang_getSkippedRanges = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getSkippedRanges",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_getSkippedRanges (MemoryAddress tu, MemoryAddress file) {
@@ -973,11 +980,11 @@
         }
     }
     public static final MethodHandle clang_getAllSkippedRanges = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getAllSkippedRanges",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_getAllSkippedRanges (MemoryAddress tu) {
         try {
@@ -987,11 +994,11 @@
         }
     }
     public static final MethodHandle clang_disposeSourceRangeList = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_disposeSourceRangeList",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_disposeSourceRangeList (MemoryAddress ranges) {
         try {
@@ -1006,11 +1013,11 @@
     public static final int CXDiagnostic_Error = (int)3L;
     public static final int CXDiagnostic_Fatal = (int)4L;
     public static final MethodHandle clang_getNumDiagnosticsInSet = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getNumDiagnosticsInSet",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_getNumDiagnosticsInSet (MemoryAddress Diags) {
         try {
@@ -1020,11 +1027,11 @@
         }
     }
     public static final MethodHandle clang_getDiagnosticInSet = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getDiagnosticInSet",
         "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER,
             C_INT
         )
     );
     public static final MemoryAddress clang_getDiagnosticInSet (MemoryAddress Diags, int Index) {
@@ -1039,11 +1046,11 @@
     public static final int CXLoadDiag_CannotLoad = (int)2L;
     public static final int CXLoadDiag_InvalidFile = (int)3L;
     public static final MethodHandle clang_loadDiagnostics = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_loadDiagnostics",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER,
             C_POINTER,
             C_POINTER
         )
     );
@@ -1055,11 +1062,11 @@
         }
     }
     public static final MethodHandle clang_disposeDiagnosticSet = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_disposeDiagnosticSet",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_disposeDiagnosticSet (MemoryAddress Diags) {
         try {
@@ -1069,11 +1076,11 @@
         }
     }
     public static final MethodHandle clang_getChildDiagnostics = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getChildDiagnostics",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_getChildDiagnostics (MemoryAddress D) {
         try {
@@ -1083,11 +1090,11 @@
         }
     }
     public static final MethodHandle clang_getNumDiagnostics = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getNumDiagnostics",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_getNumDiagnostics (MemoryAddress Unit) {
         try {
@@ -1097,11 +1104,11 @@
         }
     }
     public static final MethodHandle clang_getDiagnostic = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getDiagnostic",
         "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER,
             C_INT
         )
     );
     public static final MemoryAddress clang_getDiagnostic (MemoryAddress Unit, int Index) {
@@ -1112,11 +1119,11 @@
         }
     }
     public static final MethodHandle clang_getDiagnosticSetFromTU = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getDiagnosticSetFromTU",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_getDiagnosticSetFromTU (MemoryAddress Unit) {
         try {
@@ -1126,11 +1133,11 @@
         }
     }
     public static final MethodHandle clang_disposeDiagnostic = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_disposeDiagnostic",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_disposeDiagnostic (MemoryAddress Diagnostic) {
         try {
@@ -1150,11 +1157,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER,
             C_INT
         )
     );
     public static final MemorySegment clang_formatDiagnostic (MemoryAddress Diagnostic, int Options) {
@@ -1165,11 +1172,11 @@
         }
     }
     public static final MethodHandle clang_defaultDiagnosticDisplayOptions = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_defaultDiagnosticDisplayOptions",
         "()I",
-        FunctionDescriptor.of(C_INT, false)
+        FunctionDescriptor.of(C_INT)
     );
     public static final int clang_defaultDiagnosticDisplayOptions () {
         try {
             return (int)clang_defaultDiagnosticDisplayOptions.invokeExact();
         } catch (Throwable ex) {
@@ -1177,11 +1184,11 @@
         }
     }
     public static final MethodHandle clang_getDiagnosticSeverity = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getDiagnosticSeverity",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_getDiagnosticSeverity (MemoryAddress x0) {
         try {
@@ -1195,11 +1202,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("int_data"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER
         )
     );
     public static final MemorySegment clang_getDiagnosticLocation (MemoryAddress x0) {
         try {
@@ -1213,11 +1220,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER
         )
     );
     public static final MemorySegment clang_getDiagnosticSpelling (MemoryAddress x0) {
         try {
@@ -1231,11 +1238,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER,
             C_POINTER
         )
     );
     public static final MemorySegment clang_getDiagnosticOption (MemoryAddress Diag, MemoryAddress Disable) {
@@ -1246,11 +1253,11 @@
         }
     }
     public static final MethodHandle clang_getDiagnosticCategory = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getDiagnosticCategory",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_getDiagnosticCategory (MemoryAddress x0) {
         try {
@@ -1264,11 +1271,11 @@
         "(I)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_INT
         )
     );
     public static final MemorySegment clang_getDiagnosticCategoryName (int Category) {
         try {
@@ -1282,11 +1289,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER
         )
     );
     public static final MemorySegment clang_getDiagnosticCategoryText (MemoryAddress x0) {
         try {
@@ -1296,11 +1303,11 @@
         }
     }
     public static final MethodHandle clang_getDiagnosticNumRanges = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getDiagnosticNumRanges",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_getDiagnosticNumRanges (MemoryAddress x0) {
         try {
@@ -1314,11 +1321,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("begin_int_data"),
             C_INT.withName("end_int_data")
-        ), false,
+        ),
             C_POINTER,
             C_INT
         )
     );
     public static final MemorySegment clang_getDiagnosticRange (MemoryAddress Diagnostic, int Range) {
@@ -1329,11 +1336,11 @@
         }
     }
     public static final MethodHandle clang_getDiagnosticNumFixIts = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getDiagnosticNumFixIts",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_getDiagnosticNumFixIts (MemoryAddress Diagnostic) {
         try {
@@ -1347,11 +1354,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER,
             C_INT,
             C_POINTER
         )
     );
@@ -1367,11 +1374,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER
         )
     );
     public static final MemorySegment clang_getTranslationUnitSpelling (MemoryAddress CTUnit) {
         try {
@@ -1381,11 +1388,11 @@
         }
     }
     public static final MethodHandle clang_createTranslationUnitFromSourceFile = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_createTranslationUnitFromSourceFile",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER,
             C_POINTER,
             C_INT,
             C_POINTER,
             C_INT,
@@ -1400,11 +1407,11 @@
         }
     }
     public static final MethodHandle clang_createTranslationUnit = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_createTranslationUnit",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_createTranslationUnit (MemoryAddress CIdx, MemoryAddress ast_filename) {
@@ -1415,11 +1422,11 @@
         }
     }
     public static final MethodHandle clang_createTranslationUnit2 = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_createTranslationUnit2",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_POINTER,
             C_POINTER
         )
     );
@@ -1447,11 +1454,11 @@
     public static final int CXTranslationUnit_VisitImplicitAttributes = (int)8192L;
     public static final int CXTranslationUnit_IgnoreNonErrorsFromIncludedFiles = (int)16384L;
     public static final MethodHandle clang_defaultEditingTranslationUnitOptions = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_defaultEditingTranslationUnitOptions",
         "()I",
-        FunctionDescriptor.of(C_INT, false)
+        FunctionDescriptor.of(C_INT)
     );
     public static final int clang_defaultEditingTranslationUnitOptions () {
         try {
             return (int)clang_defaultEditingTranslationUnitOptions.invokeExact();
         } catch (Throwable ex) {
@@ -1459,11 +1466,11 @@
         }
     }
     public static final MethodHandle clang_parseTranslationUnit = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_parseTranslationUnit",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;II)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER,
             C_POINTER,
             C_POINTER,
             C_INT,
             C_POINTER,
@@ -1479,11 +1486,11 @@
         }
     }
     public static final MethodHandle clang_parseTranslationUnit2 = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_parseTranslationUnit2",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_POINTER,
             C_POINTER,
             C_INT,
             C_POINTER,
@@ -1500,11 +1507,11 @@
         }
     }
     public static final MethodHandle clang_parseTranslationUnit2FullArgv = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_parseTranslationUnit2FullArgv",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_POINTER,
             C_POINTER,
             C_INT,
             C_POINTER,
@@ -1522,11 +1529,11 @@
     }
     public static final int CXSaveTranslationUnit_None = (int)0L;
     public static final MethodHandle clang_defaultSaveOptions = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_defaultSaveOptions",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_defaultSaveOptions (MemoryAddress TU) {
         try {
@@ -1540,11 +1547,11 @@
     public static final int CXSaveError_TranslationErrors = (int)2L;
     public static final int CXSaveError_InvalidTU = (int)3L;
     public static final MethodHandle clang_saveTranslationUnit = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_saveTranslationUnit",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_POINTER,
             C_INT
         )
     );
@@ -1556,11 +1563,11 @@
         }
     }
     public static final MethodHandle clang_suspendTranslationUnit = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_suspendTranslationUnit",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_suspendTranslationUnit (MemoryAddress x0) {
         try {
@@ -1570,11 +1577,11 @@
         }
     }
     public static final MethodHandle clang_disposeTranslationUnit = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_disposeTranslationUnit",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_disposeTranslationUnit (MemoryAddress x0) {
         try {
@@ -1585,11 +1592,11 @@
     }
     public static final int CXReparse_None = (int)0L;
     public static final MethodHandle clang_defaultReparseOptions = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_defaultReparseOptions",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_defaultReparseOptions (MemoryAddress TU) {
         try {
@@ -1599,11 +1606,11 @@
         }
     }
     public static final MethodHandle clang_reparseTranslationUnit = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_reparseTranslationUnit",
         "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_INT,
             C_POINTER,
             C_INT
         )
@@ -1634,11 +1641,11 @@
     public static final int CXTUResourceUsage_First = (int)1L;
     public static final int CXTUResourceUsage_Last = (int)14L;
     public static final MethodHandle clang_getTUResourceUsageName = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getTUResourceUsageName",
         "(I)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_INT
         )
     );
     public static final MemoryAddress clang_getTUResourceUsageName (int kind) {
         try {
@@ -1685,11 +1692,11 @@
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("numEntries"),
             MemoryLayout.ofPaddingBits(32),
             C_POINTER.withName("entries")
-        ).withName("CXTUResourceUsage"), false,
+        ).withName("CXTUResourceUsage"),
             C_POINTER
         )
     );
     public static final MemorySegment clang_getCXTUResourceUsage (MemoryAddress TU) {
         try {
@@ -1699,11 +1706,11 @@
         }
     }
     public static final MethodHandle clang_disposeCXTUResourceUsage = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_disposeCXTUResourceUsage",
         "(Ljdk/incubator/foreign/MemorySegment;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             MemoryLayout.ofStruct(
                 C_POINTER.withName("data"),
                 C_INT.withName("numEntries"),
                 MemoryLayout.ofPaddingBits(32),
                 C_POINTER.withName("entries")
@@ -1718,11 +1725,11 @@
         }
     }
     public static final MethodHandle clang_getTranslationUnitTargetInfo = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getTranslationUnitTargetInfo",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_getTranslationUnitTargetInfo (MemoryAddress CTUnit) {
         try {
@@ -1732,11 +1739,11 @@
         }
     }
     public static final MethodHandle clang_TargetInfo_dispose = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_TargetInfo_dispose",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_TargetInfo_dispose (MemoryAddress Info) {
         try {
@@ -1750,11 +1757,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER
         )
     );
     public static final MemorySegment clang_TargetInfo_getTriple (MemoryAddress Info) {
         try {
@@ -1764,11 +1771,11 @@
         }
     }
     public static final MethodHandle clang_TargetInfo_getPointerWidth = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_TargetInfo_getPointerWidth",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_TargetInfo_getPointerWidth (MemoryAddress Info) {
         try {
@@ -2056,11 +2063,11 @@
         "()Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             C_INT.withName("xdata"),
             MemoryLayout.ofSequence(3, C_POINTER).withName("data")
-        ), false)
+        ))
     );
     public static final MemorySegment clang_getNullCursor () {
         try {
             return (MemorySegment)clang_getNullCursor.invokeExact();
         } catch (Throwable ex) {
@@ -2072,11 +2079,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             C_INT.withName("xdata"),
             MemoryLayout.ofSequence(3, C_POINTER).withName("data")
-        ), false,
+        ),
             C_POINTER
         )
     );
     public static final MemorySegment clang_getTranslationUnitCursor (MemoryAddress x0) {
         try {
@@ -2086,11 +2093,11 @@
         }
     }
     public static final MethodHandle clang_equalCursors = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_equalCursors",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -2109,11 +2116,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_isNull = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_isNull",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2127,11 +2134,11 @@
         }
     }
     public static final MethodHandle clang_hashCursor = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_hashCursor",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2145,11 +2152,11 @@
         }
     }
     public static final MethodHandle clang_getCursorKind = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCursorKind",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2163,11 +2170,11 @@
         }
     }
     public static final MethodHandle clang_isDeclaration = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isDeclaration",
         "(I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_INT
         )
     );
     public static final int clang_isDeclaration (int x0) {
         try {
@@ -2177,11 +2184,11 @@
         }
     }
     public static final MethodHandle clang_isInvalidDeclaration = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isInvalidDeclaration",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2195,11 +2202,11 @@
         }
     }
     public static final MethodHandle clang_isReference = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isReference",
         "(I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_INT
         )
     );
     public static final int clang_isReference (int x0) {
         try {
@@ -2209,11 +2216,11 @@
         }
     }
     public static final MethodHandle clang_isExpression = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isExpression",
         "(I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_INT
         )
     );
     public static final int clang_isExpression (int x0) {
         try {
@@ -2223,11 +2230,11 @@
         }
     }
     public static final MethodHandle clang_isStatement = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isStatement",
         "(I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_INT
         )
     );
     public static final int clang_isStatement (int x0) {
         try {
@@ -2237,11 +2244,11 @@
         }
     }
     public static final MethodHandle clang_isAttribute = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isAttribute",
         "(I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_INT
         )
     );
     public static final int clang_isAttribute (int x0) {
         try {
@@ -2251,11 +2258,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_hasAttrs = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_hasAttrs",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2269,11 +2276,11 @@
         }
     }
     public static final MethodHandle clang_isInvalid = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isInvalid",
         "(I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_INT
         )
     );
     public static final int clang_isInvalid (int x0) {
         try {
@@ -2283,11 +2290,11 @@
         }
     }
     public static final MethodHandle clang_isTranslationUnit = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isTranslationUnit",
         "(I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_INT
         )
     );
     public static final int clang_isTranslationUnit (int x0) {
         try {
@@ -2297,11 +2304,11 @@
         }
     }
     public static final MethodHandle clang_isPreprocessing = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isPreprocessing",
         "(I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_INT
         )
     );
     public static final int clang_isPreprocessing (int x0) {
         try {
@@ -2311,11 +2318,11 @@
         }
     }
     public static final MethodHandle clang_isUnexposed = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isUnexposed",
         "(I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_INT
         )
     );
     public static final int clang_isUnexposed (int x0) {
         try {
@@ -2330,11 +2337,11 @@
     public static final int CXLinkage_UniqueExternal = (int)3L;
     public static final int CXLinkage_External = (int)4L;
     public static final MethodHandle clang_getCursorLinkage = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCursorLinkage",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2352,11 +2359,11 @@
     public static final int CXVisibility_Protected = (int)2L;
     public static final int CXVisibility_Default = (int)3L;
     public static final MethodHandle clang_getCursorVisibility = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCursorVisibility",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2370,11 +2377,11 @@
         }
     }
     public static final MethodHandle clang_getCursorAvailability = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCursorAvailability",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2423,11 +2430,11 @@
         CXPlatformAvailability$Unavailable.set(seg.baseAddress(), x);
     }
     public static final MethodHandle clang_getCursorPlatformAvailability = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCursorPlatformAvailability",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -2447,11 +2454,11 @@
         }
     }
     public static final MethodHandle clang_disposeCXPlatformAvailability = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_disposeCXPlatformAvailability",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_disposeCXPlatformAvailability (MemoryAddress availability) {
         try {
@@ -2465,11 +2472,11 @@
     public static final int CXLanguage_ObjC = (int)2L;
     public static final int CXLanguage_CPlusPlus = (int)3L;
     public static final MethodHandle clang_getCursorLanguage = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCursorLanguage",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2486,11 +2493,11 @@
     public static final int CXTLS_Dynamic = (int)1L;
     public static final int CXTLS_Static = (int)2L;
     public static final MethodHandle clang_getCursorTLSKind = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCursorTLSKind",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2504,11 +2511,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_getTranslationUnit = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_getTranslationUnit",
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2522,11 +2529,11 @@
         }
     }
     public static final MethodHandle clang_createCXCursorSet = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_createCXCursorSet",
         "()Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false)
+        FunctionDescriptor.of(C_POINTER)
     );
     public static final MemoryAddress clang_createCXCursorSet () {
         try {
             return (MemoryAddress)clang_createCXCursorSet.invokeExact();
         } catch (Throwable ex) {
@@ -2534,11 +2541,11 @@
         }
     }
     public static final MethodHandle clang_disposeCXCursorSet = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_disposeCXCursorSet",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_disposeCXCursorSet (MemoryAddress cset) {
         try {
@@ -2548,11 +2555,11 @@
         }
     }
     public static final MethodHandle clang_CXCursorSet_contains = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_CXCursorSet_contains",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
@@ -2567,11 +2574,11 @@
         }
     }
     public static final MethodHandle clang_CXCursorSet_insert = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_CXCursorSet_insert",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
@@ -2590,11 +2597,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             C_INT.withName("xdata"),
             MemoryLayout.ofSequence(3, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2612,11 +2619,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             C_INT.withName("xdata"),
             MemoryLayout.ofSequence(3, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2630,11 +2637,11 @@
         }
     }
     public static final MethodHandle clang_getOverriddenCursors = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getOverriddenCursors",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -2650,11 +2657,11 @@
         }
     }
     public static final MethodHandle clang_disposeOverriddenCursors = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_disposeOverriddenCursors",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_disposeOverriddenCursors (MemoryAddress overridden) {
         try {
@@ -2664,11 +2671,11 @@
         }
     }
     public static final MethodHandle clang_getIncludedFile = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getIncludedFile",
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2686,11 +2693,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             C_INT.withName("xdata"),
             MemoryLayout.ofSequence(3, C_POINTER).withName("data")
-        ), false,
+        ),
             C_POINTER,
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("int_data"),
                 MemoryLayout.ofPaddingBits(32)
@@ -2709,11 +2716,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("int_data"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2731,11 +2738,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("begin_int_data"),
             C_INT.withName("end_int_data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2903,11 +2910,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2925,11 +2932,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -2947,11 +2954,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2969,11 +2976,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -2987,11 +2994,11 @@
         }
     }
     public static final MethodHandle clang_getEnumConstantDeclValue = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getEnumConstantDeclValue",
         "(Ljdk/incubator/foreign/MemorySegment;)J",
-        FunctionDescriptor.of(C_LONGLONG, false,
+        FunctionDescriptor.of(C_LONGLONG,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -3005,11 +3012,11 @@
         }
     }
     public static final MethodHandle clang_getEnumConstantDeclUnsignedValue = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getEnumConstantDeclUnsignedValue",
         "(Ljdk/incubator/foreign/MemorySegment;)J",
-        FunctionDescriptor.of(C_LONGLONG, false,
+        FunctionDescriptor.of(C_LONGLONG,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -3023,11 +3030,11 @@
         }
     }
     public static final MethodHandle clang_getFieldDeclBitWidth = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getFieldDeclBitWidth",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -3041,11 +3048,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_getNumArguments = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_getNumArguments",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -3063,11 +3070,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;I)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             C_INT.withName("xdata"),
             MemoryLayout.ofSequence(3, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -3092,11 +3099,11 @@
     public static final int CXTemplateArgumentKind_Pack = (int)8L;
     public static final int CXTemplateArgumentKind_Invalid = (int)9L;
     public static final MethodHandle clang_Cursor_getNumTemplateArguments = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_getNumTemplateArguments",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -3110,11 +3117,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_getTemplateArgumentKind = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_getTemplateArgumentKind",
         "(Ljdk/incubator/foreign/MemorySegment;I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -3133,11 +3140,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;I)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -3152,11 +3159,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_getTemplateArgumentValue = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_getTemplateArgumentValue",
         "(Ljdk/incubator/foreign/MemorySegment;I)J",
-        FunctionDescriptor.of(C_LONGLONG, false,
+        FunctionDescriptor.of(C_LONGLONG,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -3171,11 +3178,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_getTemplateArgumentUnsignedValue = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_getTemplateArgumentUnsignedValue",
         "(Ljdk/incubator/foreign/MemorySegment;I)J",
-        FunctionDescriptor.of(C_LONGLONG, false,
+        FunctionDescriptor.of(C_LONGLONG,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -3190,11 +3197,11 @@
         }
     }
     public static final MethodHandle clang_equalTypes = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_equalTypes",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             ),
@@ -3217,11 +3224,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3235,11 +3242,11 @@
         }
     }
     public static final MethodHandle clang_isConstQualifiedType = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isConstQualifiedType",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3253,11 +3260,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_isMacroFunctionLike = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_isMacroFunctionLike",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -3271,11 +3278,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_isMacroBuiltin = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_isMacroBuiltin",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -3289,11 +3296,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_isFunctionInlined = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_isFunctionInlined",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -3307,11 +3314,11 @@
         }
     }
     public static final MethodHandle clang_isVolatileQualifiedType = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isVolatileQualifiedType",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3325,11 +3332,11 @@
         }
     }
     public static final MethodHandle clang_isRestrictQualifiedType = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isRestrictQualifiedType",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3343,11 +3350,11 @@
         }
     }
     public static final MethodHandle clang_getAddressSpace = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getAddressSpace",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3365,11 +3372,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3387,11 +3394,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3409,11 +3416,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             C_INT.withName("xdata"),
             MemoryLayout.ofSequence(3, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3431,11 +3438,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -3453,11 +3460,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3475,11 +3482,11 @@
         "(I)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_INT
         )
     );
     public static final MemorySegment clang_getTypeKindSpelling (int K) {
         try {
@@ -3489,11 +3496,11 @@
         }
     }
     public static final MethodHandle clang_getFunctionTypeCallingConv = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getFunctionTypeCallingConv",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3511,11 +3518,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3529,11 +3536,11 @@
         }
     }
     public static final MethodHandle clang_getExceptionSpecificationType = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getExceptionSpecificationType",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3547,11 +3554,11 @@
         }
     }
     public static final MethodHandle clang_getNumArgTypes = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getNumArgTypes",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3569,11 +3576,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;I)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             ),
@@ -3592,11 +3599,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3610,11 +3617,11 @@
         }
     }
     public static final MethodHandle clang_Type_getNumObjCProtocolRefs = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Type_getNumObjCProtocolRefs",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3632,11 +3639,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;I)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             C_INT.withName("xdata"),
             MemoryLayout.ofSequence(3, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             ),
@@ -3651,11 +3658,11 @@
         }
     }
     public static final MethodHandle clang_Type_getNumObjCTypeArgs = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Type_getNumObjCTypeArgs",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3673,11 +3680,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;I)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             ),
@@ -3692,11 +3699,11 @@
         }
     }
     public static final MethodHandle clang_isFunctionTypeVariadic = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isFunctionTypeVariadic",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3714,11 +3721,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -3732,11 +3739,11 @@
         }
     }
     public static final MethodHandle clang_getCursorExceptionSpecificationType = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCursorExceptionSpecificationType",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -3750,11 +3757,11 @@
         }
     }
     public static final MethodHandle clang_isPODType = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isPODType",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3772,11 +3779,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3790,11 +3797,11 @@
         }
     }
     public static final MethodHandle clang_getNumElements = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getNumElements",
         "(Ljdk/incubator/foreign/MemorySegment;)J",
-        FunctionDescriptor.of(C_LONGLONG, false,
+        FunctionDescriptor.of(C_LONGLONG,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3812,11 +3819,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3830,11 +3837,11 @@
         }
     }
     public static final MethodHandle clang_getArraySize = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getArraySize",
         "(Ljdk/incubator/foreign/MemorySegment;)J",
-        FunctionDescriptor.of(C_LONGLONG, false,
+        FunctionDescriptor.of(C_LONGLONG,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3852,11 +3859,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3870,11 +3877,11 @@
         }
     }
     public static final MethodHandle clang_Type_isTransparentTagTypedef = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Type_isTransparentTagTypedef",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3892,11 +3899,11 @@
     public static final int CXTypeNullability_Unspecified = (int)2L;
     public static final int CXTypeNullability_Invalid = (int)3L;
     public static final MethodHandle clang_Type_getNullability = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Type_getNullability",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3916,11 +3923,11 @@
     public static final int CXTypeLayoutError_InvalidFieldName = (int)-5L;
     public static final int CXTypeLayoutError_Undeduced = (int)-6L;
     public static final MethodHandle clang_Type_getAlignOf = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Type_getAlignOf",
         "(Ljdk/incubator/foreign/MemorySegment;)J",
-        FunctionDescriptor.of(C_LONGLONG, false,
+        FunctionDescriptor.of(C_LONGLONG,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3938,11 +3945,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3956,11 +3963,11 @@
         }
     }
     public static final MethodHandle clang_Type_getSizeOf = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Type_getSizeOf",
         "(Ljdk/incubator/foreign/MemorySegment;)J",
-        FunctionDescriptor.of(C_LONGLONG, false,
+        FunctionDescriptor.of(C_LONGLONG,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -3974,11 +3981,11 @@
         }
     }
     public static final MethodHandle clang_Type_getOffsetOf = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Type_getOffsetOf",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)J",
-        FunctionDescriptor.of(C_LONGLONG, false,
+        FunctionDescriptor.of(C_LONGLONG,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             ),
@@ -3997,11 +4004,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -4015,11 +4022,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_getOffsetOfField = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_getOffsetOfField",
         "(Ljdk/incubator/foreign/MemorySegment;)J",
-        FunctionDescriptor.of(C_LONGLONG, false,
+        FunctionDescriptor.of(C_LONGLONG,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4033,11 +4040,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_isAnonymous = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_isAnonymous",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4051,11 +4058,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_isAnonymousRecordDecl = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_isAnonymousRecordDecl",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4069,11 +4076,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_isInlineNamespace = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_isInlineNamespace",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4090,11 +4097,11 @@
     public static final int CXRefQualifier_LValue = (int)1L;
     public static final int CXRefQualifier_RValue = (int)2L;
     public static final MethodHandle clang_Type_getNumTemplateArguments = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Type_getNumTemplateArguments",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -4112,11 +4119,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;I)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             ),
@@ -4131,11 +4138,11 @@
         }
     }
     public static final MethodHandle clang_Type_getCXXRefQualifier = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Type_getCXXRefQualifier",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             )
@@ -4149,11 +4156,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_isBitField = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_isBitField",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4167,11 +4174,11 @@
         }
     }
     public static final MethodHandle clang_isVirtualBase = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isVirtualBase",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4189,11 +4196,11 @@
     public static final int CX_CXXProtected = (int)2L;
     public static final int CX_CXXPrivate = (int)3L;
     public static final MethodHandle clang_getCXXAccessSpecifier = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCXXAccessSpecifier",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4215,11 +4222,11 @@
     public static final int CX_SC_Auto = (int)6L;
     public static final int CX_SC_Register = (int)7L;
     public static final MethodHandle clang_Cursor_getStorageClass = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_getStorageClass",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4233,11 +4240,11 @@
         }
     }
     public static final MethodHandle clang_getNumOverloadedDecls = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getNumOverloadedDecls",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4255,11 +4262,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;I)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             C_INT.withName("xdata"),
             MemoryLayout.ofSequence(3, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -4278,11 +4285,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4299,11 +4306,11 @@
     public static final int CXChildVisit_Continue = (int)1L;
     public static final int CXChildVisit_Recurse = (int)2L;
     public static final MethodHandle clang_visitChildren = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_visitChildren",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -4316,11 +4323,11 @@
             return (int)clang_visitChildren.invokeExact(parent, visitor, client_data);
         } catch (Throwable ex) {
             throw new AssertionError(ex);
         }
     }
-    private static final FunctionDescriptor clang_visitChildren$visitor$DESC = FunctionDescriptor.of(C_INT, false,
+    private static final FunctionDescriptor clang_visitChildren$visitor$DESC = FunctionDescriptor.of(C_INT,
         MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             C_INT.withName("xdata"),
             MemoryLayout.ofSequence(3, C_POINTER).withName("data")
         ),
@@ -4342,11 +4349,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4364,11 +4371,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER
         )
     );
     public static final MemorySegment clang_constructUSR_ObjCClass (MemoryAddress class_name) {
         try {
@@ -4382,11 +4389,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER,
             C_POINTER
         )
     );
     public static final MemorySegment clang_constructUSR_ObjCCategory (MemoryAddress class_name, MemoryAddress category_name) {
@@ -4401,11 +4408,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER
         )
     );
     public static final MemorySegment clang_constructUSR_ObjCProtocol (MemoryAddress protocol_name) {
         try {
@@ -4419,11 +4426,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER,
             MemoryLayout.ofStruct(
                 C_POINTER.withName("data"),
                 C_INT.withName("private_flags"),
                 MemoryLayout.ofPaddingBits(32)
@@ -4442,11 +4449,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER,
             C_INT,
             MemoryLayout.ofStruct(
                 C_POINTER.withName("data"),
                 C_INT.withName("private_flags"),
@@ -4466,11 +4473,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER,
             MemoryLayout.ofStruct(
                 C_POINTER.withName("data"),
                 C_INT.withName("private_flags"),
                 MemoryLayout.ofPaddingBits(32)
@@ -4489,11 +4496,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4511,11 +4518,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;II)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("begin_int_data"),
             C_INT.withName("end_int_data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -4558,11 +4565,11 @@
     public static final int CXPrintingPolicy_FullyQualifiedName = (int)25L;
     public static final int CXPrintingPolicy_LastProperty = (int)25L;
     public static final MethodHandle clang_PrintingPolicy_getProperty = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_PrintingPolicy_getProperty",
         "(Ljdk/incubator/foreign/MemoryAddress;I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_INT
         )
     );
     public static final int clang_PrintingPolicy_getProperty (MemoryAddress Policy, int Property) {
@@ -4573,11 +4580,11 @@
         }
     }
     public static final MethodHandle clang_PrintingPolicy_setProperty = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_PrintingPolicy_setProperty",
         "(Ljdk/incubator/foreign/MemoryAddress;II)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER,
             C_INT,
             C_INT
         )
     );
@@ -4589,11 +4596,11 @@
         }
     }
     public static final MethodHandle clang_getCursorPrintingPolicy = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCursorPrintingPolicy",
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4607,11 +4614,11 @@
         }
     }
     public static final MethodHandle clang_PrintingPolicy_dispose = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_PrintingPolicy_dispose",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_PrintingPolicy_dispose (MemoryAddress Policy) {
         try {
@@ -4625,11 +4632,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -4648,11 +4655,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4670,11 +4677,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             C_INT.withName("xdata"),
             MemoryLayout.ofSequence(3, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4692,11 +4699,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             C_INT.withName("xdata"),
             MemoryLayout.ofSequence(3, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4710,11 +4717,11 @@
         }
     }
     public static final MethodHandle clang_isCursorDefinition = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_isCursorDefinition",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4732,11 +4739,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             C_INT.withName("xdata"),
             MemoryLayout.ofSequence(3, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4750,11 +4757,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_getObjCSelectorIndex = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_getObjCSelectorIndex",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4768,11 +4775,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_isDynamicCall = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_isDynamicCall",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4790,11 +4797,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             MemoryLayout.ofPaddingBits(32),
             MemoryLayout.ofSequence(2, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4822,11 +4829,11 @@
     public static final int CXObjCPropertyAttr_unsafe_unretained = (int)2048L;
     public static final int CXObjCPropertyAttr_class = (int)4096L;
     public static final MethodHandle clang_Cursor_getObjCPropertyAttributes = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_getObjCPropertyAttributes",
         "(Ljdk/incubator/foreign/MemorySegment;I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -4845,11 +4852,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4867,11 +4874,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4892,11 +4899,11 @@
     public static final int CXObjCDeclQualifier_Byref = (int)16L;
     public static final int CXObjCDeclQualifier_Oneway = (int)32L;
     public static final MethodHandle clang_Cursor_getObjCDeclQualifiers = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_getObjCDeclQualifiers",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4910,11 +4917,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_isObjCOptional = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_isObjCOptional",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4928,11 +4935,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_isVariadic = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_isVariadic",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4946,11 +4953,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_isExternalSymbol = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_isExternalSymbol",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -4971,11 +4978,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("begin_int_data"),
             C_INT.withName("end_int_data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -4993,11 +5000,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5015,11 +5022,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5037,11 +5044,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5055,11 +5062,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_getCXXManglings = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_getCXXManglings",
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5073,11 +5080,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_getObjCManglings = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_getObjCManglings",
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5091,11 +5098,11 @@
         }
     }
     public static final MethodHandle clang_Cursor_getModule = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_getModule",
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5109,11 +5116,11 @@
         }
     }
     public static final MethodHandle clang_getModuleForFile = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getModuleForFile",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_getModuleForFile (MemoryAddress x0, MemoryAddress x1) {
@@ -5124,11 +5131,11 @@
         }
     }
     public static final MethodHandle clang_Module_getASTFile = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Module_getASTFile",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_Module_getASTFile (MemoryAddress Module) {
         try {
@@ -5138,11 +5145,11 @@
         }
     }
     public static final MethodHandle clang_Module_getParent = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Module_getParent",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_Module_getParent (MemoryAddress Module) {
         try {
@@ -5156,11 +5163,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER
         )
     );
     public static final MemorySegment clang_Module_getName (MemoryAddress Module) {
         try {
@@ -5174,11 +5181,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER
         )
     );
     public static final MemorySegment clang_Module_getFullName (MemoryAddress Module) {
         try {
@@ -5188,11 +5195,11 @@
         }
     }
     public static final MethodHandle clang_Module_isSystem = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Module_isSystem",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_Module_isSystem (MemoryAddress Module) {
         try {
@@ -5202,11 +5209,11 @@
         }
     }
     public static final MethodHandle clang_Module_getNumTopLevelHeaders = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Module_getNumTopLevelHeaders",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_POINTER
         )
     );
     public static final int clang_Module_getNumTopLevelHeaders (MemoryAddress x0, MemoryAddress Module) {
@@ -5217,11 +5224,11 @@
         }
     }
     public static final MethodHandle clang_Module_getTopLevelHeader = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Module_getTopLevelHeader",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER,
             C_POINTER,
             C_INT
         )
     );
@@ -5233,11 +5240,11 @@
         }
     }
     public static final MethodHandle clang_CXXConstructor_isConvertingConstructor = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_CXXConstructor_isConvertingConstructor",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5251,11 +5258,11 @@
         }
     }
     public static final MethodHandle clang_CXXConstructor_isCopyConstructor = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_CXXConstructor_isCopyConstructor",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5269,11 +5276,11 @@
         }
     }
     public static final MethodHandle clang_CXXConstructor_isDefaultConstructor = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_CXXConstructor_isDefaultConstructor",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5287,11 +5294,11 @@
         }
     }
     public static final MethodHandle clang_CXXConstructor_isMoveConstructor = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_CXXConstructor_isMoveConstructor",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5305,11 +5312,11 @@
         }
     }
     public static final MethodHandle clang_CXXField_isMutable = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_CXXField_isMutable",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5323,11 +5330,11 @@
         }
     }
     public static final MethodHandle clang_CXXMethod_isDefaulted = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_CXXMethod_isDefaulted",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5341,11 +5348,11 @@
         }
     }
     public static final MethodHandle clang_CXXMethod_isPureVirtual = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_CXXMethod_isPureVirtual",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5359,11 +5366,11 @@
         }
     }
     public static final MethodHandle clang_CXXMethod_isStatic = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_CXXMethod_isStatic",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5377,11 +5384,11 @@
         }
     }
     public static final MethodHandle clang_CXXMethod_isVirtual = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_CXXMethod_isVirtual",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5395,11 +5402,11 @@
         }
     }
     public static final MethodHandle clang_CXXRecord_isAbstract = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_CXXRecord_isAbstract",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5413,11 +5420,11 @@
         }
     }
     public static final MethodHandle clang_EnumDecl_isScoped = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_EnumDecl_isScoped",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5431,11 +5438,11 @@
         }
     }
     public static final MethodHandle clang_CXXMethod_isConst = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_CXXMethod_isConst",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5449,11 +5456,11 @@
         }
     }
     public static final MethodHandle clang_getTemplateCursorKind = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getTemplateCursorKind",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5471,11 +5478,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             C_INT.withName("xdata"),
             MemoryLayout.ofSequence(3, C_POINTER).withName("data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5493,11 +5500,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;II)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("begin_int_data"),
             C_INT.withName("end_int_data")
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -5525,11 +5532,11 @@
         C_POINTER.withName("ptr_data")
     );
     public static final MethodHandle clang_getToken = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getToken",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER,
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("int_data"),
                 MemoryLayout.ofPaddingBits(32)
@@ -5544,11 +5551,11 @@
         }
     }
     public static final MethodHandle clang_getTokenKind = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getTokenKind",
         "(Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(4, C_INT).withName("int_data"),
                 C_POINTER.withName("ptr_data")
             )
         )
@@ -5565,11 +5572,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER,
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(4, C_INT).withName("int_data"),
                 C_POINTER.withName("ptr_data")
             )
@@ -5587,11 +5594,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("int_data"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER,
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(4, C_INT).withName("int_data"),
                 C_POINTER.withName("ptr_data")
             )
@@ -5609,11 +5616,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("begin_int_data"),
             C_INT.withName("end_int_data")
-        ), false,
+        ),
             C_POINTER,
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(4, C_INT).withName("int_data"),
                 C_POINTER.withName("ptr_data")
             )
@@ -5627,11 +5634,11 @@
         }
     }
     public static final MethodHandle clang_tokenize = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_tokenize",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER,
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("begin_int_data"),
                 C_INT.withName("end_int_data")
@@ -5648,11 +5655,11 @@
         }
     }
     public static final MethodHandle clang_annotateTokens = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_annotateTokens",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER,
             C_POINTER,
             C_INT,
             C_POINTER
         )
@@ -5665,11 +5672,11 @@
         }
     }
     public static final MethodHandle clang_disposeTokens = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_disposeTokens",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER,
             C_POINTER,
             C_INT
         )
     );
@@ -5685,11 +5692,11 @@
         "(I)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_INT
         )
     );
     public static final MemorySegment clang_getCursorKindSpelling (int Kind) {
         try {
@@ -5699,11 +5706,11 @@
         }
     }
     public static final MethodHandle clang_getDefinitionSpellingAndExtent = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getDefinitionSpellingAndExtent",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -5723,11 +5730,11 @@
         }
     }
     public static final MethodHandle clang_enableStackTraces = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_enableStackTraces",
         "()V",
-        FunctionDescriptor.ofVoid(false)
+        FunctionDescriptor.ofVoid()
     );
     public static final void clang_enableStackTraces () {
         try {
             clang_enableStackTraces.invokeExact();
         } catch (Throwable ex) {
@@ -5735,11 +5742,11 @@
         }
     }
     public static final MethodHandle clang_executeOnThread = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_executeOnThread",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER,
             C_POINTER,
             C_INT
         )
     );
@@ -5748,11 +5755,11 @@
             clang_executeOnThread.invokeExact(fn, user_data, stack_size);
         } catch (Throwable ex) {
             throw new AssertionError(ex);
         }
     }
-    private static final FunctionDescriptor clang_executeOnThread$fn$DESC = FunctionDescriptor.ofVoid(false,
+    private static final FunctionDescriptor clang_executeOnThread$fn$DESC = FunctionDescriptor.ofVoid(
         C_POINTER
     );
     public interface clang_executeOnThread$fn {
         void apply(MemoryAddress x0);
     }
@@ -5793,11 +5800,11 @@
     public static final int CXCompletionChunk_HorizontalSpace = (int)19L;
     public static final int CXCompletionChunk_VerticalSpace = (int)20L;
     public static final MethodHandle clang_getCompletionChunkKind = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCompletionChunkKind",
         "(Ljdk/incubator/foreign/MemoryAddress;I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_INT
         )
     );
     public static final int clang_getCompletionChunkKind (MemoryAddress completion_string, int chunk_number) {
@@ -5812,11 +5819,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER,
             C_INT
         )
     );
     public static final MemorySegment clang_getCompletionChunkText (MemoryAddress completion_string, int chunk_number) {
@@ -5827,11 +5834,11 @@
         }
     }
     public static final MethodHandle clang_getCompletionChunkCompletionString = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCompletionChunkCompletionString",
         "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER,
             C_INT
         )
     );
     public static final MemoryAddress clang_getCompletionChunkCompletionString (MemoryAddress completion_string, int chunk_number) {
@@ -5842,11 +5849,11 @@
         }
     }
     public static final MethodHandle clang_getNumCompletionChunks = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getNumCompletionChunks",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_getNumCompletionChunks (MemoryAddress completion_string) {
         try {
@@ -5856,11 +5863,11 @@
         }
     }
     public static final MethodHandle clang_getCompletionPriority = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCompletionPriority",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_getCompletionPriority (MemoryAddress completion_string) {
         try {
@@ -5870,11 +5877,11 @@
         }
     }
     public static final MethodHandle clang_getCompletionAvailability = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCompletionAvailability",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_getCompletionAvailability (MemoryAddress completion_string) {
         try {
@@ -5884,11 +5891,11 @@
         }
     }
     public static final MethodHandle clang_getCompletionNumAnnotations = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCompletionNumAnnotations",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_getCompletionNumAnnotations (MemoryAddress completion_string) {
         try {
@@ -5902,11 +5909,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER,
             C_INT
         )
     );
     public static final MemorySegment clang_getCompletionAnnotation (MemoryAddress completion_string, int annotation_number) {
@@ -5921,11 +5928,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER,
             C_POINTER
         )
     );
     public static final MemorySegment clang_getCompletionParent (MemoryAddress completion_string, MemoryAddress kind) {
@@ -5940,11 +5947,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER
         )
     );
     public static final MemorySegment clang_getCompletionBriefComment (MemoryAddress completion_string) {
         try {
@@ -5954,11 +5961,11 @@
         }
     }
     public static final MethodHandle clang_getCursorCompletionString = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCursorCompletionString",
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -5984,11 +5991,11 @@
         CXCodeCompleteResults$NumResults.set(seg.baseAddress(), x);
     }
     public static final MethodHandle clang_getCompletionNumFixIts = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getCompletionNumFixIts",
         "(Ljdk/incubator/foreign/MemoryAddress;I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_INT
         )
     );
     public static final int clang_getCompletionNumFixIts (MemoryAddress results, int completion_index) {
@@ -6003,11 +6010,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER,
             C_INT,
             C_INT,
             C_POINTER
         )
@@ -6050,11 +6057,11 @@
     public static final int CXCompletionContext_IncludedFile = (int)4194304L;
     public static final int CXCompletionContext_Unknown = (int)8388607L;
     public static final MethodHandle clang_defaultCodeCompleteOptions = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_defaultCodeCompleteOptions",
         "()I",
-        FunctionDescriptor.of(C_INT, false)
+        FunctionDescriptor.of(C_INT)
     );
     public static final int clang_defaultCodeCompleteOptions () {
         try {
             return (int)clang_defaultCodeCompleteOptions.invokeExact();
         } catch (Throwable ex) {
@@ -6062,11 +6069,11 @@
         }
     }
     public static final MethodHandle clang_codeCompleteAt = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_codeCompleteAt",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;II)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER,
             C_POINTER,
             C_INT,
             C_INT,
             C_POINTER,
@@ -6082,11 +6089,11 @@
         }
     }
     public static final MethodHandle clang_sortCodeCompletionResults = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_sortCodeCompletionResults",
         "(Ljdk/incubator/foreign/MemoryAddress;I)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER,
             C_INT
         )
     );
     public static final void clang_sortCodeCompletionResults (MemoryAddress Results, int NumResults) {
@@ -6097,11 +6104,11 @@
         }
     }
     public static final MethodHandle clang_disposeCodeCompleteResults = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_disposeCodeCompleteResults",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_disposeCodeCompleteResults (MemoryAddress Results) {
         try {
@@ -6111,11 +6118,11 @@
         }
     }
     public static final MethodHandle clang_codeCompleteGetNumDiagnostics = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_codeCompleteGetNumDiagnostics",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_codeCompleteGetNumDiagnostics (MemoryAddress Results) {
         try {
@@ -6125,11 +6132,11 @@
         }
     }
     public static final MethodHandle clang_codeCompleteGetDiagnostic = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_codeCompleteGetDiagnostic",
         "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER,
             C_INT
         )
     );
     public static final MemoryAddress clang_codeCompleteGetDiagnostic (MemoryAddress Results, int Index) {
@@ -6140,11 +6147,11 @@
         }
     }
     public static final MethodHandle clang_codeCompleteGetContexts = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_codeCompleteGetContexts",
         "(Ljdk/incubator/foreign/MemoryAddress;)J",
-        FunctionDescriptor.of(C_LONGLONG, false,
+        FunctionDescriptor.of(C_LONGLONG,
             C_POINTER
         )
     );
     public static final long clang_codeCompleteGetContexts (MemoryAddress Results) {
         try {
@@ -6154,11 +6161,11 @@
         }
     }
     public static final MethodHandle clang_codeCompleteGetContainerKind = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_codeCompleteGetContainerKind",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_POINTER
         )
     );
     public static final int clang_codeCompleteGetContainerKind (MemoryAddress Results, MemoryAddress IsIncomplete) {
@@ -6173,11 +6180,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER
         )
     );
     public static final MemorySegment clang_codeCompleteGetContainerUSR (MemoryAddress Results) {
         try {
@@ -6191,11 +6198,11 @@
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             C_POINTER
         )
     );
     public static final MemorySegment clang_codeCompleteGetObjCSelector (MemoryAddress Results) {
         try {
@@ -6209,11 +6216,11 @@
         "()Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             C_POINTER.withName("data"),
             C_INT.withName("private_flags"),
             MemoryLayout.ofPaddingBits(32)
-        ), false)
+        ))
     );
     public static final MemorySegment clang_getClangVersion () {
         try {
             return (MemorySegment)clang_getClangVersion.invokeExact();
         } catch (Throwable ex) {
@@ -6221,11 +6228,11 @@
         }
     }
     public static final MethodHandle clang_toggleCrashRecovery = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_toggleCrashRecovery",
         "(I)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_INT
         )
     );
     public static final void clang_toggleCrashRecovery (int isEnabled) {
         try {
@@ -6235,11 +6242,11 @@
         }
     }
     public static final MethodHandle clang_getInclusions = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getInclusions",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER,
             C_POINTER,
             C_POINTER
         )
     );
@@ -6248,11 +6255,11 @@
             clang_getInclusions.invokeExact(tu, visitor, client_data);
         } catch (Throwable ex) {
             throw new AssertionError(ex);
         }
     }
-    private static final FunctionDescriptor clang_getInclusions$visitor$DESC = FunctionDescriptor.ofVoid(false,
+    private static final FunctionDescriptor clang_getInclusions$visitor$DESC = FunctionDescriptor.ofVoid(
         C_POINTER,
         C_POINTER,
         C_INT,
         C_POINTER
     );
@@ -6270,11 +6277,11 @@
     public static final int CXEval_Other = (int)6L;
     public static final int CXEval_UnExposed = (int)0L;
     public static final MethodHandle clang_Cursor_Evaluate = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Cursor_Evaluate",
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             )
@@ -6288,11 +6295,11 @@
         }
     }
     public static final MethodHandle clang_EvalResult_getKind = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_EvalResult_getKind",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_EvalResult_getKind (MemoryAddress E) {
         try {
@@ -6302,11 +6309,11 @@
         }
     }
     public static final MethodHandle clang_EvalResult_getAsInt = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_EvalResult_getAsInt",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_EvalResult_getAsInt (MemoryAddress E) {
         try {
@@ -6316,11 +6323,11 @@
         }
     }
     public static final MethodHandle clang_EvalResult_getAsLongLong = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_EvalResult_getAsLongLong",
         "(Ljdk/incubator/foreign/MemoryAddress;)J",
-        FunctionDescriptor.of(C_LONGLONG, false,
+        FunctionDescriptor.of(C_LONGLONG,
             C_POINTER
         )
     );
     public static final long clang_EvalResult_getAsLongLong (MemoryAddress E) {
         try {
@@ -6330,11 +6337,11 @@
         }
     }
     public static final MethodHandle clang_EvalResult_isUnsignedInt = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_EvalResult_isUnsignedInt",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_EvalResult_isUnsignedInt (MemoryAddress E) {
         try {
@@ -6344,11 +6351,11 @@
         }
     }
     public static final MethodHandle clang_EvalResult_getAsUnsigned = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_EvalResult_getAsUnsigned",
         "(Ljdk/incubator/foreign/MemoryAddress;)J",
-        FunctionDescriptor.of(C_LONGLONG, false,
+        FunctionDescriptor.of(C_LONGLONG,
             C_POINTER
         )
     );
     public static final long clang_EvalResult_getAsUnsigned (MemoryAddress E) {
         try {
@@ -6358,11 +6365,11 @@
         }
     }
     public static final MethodHandle clang_EvalResult_getAsDouble = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_EvalResult_getAsDouble",
         "(Ljdk/incubator/foreign/MemoryAddress;)D",
-        FunctionDescriptor.of(C_DOUBLE, false,
+        FunctionDescriptor.of(C_DOUBLE,
             C_POINTER
         )
     );
     public static final double clang_EvalResult_getAsDouble (MemoryAddress E) {
         try {
@@ -6372,11 +6379,11 @@
         }
     }
     public static final MethodHandle clang_EvalResult_getAsStr = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_EvalResult_getAsStr",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_EvalResult_getAsStr (MemoryAddress E) {
         try {
@@ -6386,11 +6393,11 @@
         }
     }
     public static final MethodHandle clang_EvalResult_dispose = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_EvalResult_dispose",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_EvalResult_dispose (MemoryAddress E) {
         try {
@@ -6400,11 +6407,11 @@
         }
     }
     public static final MethodHandle clang_getRemappings = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getRemappings",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_getRemappings (MemoryAddress path) {
         try {
@@ -6414,11 +6421,11 @@
         }
     }
     public static final MethodHandle clang_getRemappingsFromFileList = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_getRemappingsFromFileList",
         "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER,
             C_INT
         )
     );
     public static final MemoryAddress clang_getRemappingsFromFileList (MemoryAddress filePaths, int numFiles) {
@@ -6429,11 +6436,11 @@
         }
     }
     public static final MethodHandle clang_remap_getNumFiles = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_remap_getNumFiles",
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER
         )
     );
     public static final int clang_remap_getNumFiles (MemoryAddress x0) {
         try {
@@ -6443,11 +6450,11 @@
         }
     }
     public static final MethodHandle clang_remap_getFilenames = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_remap_getFilenames",
         "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER,
             C_INT,
             C_POINTER,
             C_POINTER
         )
@@ -6460,11 +6467,11 @@
         }
     }
     public static final MethodHandle clang_remap_dispose = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_remap_dispose",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_remap_dispose (MemoryAddress x0) {
         try {
@@ -6483,11 +6490,11 @@
     public static final int CXResult_Invalid = (int)1L;
     public static final int CXResult_VisitBreak = (int)2L;
     public static final MethodHandle clang_findReferencesInFile = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_findReferencesInFile",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 C_INT.withName("xdata"),
                 MemoryLayout.ofSequence(3, C_POINTER).withName("data")
             ),
@@ -6506,11 +6513,11 @@
         }
     }
     public static final MethodHandle clang_findIncludesInFile = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_findIncludesInFile",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_POINTER,
             MemoryLayout.ofStruct(
                 C_POINTER.withName("context"),
                 C_POINTER.withName("visit")
@@ -6929,11 +6936,11 @@
         C_POINTER.withName("indexEntityReference")
     );
     public static final MethodHandle clang_index_isEntityObjCContainerKind = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_index_isEntityObjCContainerKind",
         "(I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_INT
         )
     );
     public static final int clang_index_isEntityObjCContainerKind (int x0) {
         try {
@@ -6943,11 +6950,11 @@
         }
     }
     public static final MethodHandle clang_index_getObjCContainerDeclInfo = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_index_getObjCContainerDeclInfo",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_index_getObjCContainerDeclInfo (MemoryAddress x0) {
         try {
@@ -6957,11 +6964,11 @@
         }
     }
     public static final MethodHandle clang_index_getObjCInterfaceDeclInfo = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_index_getObjCInterfaceDeclInfo",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_index_getObjCInterfaceDeclInfo (MemoryAddress x0) {
         try {
@@ -6971,11 +6978,11 @@
         }
     }
     public static final MethodHandle clang_index_getObjCCategoryDeclInfo = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_index_getObjCCategoryDeclInfo",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_index_getObjCCategoryDeclInfo (MemoryAddress x0) {
         try {
@@ -6985,11 +6992,11 @@
         }
     }
     public static final MethodHandle clang_index_getObjCProtocolRefListInfo = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_index_getObjCProtocolRefListInfo",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_index_getObjCProtocolRefListInfo (MemoryAddress x0) {
         try {
@@ -6999,11 +7006,11 @@
         }
     }
     public static final MethodHandle clang_index_getObjCPropertyDeclInfo = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_index_getObjCPropertyDeclInfo",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_index_getObjCPropertyDeclInfo (MemoryAddress x0) {
         try {
@@ -7013,11 +7020,11 @@
         }
     }
     public static final MethodHandle clang_index_getIBOutletCollectionAttrInfo = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_index_getIBOutletCollectionAttrInfo",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_index_getIBOutletCollectionAttrInfo (MemoryAddress x0) {
         try {
@@ -7027,11 +7034,11 @@
         }
     }
     public static final MethodHandle clang_index_getCXXClassDeclInfo = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_index_getCXXClassDeclInfo",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_index_getCXXClassDeclInfo (MemoryAddress x0) {
         try {
@@ -7041,11 +7048,11 @@
         }
     }
     public static final MethodHandle clang_index_getClientContainer = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_index_getClientContainer",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_index_getClientContainer (MemoryAddress x0) {
         try {
@@ -7055,11 +7062,11 @@
         }
     }
     public static final MethodHandle clang_index_setClientContainer = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_index_setClientContainer",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER,
             C_POINTER
         )
     );
     public static final void clang_index_setClientContainer (MemoryAddress x0, MemoryAddress x1) {
@@ -7070,11 +7077,11 @@
         }
     }
     public static final MethodHandle clang_index_getClientEntity = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_index_getClientEntity",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_index_getClientEntity (MemoryAddress x0) {
         try {
@@ -7084,11 +7091,11 @@
         }
     }
     public static final MethodHandle clang_index_setClientEntity = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_index_setClientEntity",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER,
             C_POINTER
         )
     );
     public static final void clang_index_setClientEntity (MemoryAddress x0, MemoryAddress x1) {
@@ -7099,11 +7106,11 @@
         }
     }
     public static final MethodHandle clang_IndexAction_create = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_IndexAction_create",
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        FunctionDescriptor.of(C_POINTER, false,
+        FunctionDescriptor.of(C_POINTER,
             C_POINTER
         )
     );
     public static final MemoryAddress clang_IndexAction_create (MemoryAddress CIdx) {
         try {
@@ -7113,11 +7120,11 @@
         }
     }
     public static final MethodHandle clang_IndexAction_dispose = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_IndexAction_dispose",
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             C_POINTER
         )
     );
     public static final void clang_IndexAction_dispose (MemoryAddress x0) {
         try {
@@ -7133,11 +7140,11 @@
     public static final int CXIndexOpt_SuppressWarnings = (int)8L;
     public static final int CXIndexOpt_SkipParsedBodiesInSession = (int)16L;
     public static final MethodHandle clang_indexSourceFile = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_indexSourceFile",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_POINTER,
             C_POINTER,
             C_INT,
             C_INT,
@@ -7158,11 +7165,11 @@
         }
     }
     public static final MethodHandle clang_indexSourceFileFullArgv = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_indexSourceFileFullArgv",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_POINTER,
             C_POINTER,
             C_INT,
             C_INT,
@@ -7183,11 +7190,11 @@
         }
     }
     public static final MethodHandle clang_indexTranslationUnit = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_indexTranslationUnit",
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             C_POINTER,
             C_POINTER,
             C_POINTER,
             C_INT,
             C_INT,
@@ -7202,11 +7209,11 @@
         }
     }
     public static final MethodHandle clang_indexLoc_getFileLocation = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_indexLoc_getFileLocation",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        FunctionDescriptor.ofVoid(false,
+        FunctionDescriptor.ofVoid(
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("int_data"),
                 MemoryLayout.ofPaddingBits(32)
             ),
@@ -7229,11 +7236,11 @@
         "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemorySegment;",
         FunctionDescriptor.of(MemoryLayout.ofStruct(
             MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
             C_INT.withName("int_data"),
             MemoryLayout.ofPaddingBits(32)
-        ), false,
+        ),
             MemoryLayout.ofStruct(
                 MemoryLayout.ofSequence(2, C_POINTER).withName("ptr_data"),
                 C_INT.withName("int_data"),
                 MemoryLayout.ofPaddingBits(32)
             )
@@ -7247,11 +7254,11 @@
         }
     }
     public static final MethodHandle clang_Type_visitFields = RuntimeHelper.downcallHandle(
         LIBRARIES, "clang_Type_visitFields",
         "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        FunctionDescriptor.of(C_INT, false,
+        FunctionDescriptor.of(C_INT,
             MemoryLayout.ofStruct(
                 C_INT.withName("kind"),
                 MemoryLayout.ofPaddingBits(32),
                 MemoryLayout.ofSequence(2, C_POINTER).withName("data")
             ),
@@ -7264,11 +7271,11 @@
             return (int)clang_Type_visitFields.invokeExact(T, visitor, client_data);
         } catch (Throwable ex) {
             throw new AssertionError(ex);
         }
     }
-    private static final FunctionDescriptor clang_Type_visitFields$visitor$DESC = FunctionDescriptor.of(C_INT, false,
+    private static final FunctionDescriptor clang_Type_visitFields$visitor$DESC = FunctionDescriptor.of(C_INT,
         MemoryLayout.ofStruct(
             C_INT.withName("kind"),
             C_INT.withName("xdata"),
             MemoryLayout.ofSequence(3, C_POINTER).withName("data")
         ),
diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/LayoutUtils.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/LayoutUtils.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/LayoutUtils.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/LayoutUtils.java
@@ -178,13 +178,13 @@
             MemoryLayout[] args = t.argumentTypes().stream()
                     .map(LayoutUtils::getLayoutInternal)
                     .toArray(MemoryLayout[]::new);
             if (t.returnType() instanceof jdk.incubator.jextract.Type.Primitive &&
                     ((jdk.incubator.jextract.Type.Primitive) t.returnType()).kind() == jdk.incubator.jextract.Type.Primitive.Kind.Void) {
-                return Optional.of(FunctionDescriptor.ofVoid(t.varargs(), args));
+                return Optional.of(FunctionDescriptor.ofVoid(args));
             } else {
-                return Optional.of(FunctionDescriptor.of(getLayoutInternal(t.returnType()), t.varargs(), args));
+                return Optional.of(FunctionDescriptor.of(getLayoutInternal(t.returnType()), args));
             }
         } catch (Throwable ex) {
             return Optional.empty();
         }
     }
diff a/test/jdk/tools/jextract/testStruct/struct.h b/test/jdk/tools/jextract/testStruct/struct.h
--- a/test/jdk/tools/jextract/testStruct/struct.h
+++ b/test/jdk/tools/jextract/testStruct/struct.h
@@ -34,10 +34,10 @@
 typedef struct Point {
     int x;
     int y;
 } Point;
 
-Point makePoint(int x, int y);
+EXPORT Point makePoint(int x, int y);
 
 #ifdef __cplusplus
 }
 #endif // __cplusplus
